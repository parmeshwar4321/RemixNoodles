{
	"id": "4b9c5f1ce230b431a431981813c8a07e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tut.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8244:8250  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_22:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_64:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_67:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_23:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_69\n    /* \"#utility.yul\":2053:2102   */\n  tag_70\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_21\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2037:2103   */\n  tag_20\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_72\n  tag_16\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2178:2290   */\ntag_71:\n    /* \"#utility.yul\":2299:2338   */\n  tag_73\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_22\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_24:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_76\n  tag_15\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2447:2569   */\ntag_75:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_77\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_23\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3249   */\ntag_3:\n    /* \"#utility.yul\":2805:2811   */\n  0x00\n    /* \"#utility.yul\":2854:2856   */\n  0x20\n    /* \"#utility.yul\":2842:2851   */\n  dup3\n    /* \"#utility.yul\":2833:2840   */\n  dup5\n    /* \"#utility.yul\":2829:2852   */\n  sub\n    /* \"#utility.yul\":2825:2857   */\n  slt\n    /* \"#utility.yul\":2822:2941   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2860:2939   */\n  tag_80\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2822:2941   */\ntag_79:\n    /* \"#utility.yul\":3001:3002   */\n  0x00\n    /* \"#utility.yul\":2990:2999   */\n  dup3\n    /* \"#utility.yul\":2986:3003   */\n  add\n    /* \"#utility.yul\":2980:3004   */\n  mload\n    /* \"#utility.yul\":3031:3049   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3023:3029   */\n  dup2\n    /* \"#utility.yul\":3020:3050   */\n  gt\n    /* \"#utility.yul\":3017:3134   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3053:3132   */\n  tag_82\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3017:3134   */\ntag_81:\n    /* \"#utility.yul\":3158:3232   */\n  tag_83\n    /* \"#utility.yul\":3224:3231   */\n  dup5\n    /* \"#utility.yul\":3215:3221   */\n  dup3\n    /* \"#utility.yul\":3204:3213   */\n  dup6\n    /* \"#utility.yul\":3200:3222   */\n  add\n    /* \"#utility.yul\":3158:3232   */\n  tag_24\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3148:3232   */\n  swap2\n  pop\n    /* \"#utility.yul\":2951:3242   */\n  pop\n    /* \"#utility.yul\":2725:3249   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3354   */\ntag_25:\n    /* \"#utility.yul\":3307:3313   */\n  0x00\n    /* \"#utility.yul\":3341:3346   */\n  dup2\n    /* \"#utility.yul\":3335:3347   */\n  mload\n    /* \"#utility.yul\":3325:3347   */\n  swap1\n  pop\n    /* \"#utility.yul\":3255:3354   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3360:3540   */\ntag_26:\n    /* \"#utility.yul\":3408:3485   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3405:3406   */\n  0x00\n    /* \"#utility.yul\":3398:3486   */\n  mstore\n    /* \"#utility.yul\":3505:3509   */\n  0x22\n    /* \"#utility.yul\":3502:3503   */\n  0x04\n    /* \"#utility.yul\":3495:3510   */\n  mstore\n    /* \"#utility.yul\":3529:3533   */\n  0x24\n    /* \"#utility.yul\":3526:3527   */\n  0x00\n    /* \"#utility.yul\":3519:3534   */\n  revert\n    /* \"#utility.yul\":3546:3866   */\ntag_27:\n    /* \"#utility.yul\":3590:3596   */\n  0x00\n    /* \"#utility.yul\":3627:3628   */\n  0x02\n    /* \"#utility.yul\":3621:3625   */\n  dup3\n    /* \"#utility.yul\":3617:3629   */\n  div\n    /* \"#utility.yul\":3607:3629   */\n  swap1\n  pop\n    /* \"#utility.yul\":3674:3675   */\n  0x01\n    /* \"#utility.yul\":3668:3672   */\n  dup3\n    /* \"#utility.yul\":3664:3676   */\n  and\n    /* \"#utility.yul\":3695:3713   */\n  dup1\n    /* \"#utility.yul\":3685:3766   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3751:3755   */\n  0x7f\n    /* \"#utility.yul\":3743:3749   */\n  dup3\n    /* \"#utility.yul\":3739:3756   */\n  and\n    /* \"#utility.yul\":3729:3756   */\n  swap2\n  pop\n    /* \"#utility.yul\":3685:3766   */\ntag_87:\n    /* \"#utility.yul\":3813:3815   */\n  0x20\n    /* \"#utility.yul\":3805:3811   */\n  dup3\n    /* \"#utility.yul\":3802:3816   */\n  lt\n    /* \"#utility.yul\":3782:3800   */\n  dup2\n    /* \"#utility.yul\":3779:3817   */\n  sub\n    /* \"#utility.yul\":3776:3860   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3832:3850   */\n  tag_89\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3776:3860   */\ntag_88:\n    /* \"#utility.yul\":3597:3866   */\n  pop\n    /* \"#utility.yul\":3546:3866   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3872:4013   */\ntag_28:\n    /* \"#utility.yul\":3921:3925   */\n  0x00\n    /* \"#utility.yul\":3944:3947   */\n  dup2\n    /* \"#utility.yul\":3936:3947   */\n  swap1\n  pop\n    /* \"#utility.yul\":3967:3970   */\n  dup2\n    /* \"#utility.yul\":3964:3965   */\n  0x00\n    /* \"#utility.yul\":3957:3971   */\n  mstore\n    /* \"#utility.yul\":4001:4005   */\n  0x20\n    /* \"#utility.yul\":3998:3999   */\n  0x00\n    /* \"#utility.yul\":3988:4006   */\n  keccak256\n    /* \"#utility.yul\":3980:4006   */\n  swap1\n  pop\n    /* \"#utility.yul\":3872:4013   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4019:4112   */\ntag_29:\n    /* \"#utility.yul\":4056:4062   */\n  0x00\n    /* \"#utility.yul\":4103:4105   */\n  0x20\n    /* \"#utility.yul\":4098:4100   */\n  0x1f\n    /* \"#utility.yul\":4091:4096   */\n  dup4\n    /* \"#utility.yul\":4087:4101   */\n  add\n    /* \"#utility.yul\":4083:4106   */\n  div\n    /* \"#utility.yul\":4073:4106   */\n  swap1\n  pop\n    /* \"#utility.yul\":4019:4112   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4118:4225   */\ntag_30:\n    /* \"#utility.yul\":4162:4170   */\n  0x00\n    /* \"#utility.yul\":4212:4217   */\n  dup3\n    /* \"#utility.yul\":4206:4210   */\n  dup3\n    /* \"#utility.yul\":4202:4218   */\n  shl\n    /* \"#utility.yul\":4181:4218   */\n  swap1\n  pop\n    /* \"#utility.yul\":4118:4225   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4231:4624   */\ntag_31:\n    /* \"#utility.yul\":4300:4306   */\n  0x00\n    /* \"#utility.yul\":4350:4351   */\n  0x08\n    /* \"#utility.yul\":4338:4348   */\n  dup4\n    /* \"#utility.yul\":4334:4352   */\n  mul\n    /* \"#utility.yul\":4373:4470   */\n  tag_94\n    /* \"#utility.yul\":4403:4469   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4392:4401   */\n  dup3\n    /* \"#utility.yul\":4373:4470   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4491:4530   */\n  tag_95\n    /* \"#utility.yul\":4521:4529   */\n  dup7\n    /* \"#utility.yul\":4510:4519   */\n  dup4\n    /* \"#utility.yul\":4491:4530   */\n  tag_30\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4479:4530   */\n  swap6\n  pop\n    /* \"#utility.yul\":4563:4567   */\n  dup1\n    /* \"#utility.yul\":4559:4568   */\n  not\n    /* \"#utility.yul\":4552:4557   */\n  dup5\n    /* \"#utility.yul\":4548:4569   */\n  and\n    /* \"#utility.yul\":4539:4569   */\n  swap4\n  pop\n    /* \"#utility.yul\":4612:4616   */\n  dup1\n    /* \"#utility.yul\":4602:4610   */\n  dup7\n    /* \"#utility.yul\":4598:4617   */\n  and\n    /* \"#utility.yul\":4591:4596   */\n  dup5\n    /* \"#utility.yul\":4588:4618   */\n  or\n    /* \"#utility.yul\":4578:4618   */\n  swap3\n  pop\n    /* \"#utility.yul\":4307:4624   */\n  pop\n  pop\n    /* \"#utility.yul\":4231:4624   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4630:4707   */\ntag_32:\n    /* \"#utility.yul\":4667:4674   */\n  0x00\n    /* \"#utility.yul\":4696:4701   */\n  dup2\n    /* \"#utility.yul\":4685:4701   */\n  swap1\n  pop\n    /* \"#utility.yul\":4630:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4773   */\ntag_33:\n    /* \"#utility.yul\":4741:4744   */\n  0x00\n    /* \"#utility.yul\":4762:4767   */\n  dup2\n    /* \"#utility.yul\":4755:4767   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4773   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4779:4921   */\ntag_34:\n    /* \"#utility.yul\":4829:4838   */\n  0x00\n    /* \"#utility.yul\":4862:4915   */\n  tag_99\n    /* \"#utility.yul\":4880:4914   */\n  tag_100\n    /* \"#utility.yul\":4889:4913   */\n  tag_101\n    /* \"#utility.yul\":4907:4912   */\n  dup5\n    /* \"#utility.yul\":4889:4913   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4880:4914   */\n  tag_33\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4862:4915   */\n  tag_32\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4849:4915   */\n  swap1\n  pop\n    /* \"#utility.yul\":4779:4921   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4927:5002   */\ntag_35:\n    /* \"#utility.yul\":4970:4973   */\n  0x00\n    /* \"#utility.yul\":4991:4996   */\n  dup2\n    /* \"#utility.yul\":4984:4996   */\n  swap1\n  pop\n    /* \"#utility.yul\":4927:5002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5008:5277   */\ntag_36:\n    /* \"#utility.yul\":5118:5157   */\n  tag_104\n    /* \"#utility.yul\":5149:5156   */\n  dup4\n    /* \"#utility.yul\":5118:5157   */\n  tag_34\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5179:5270   */\n  tag_105\n    /* \"#utility.yul\":5228:5269   */\n  tag_106\n    /* \"#utility.yul\":5252:5268   */\n  dup3\n    /* \"#utility.yul\":5228:5269   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5220:5226   */\n  dup5\n    /* \"#utility.yul\":5213:5217   */\n  dup5\n    /* \"#utility.yul\":5207:5218   */\n  sload\n    /* \"#utility.yul\":5179:5270   */\n  tag_31\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5173:5177   */\n  dup3\n    /* \"#utility.yul\":5166:5271   */\n  sstore\n    /* \"#utility.yul\":5084:5277   */\n  pop\n    /* \"#utility.yul\":5008:5277   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5283:5356   */\ntag_37:\n    /* \"#utility.yul\":5328:5331   */\n  0x00\n    /* \"#utility.yul\":5283:5356   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5362:5551   */\ntag_38:\n    /* \"#utility.yul\":5439:5471   */\n  tag_109\n  tag_37\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5480:5545   */\n  tag_110\n    /* \"#utility.yul\":5538:5544   */\n  dup2\n    /* \"#utility.yul\":5530:5536   */\n  dup5\n    /* \"#utility.yul\":5524:5528   */\n  dup5\n    /* \"#utility.yul\":5480:5545   */\n  tag_36\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5415:5551   */\n  pop\n    /* \"#utility.yul\":5362:5551   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5557:5743   */\ntag_39:\n    /* \"#utility.yul\":5617:5737   */\ntag_112:\n    /* \"#utility.yul\":5634:5637   */\n  dup2\n    /* \"#utility.yul\":5627:5632   */\n  dup2\n    /* \"#utility.yul\":5624:5638   */\n  lt\n    /* \"#utility.yul\":5617:5737   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5688:5727   */\n  tag_115\n    /* \"#utility.yul\":5725:5726   */\n  0x00\n    /* \"#utility.yul\":5718:5723   */\n  dup3\n    /* \"#utility.yul\":5688:5727   */\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5661:5662   */\n  0x01\n    /* \"#utility.yul\":5654:5659   */\n  dup2\n    /* \"#utility.yul\":5650:5663   */\n  add\n    /* \"#utility.yul\":5641:5663   */\n  swap1\n  pop\n    /* \"#utility.yul\":5617:5737   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5557:5743   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5749:6292   */\ntag_40:\n    /* \"#utility.yul\":5850:5852   */\n  0x1f\n    /* \"#utility.yul\":5845:5848   */\n  dup3\n    /* \"#utility.yul\":5842:5853   */\n  gt\n    /* \"#utility.yul\":5839:6285   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5884:5922   */\n  tag_118\n    /* \"#utility.yul\":5916:5921   */\n  dup2\n    /* \"#utility.yul\":5884:5922   */\n  tag_28\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5968:5997   */\n  tag_119\n    /* \"#utility.yul\":5986:5996   */\n  dup5\n    /* \"#utility.yul\":5968:5997   */\n  tag_29\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5958:5966   */\n  dup2\n    /* \"#utility.yul\":5954:5998   */\n  add\n    /* \"#utility.yul\":6151:6153   */\n  0x20\n    /* \"#utility.yul\":6139:6149   */\n  dup6\n    /* \"#utility.yul\":6136:6154   */\n  lt\n    /* \"#utility.yul\":6133:6182   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6172:6180   */\n  dup2\n    /* \"#utility.yul\":6157:6180   */\n  swap1\n  pop\n    /* \"#utility.yul\":6133:6182   */\ntag_120:\n    /* \"#utility.yul\":6195:6275   */\n  tag_121\n    /* \"#utility.yul\":6251:6273   */\n  tag_122\n    /* \"#utility.yul\":6269:6272   */\n  dup6\n    /* \"#utility.yul\":6251:6273   */\n  tag_29\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6241:6249   */\n  dup4\n    /* \"#utility.yul\":6237:6274   */\n  add\n    /* \"#utility.yul\":6224:6235   */\n  dup3\n    /* \"#utility.yul\":6195:6275   */\n  tag_39\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5854:6285   */\n  pop\n  pop\n    /* \"#utility.yul\":5839:6285   */\ntag_117:\n    /* \"#utility.yul\":5749:6292   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6298:6415   */\ntag_41:\n    /* \"#utility.yul\":6352:6360   */\n  0x00\n    /* \"#utility.yul\":6402:6407   */\n  dup3\n    /* \"#utility.yul\":6396:6400   */\n  dup3\n    /* \"#utility.yul\":6392:6408   */\n  shr\n    /* \"#utility.yul\":6371:6408   */\n  swap1\n  pop\n    /* \"#utility.yul\":6298:6415   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6421:6590   */\ntag_42:\n    /* \"#utility.yul\":6465:6471   */\n  0x00\n    /* \"#utility.yul\":6498:6549   */\n  tag_125\n    /* \"#utility.yul\":6546:6547   */\n  0x00\n    /* \"#utility.yul\":6542:6548   */\n  not\n    /* \"#utility.yul\":6534:6539   */\n  dup5\n    /* \"#utility.yul\":6531:6532   */\n  0x08\n    /* \"#utility.yul\":6527:6540   */\n  mul\n    /* \"#utility.yul\":6498:6549   */\n  tag_41\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6494:6550   */\n  not\n    /* \"#utility.yul\":6579:6583   */\n  dup1\n    /* \"#utility.yul\":6573:6577   */\n  dup4\n    /* \"#utility.yul\":6569:6584   */\n  and\n    /* \"#utility.yul\":6559:6584   */\n  swap2\n  pop\n    /* \"#utility.yul\":6472:6590   */\n  pop\n    /* \"#utility.yul\":6421:6590   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6890   */\ntag_43:\n    /* \"#utility.yul\":6671:6675   */\n  0x00\n    /* \"#utility.yul\":6817:6846   */\n  tag_127\n    /* \"#utility.yul\":6842:6845   */\n  dup4\n    /* \"#utility.yul\":6836:6840   */\n  dup4\n    /* \"#utility.yul\":6817:6846   */\n  tag_42\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6809:6846   */\n  swap2\n  pop\n    /* \"#utility.yul\":6879:6882   */\n  dup3\n    /* \"#utility.yul\":6876:6877   */\n  0x02\n    /* \"#utility.yul\":6872:6883   */\n  mul\n    /* \"#utility.yul\":6866:6870   */\n  dup3\n    /* \"#utility.yul\":6863:6884   */\n  or\n    /* \"#utility.yul\":6855:6884   */\n  swap1\n  pop\n    /* \"#utility.yul\":6595:6890   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6895:8290   */\ntag_11:\n    /* \"#utility.yul\":7012:7049   */\n  tag_129\n    /* \"#utility.yul\":7045:7048   */\n  dup3\n    /* \"#utility.yul\":7012:7049   */\n  tag_25\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7114:7132   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7106:7112   */\n  dup2\n    /* \"#utility.yul\":7103:7133   */\n  gt\n    /* \"#utility.yul\":7100:7156   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7136:7154   */\n  tag_131\n  tag_18\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7100:7156   */\ntag_130:\n    /* \"#utility.yul\":7180:7218   */\n  tag_132\n    /* \"#utility.yul\":7212:7216   */\n  dup3\n    /* \"#utility.yul\":7206:7217   */\n  sload\n    /* \"#utility.yul\":7180:7218   */\n  tag_27\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7265:7332   */\n  tag_133\n    /* \"#utility.yul\":7325:7331   */\n  dup3\n    /* \"#utility.yul\":7317:7323   */\n  dup3\n    /* \"#utility.yul\":7311:7315   */\n  dup6\n    /* \"#utility.yul\":7265:7332   */\n  tag_40\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7359:7360   */\n  0x00\n    /* \"#utility.yul\":7383:7387   */\n  0x20\n    /* \"#utility.yul\":7370:7387   */\n  swap1\n  pop\n    /* \"#utility.yul\":7415:7417   */\n  0x1f\n    /* \"#utility.yul\":7407:7413   */\n  dup4\n    /* \"#utility.yul\":7404:7418   */\n  gt\n    /* \"#utility.yul\":7432:7433   */\n  0x01\n    /* \"#utility.yul\":7427:8045   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8089:8090   */\n  0x00\n    /* \"#utility.yul\":8106:8112   */\n  dup5\n    /* \"#utility.yul\":8103:8180   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8155:8164   */\n  dup3\n    /* \"#utility.yul\":8150:8153   */\n  dup8\n    /* \"#utility.yul\":8146:8165   */\n  add\n    /* \"#utility.yul\":8140:8166   */\n  mload\n    /* \"#utility.yul\":8131:8166   */\n  swap1\n  pop\n    /* \"#utility.yul\":8103:8180   */\ntag_136:\n    /* \"#utility.yul\":8206:8273   */\n  tag_137\n    /* \"#utility.yul\":8266:8272   */\n  dup6\n    /* \"#utility.yul\":8259:8264   */\n  dup3\n    /* \"#utility.yul\":8206:8273   */\n  tag_43\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8200:8204   */\n  dup7\n    /* \"#utility.yul\":8193:8274   */\n  sstore\n    /* \"#utility.yul\":8062:8284   */\n  pop\n    /* \"#utility.yul\":7397:8284   */\n  jump(tag_134)\n    /* \"#utility.yul\":7427:8045   */\ntag_135:\n    /* \"#utility.yul\":7479:7483   */\n  0x1f\n    /* \"#utility.yul\":7475:7484   */\n  not\n    /* \"#utility.yul\":7467:7473   */\n  dup5\n    /* \"#utility.yul\":7463:7485   */\n  and\n    /* \"#utility.yul\":7513:7550   */\n  tag_138\n    /* \"#utility.yul\":7545:7549   */\n  dup7\n    /* \"#utility.yul\":7513:7550   */\n  tag_28\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7572:7573   */\n  0x00\n    /* \"#utility.yul\":7586:7794   */\ntag_139:\n    /* \"#utility.yul\":7600:7607   */\n  dup3\n    /* \"#utility.yul\":7597:7598   */\n  dup2\n    /* \"#utility.yul\":7594:7608   */\n  lt\n    /* \"#utility.yul\":7586:7794   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7679:7688   */\n  dup5\n    /* \"#utility.yul\":7674:7677   */\n  dup10\n    /* \"#utility.yul\":7670:7689   */\n  add\n    /* \"#utility.yul\":7664:7690   */\n  mload\n    /* \"#utility.yul\":7656:7662   */\n  dup3\n    /* \"#utility.yul\":7649:7691   */\n  sstore\n    /* \"#utility.yul\":7730:7731   */\n  0x01\n    /* \"#utility.yul\":7722:7728   */\n  dup3\n    /* \"#utility.yul\":7718:7732   */\n  add\n    /* \"#utility.yul\":7708:7732   */\n  swap2\n  pop\n    /* \"#utility.yul\":7777:7779   */\n  0x20\n    /* \"#utility.yul\":7766:7775   */\n  dup6\n    /* \"#utility.yul\":7762:7780   */\n  add\n    /* \"#utility.yul\":7749:7780   */\n  swap5\n  pop\n    /* \"#utility.yul\":7623:7627   */\n  0x20\n    /* \"#utility.yul\":7620:7621   */\n  dup2\n    /* \"#utility.yul\":7616:7628   */\n  add\n    /* \"#utility.yul\":7611:7628   */\n  swap1\n  pop\n    /* \"#utility.yul\":7586:7794   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":7822:7828   */\n  dup7\n    /* \"#utility.yul\":7813:7820   */\n  dup4\n    /* \"#utility.yul\":7810:7829   */\n  lt\n    /* \"#utility.yul\":7807:7986   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":7880:7889   */\n  dup5\n    /* \"#utility.yul\":7875:7878   */\n  dup10\n    /* \"#utility.yul\":7871:7890   */\n  add\n    /* \"#utility.yul\":7865:7891   */\n  mload\n    /* \"#utility.yul\":7923:7971   */\n  tag_143\n    /* \"#utility.yul\":7965:7969   */\n  0x1f\n    /* \"#utility.yul\":7957:7963   */\n  dup10\n    /* \"#utility.yul\":7953:7970   */\n  and\n    /* \"#utility.yul\":7942:7951   */\n  dup3\n    /* \"#utility.yul\":7923:7971   */\n  tag_42\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7915:7921   */\n  dup4\n    /* \"#utility.yul\":7908:7972   */\n  sstore\n    /* \"#utility.yul\":7830:7986   */\n  pop\n    /* \"#utility.yul\":7807:7986   */\ntag_142:\n    /* \"#utility.yul\":8032:8033   */\n  0x01\n    /* \"#utility.yul\":8028:8029   */\n  0x02\n    /* \"#utility.yul\":8020:8026   */\n  dup9\n    /* \"#utility.yul\":8016:8030   */\n  mul\n    /* \"#utility.yul\":8012:8034   */\n  add\n    /* \"#utility.yul\":8006:8010   */\n  dup9\n    /* \"#utility.yul\":7999:8035   */\n  sstore\n    /* \"#utility.yul\":7434:8045   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7397:8284   */\ntag_134:\n  pop\n    /* \"#utility.yul\":6987:8290   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6895:8290   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2317:2318  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2305  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2394:2396  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2398:2405  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2377:2406  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1384  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1441  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1522:1533  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1521  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4305  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4303  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4305  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4289  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4332:4344  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4332:4342  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4332:4344  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4325  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3051:3071  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3269  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3507:3514  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3516:3524  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3481:3525  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3807:3819  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3807:3817  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3807:3819  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3803  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3846:3858  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3846:3856  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3846:3858  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3839  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6544:6545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6532  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6628  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6630  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6662:6670  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6827  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6873  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6874:6876  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6878:6882  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6883  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6926  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6916  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7051:7057  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7048  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7025:7027  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7029:7033  from */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7106:7112  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7094  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7095:7097  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7099:7101  to */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7216:7224  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7230  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7234  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7236:7239  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7241:7248  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7250:7254  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7215  _afterTokenTransfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13025:13033  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13006:13011  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13013:13021  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13070:13078  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13063:13068  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13080:13088  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5135:5136  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5123  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_124\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5219  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5221  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5251  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5450  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5453  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5455:5459  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5460  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5493:5499  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5489  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_137\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5622  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5613  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5592  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5594:5598  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5663:5669  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5651  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5654  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5656:5658  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5716:5718  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5700:5708  operator */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5720:5722  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5730  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5762:5770  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5772:5776  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5780  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5782:5785  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5787:5794  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5796:5800  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5761  _afterTokenTransfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14030:14244  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15177:15390  function _afterTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16374  to.isContract() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16361  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16374  to.isContract() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16411:16413  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      sub\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16564:16612  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16560  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16474:16719  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_86\n      jump\t// in\n    tag_197:\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17099:17111  return array */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15618  to.isContract() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15605  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15618  to.isContract() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15655:15657  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_208\n      jumpi\n      tag_212\n      tag_184\n      jump\t// in\n    tag_212:\n      dup1\n      0x08c379a0\n      sub\n      tag_211\n      jumpi\n      pop\n      tag_213\n      tag_186\n      jump\t// in\n    tag_213:\n      dup1\n      tag_214\n      jumpi\n      pop\n      jump(tag_210)\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15981:15987  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15974:15988  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_211:\n      pop\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16028:16090  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_190\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15771:15814  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15767  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_194\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15711:15921  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_221:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_222:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_223:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_224:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_225:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_300\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_224\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_226:\n        /* \"#utility.yul\":641:665   */\n      tag_302\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_303:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_227:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_305\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_226\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_228:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_229:\n        /* \"#utility.yul\":997:1021   */\n      tag_308\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_309:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_230:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_311\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_229\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_314\n      tag_222\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1290:1409   */\n    tag_313:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_315\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_227\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_316\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_230\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_231:\n        /* \"#utility.yul\":1764:1788   */\n      tag_318\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_228\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_320\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_231\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_232:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_233:\n        /* \"#utility.yul\":2256:2279   */\n      tag_323\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_232\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_324:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_234:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_326\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_233\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_329\n      tag_222\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2528:2647   */\n    tag_328:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_330\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_235:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_236:\n        /* \"#utility.yul\":2963:2984   */\n      tag_333\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_235\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_335\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_236\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_338\n      tag_222\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3289:3408   */\n    tag_337:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_339\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_230\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_237:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_238:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4135   */\n    tag_239:\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3906:4019   */\n    tag_343:\n        /* \"#utility.yul\":3920:3926   */\n      dup4\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      lt\n        /* \"#utility.yul\":3906:4019   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3996:4007   */\n      add\n        /* \"#utility.yul\":3990:4008   */\n      mload\n        /* \"#utility.yul\":3986:3987   */\n      dup2\n        /* \"#utility.yul\":3981:3984   */\n      dup5\n        /* \"#utility.yul\":3977:3988   */\n      add\n        /* \"#utility.yul\":3970:4009   */\n      mstore\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3939:3940   */\n      dup2\n        /* \"#utility.yul\":3935:3945   */\n      add\n        /* \"#utility.yul\":3930:3945   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:4019   */\n      jump(tag_343)\n    tag_345:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4034:4035   */\n      dup2\n        /* \"#utility.yul\":4031:4044   */\n      gt\n        /* \"#utility.yul\":4028:4129   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4106   */\n      dup5\n        /* \"#utility.yul\":4099:4115   */\n      add\n        /* \"#utility.yul\":4092:4119   */\n      mstore\n        /* \"#utility.yul\":4028:4129   */\n    tag_346:\n        /* \"#utility.yul\":3877:4135   */\n      pop\n        /* \"#utility.yul\":3828:4135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4243   */\n    tag_240:\n        /* \"#utility.yul\":4182:4188   */\n      0x00\n        /* \"#utility.yul\":4233:4235   */\n      0x1f\n        /* \"#utility.yul\":4229:4236   */\n      not\n        /* \"#utility.yul\":4224:4226   */\n      0x1f\n        /* \"#utility.yul\":4217:4222   */\n      dup4\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4209:4237   */\n      and\n        /* \"#utility.yul\":4199:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4141:4243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4613   */\n    tag_241:\n        /* \"#utility.yul\":4337:4340   */\n      0x00\n        /* \"#utility.yul\":4365:4404   */\n      tag_349\n        /* \"#utility.yul\":4398:4403   */\n      dup3\n        /* \"#utility.yul\":4365:4404   */\n      tag_237\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4420:4491   */\n      tag_350\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4479:4482   */\n      dup6\n        /* \"#utility.yul\":4420:4491   */\n      tag_238\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4413:4491   */\n      swap4\n      pop\n        /* \"#utility.yul\":4500:4552   */\n      tag_351\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4540:4543   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4526:4531   */\n      dup7\n        /* \"#utility.yul\":4522:4538   */\n      add\n        /* \"#utility.yul\":4500:4552   */\n      tag_239\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4577:4606   */\n      tag_352\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4577:4606   */\n      tag_240\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4572:4575   */\n      dup5\n        /* \"#utility.yul\":4568:4607   */\n      add\n        /* \"#utility.yul\":4561:4607   */\n      swap2\n      pop\n        /* \"#utility.yul\":4341:4613   */\n      pop\n        /* \"#utility.yul\":4249:4613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4932   */\n    tag_29:\n        /* \"#utility.yul\":4732:4736   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4759:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4773   */\n      add\n        /* \"#utility.yul\":4747:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4828   */\n      dup2\n        /* \"#utility.yul\":4813:4817   */\n      dup2\n        /* \"#utility.yul\":4809:4829   */\n      sub\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4783:4830   */\n      mstore\n        /* \"#utility.yul\":4847:4925   */\n      tag_354\n        /* \"#utility.yul\":4920:4924   */\n      dup2\n        /* \"#utility.yul\":4911:4917   */\n      dup5\n        /* \"#utility.yul\":4847:4925   */\n      tag_241\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4839:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5055   */\n    tag_242:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5241   */\n    tag_86:\n        /* \"#utility.yul\":5109:5186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5099:5187   */\n      mstore\n        /* \"#utility.yul\":5206:5210   */\n      0x41\n        /* \"#utility.yul\":5203:5204   */\n      0x04\n        /* \"#utility.yul\":5196:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x24\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5235   */\n      revert\n        /* \"#utility.yul\":5247:5528   */\n    tag_243:\n        /* \"#utility.yul\":5330:5357   */\n      tag_358\n        /* \"#utility.yul\":5352:5356   */\n      dup3\n        /* \"#utility.yul\":5330:5357   */\n      tag_240\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5322:5328   */\n      dup2\n        /* \"#utility.yul\":5318:5358   */\n      add\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5448:5458   */\n      dup2\n        /* \"#utility.yul\":5445:5467   */\n      lt\n        /* \"#utility.yul\":5424:5442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5412:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5443   */\n      gt\n        /* \"#utility.yul\":5406:5468   */\n      or\n        /* \"#utility.yul\":5403:5491   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":5471:5489   */\n      tag_360\n      tag_86\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5403:5491   */\n    tag_359:\n        /* \"#utility.yul\":5511:5521   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5500:5522   */\n      mstore\n        /* \"#utility.yul\":5290:5528   */\n      pop\n        /* \"#utility.yul\":5247:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5663   */\n    tag_244:\n        /* \"#utility.yul\":5568:5574   */\n      0x00\n        /* \"#utility.yul\":5595:5615   */\n      tag_362\n      tag_221\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5585:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5657   */\n      tag_363\n        /* \"#utility.yul\":5652:5656   */\n      dup3\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5624:5657   */\n      tag_243\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5534:5663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5980   */\n    tag_245:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5836:5854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5825:5855   */\n      gt\n        /* \"#utility.yul\":5822:5878   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5858:5876   */\n      tag_366\n      tag_86\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5822:5878   */\n    tag_365:\n        /* \"#utility.yul\":5908:5912   */\n      0x20\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5896:5913   */\n      mul\n        /* \"#utility.yul\":5888:5913   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5962:5966   */\n      dup2\n        /* \"#utility.yul\":5958:5973   */\n      add\n        /* \"#utility.yul\":5950:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6103   */\n    tag_246:\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6092:6093   */\n      dup1\n        /* \"#utility.yul\":6085:6097   */\n      revert\n        /* \"#utility.yul\":6126:6836   */\n    tag_247:\n        /* \"#utility.yul\":6222:6227   */\n      0x00\n        /* \"#utility.yul\":6247:6328   */\n      tag_369\n        /* \"#utility.yul\":6263:6327   */\n      tag_370\n        /* \"#utility.yul\":6320:6326   */\n      dup5\n        /* \"#utility.yul\":6263:6327   */\n      tag_245\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6247:6328   */\n      tag_244\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6238:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      dup1\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6370:6375   */\n      dup3\n        /* \"#utility.yul\":6363:6384   */\n      mstore\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6400:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6452:6469   */\n      mul\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6440:6470   */\n      add\n        /* \"#utility.yul\":6493:6496   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup2\n        /* \"#utility.yul\":6482:6497   */\n      gt\n        /* \"#utility.yul\":6479:6601   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":6512:6591   */\n      tag_372\n      tag_246\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6479:6601   */\n    tag_371:\n        /* \"#utility.yul\":6627:6633   */\n      dup4\n        /* \"#utility.yul\":6610:6830   */\n    tag_373:\n        /* \"#utility.yul\":6644:6650   */\n      dup2\n        /* \"#utility.yul\":6639:6642   */\n      dup2\n        /* \"#utility.yul\":6636:6651   */\n      lt\n        /* \"#utility.yul\":6610:6830   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6719:6722   */\n      dup1\n        /* \"#utility.yul\":6748:6785   */\n      tag_376\n        /* \"#utility.yul\":6781:6784   */\n      dup9\n        /* \"#utility.yul\":6769:6779   */\n      dup3\n        /* \"#utility.yul\":6748:6785   */\n      tag_230\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6743:6746   */\n      dup5\n        /* \"#utility.yul\":6736:6786   */\n      mstore\n        /* \"#utility.yul\":6815:6819   */\n      0x20\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6820   */\n      swap4\n      pop\n        /* \"#utility.yul\":6686:6830   */\n      pop\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6665:6668   */\n      dup2\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6830   */\n      jump(tag_373)\n    tag_375:\n        /* \"#utility.yul\":6614:6635   */\n      pop\n        /* \"#utility.yul\":6228:6836   */\n      pop\n      pop\n        /* \"#utility.yul\":6126:6836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7229   */\n    tag_248:\n        /* \"#utility.yul\":6930:6935   */\n      0x00\n        /* \"#utility.yul\":6979:6982   */\n      dup3\n        /* \"#utility.yul\":6972:6976   */\n      0x1f\n        /* \"#utility.yul\":6964:6970   */\n      dup4\n        /* \"#utility.yul\":6960:6977   */\n      add\n        /* \"#utility.yul\":6956:6983   */\n      slt\n        /* \"#utility.yul\":6946:7068   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":6987:7066   */\n      tag_379\n      tag_242\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6946:7068   */\n    tag_378:\n        /* \"#utility.yul\":7104:7110   */\n      dup2\n        /* \"#utility.yul\":7091:7111   */\n      calldataload\n        /* \"#utility.yul\":7129:7223   */\n      tag_380\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7204:7208   */\n      0x20\n        /* \"#utility.yul\":7196:7202   */\n      dup7\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7129:7223   */\n      tag_247\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7120:7223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7229   */\n      pop\n        /* \"#utility.yul\":6859:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7352   */\n    tag_249:\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7341:7342   */\n      dup1\n        /* \"#utility.yul\":7334:7346   */\n      revert\n        /* \"#utility.yul\":7358:7665   */\n    tag_250:\n        /* \"#utility.yul\":7419:7423   */\n      0x00\n        /* \"#utility.yul\":7509:7527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7498:7528   */\n      gt\n        /* \"#utility.yul\":7495:7551   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7531:7549   */\n      tag_384\n      tag_86\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7495:7551   */\n    tag_383:\n        /* \"#utility.yul\":7569:7598   */\n      tag_385\n        /* \"#utility.yul\":7591:7597   */\n      dup3\n        /* \"#utility.yul\":7569:7598   */\n      tag_240\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7561:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7657   */\n      0x20\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7658   */\n      add\n        /* \"#utility.yul\":7635:7658   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:7825   */\n    tag_251:\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7750:7753   */\n      dup2\n        /* \"#utility.yul\":7745:7748   */\n      dup4\n        /* \"#utility.yul\":7732:7762   */\n      calldatacopy\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7808:7814   */\n      dup4\n        /* \"#utility.yul\":7803:7806   */\n      dup4\n        /* \"#utility.yul\":7799:7815   */\n      add\n        /* \"#utility.yul\":7792:7819   */\n      mstore\n        /* \"#utility.yul\":7671:7825   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8241   */\n    tag_252:\n        /* \"#utility.yul\":7908:7913   */\n      0x00\n        /* \"#utility.yul\":7933:7998   */\n      tag_388\n        /* \"#utility.yul\":7949:7997   */\n      tag_389\n        /* \"#utility.yul\":7990:7996   */\n      dup5\n        /* \"#utility.yul\":7949:7997   */\n      tag_250\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7933:7998   */\n      tag_244\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7924:7998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8014:8019   */\n      dup2\n        /* \"#utility.yul\":8007:8028   */\n      mstore\n        /* \"#utility.yul\":8059:8063   */\n      0x20\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8048:8064   */\n      add\n        /* \"#utility.yul\":8097:8100   */\n      dup5\n        /* \"#utility.yul\":8088:8094   */\n      dup5\n        /* \"#utility.yul\":8083:8086   */\n      dup5\n        /* \"#utility.yul\":8079:8095   */\n      add\n        /* \"#utility.yul\":8076:8101   */\n      gt\n        /* \"#utility.yul\":8073:8185   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_391\n      tag_249\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8073:8185   */\n    tag_390:\n        /* \"#utility.yul\":8194:8235   */\n      tag_392\n        /* \"#utility.yul\":8228:8234   */\n      dup5\n        /* \"#utility.yul\":8223:8226   */\n      dup3\n        /* \"#utility.yul\":8218:8221   */\n      dup6\n        /* \"#utility.yul\":8194:8235   */\n      tag_251\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7914:8241   */\n      pop\n        /* \"#utility.yul\":7831:8241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8598   */\n    tag_253:\n        /* \"#utility.yul\":8315:8320   */\n      0x00\n        /* \"#utility.yul\":8364:8367   */\n      dup3\n        /* \"#utility.yul\":8357:8361   */\n      0x1f\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8345:8362   */\n      add\n        /* \"#utility.yul\":8341:8368   */\n      slt\n        /* \"#utility.yul\":8331:8453   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":8372:8451   */\n      tag_395\n      tag_242\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8331:8453   */\n    tag_394:\n        /* \"#utility.yul\":8489:8495   */\n      dup2\n        /* \"#utility.yul\":8476:8496   */\n      calldataload\n        /* \"#utility.yul\":8514:8592   */\n      tag_396\n        /* \"#utility.yul\":8588:8591   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8565:8571   */\n      dup7\n        /* \"#utility.yul\":8561:8578   */\n      add\n        /* \"#utility.yul\":8514:8592   */\n      tag_252\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8505:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8598   */\n      pop\n        /* \"#utility.yul\":8260:8598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:10113   */\n    tag_32:\n        /* \"#utility.yul\":8758:8764   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup1\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup1\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8839:8842   */\n      0xa0\n        /* \"#utility.yul\":8827:8836   */\n      dup7\n        /* \"#utility.yul\":8818:8825   */\n      dup9\n        /* \"#utility.yul\":8814:8837   */\n      sub\n        /* \"#utility.yul\":8810:8843   */\n      slt\n        /* \"#utility.yul\":8807:8927   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":8846:8925   */\n      tag_399\n      tag_222\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8807:8927   */\n    tag_398:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8991:9044   */\n      tag_400\n        /* \"#utility.yul\":9036:9043   */\n      dup9\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup10\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_227\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8981:9044   */\n      swap6\n      pop\n        /* \"#utility.yul\":8937:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9119:9172   */\n      tag_401\n        /* \"#utility.yul\":9164:9171   */\n      dup9\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup10\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_227\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9109:9172   */\n      swap5\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":9249:9251   */\n      0x40\n        /* \"#utility.yul\":9238:9247   */\n      dup7\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9221:9253   */\n      calldataload\n        /* \"#utility.yul\":9280:9298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9272:9278   */\n      dup2\n        /* \"#utility.yul\":9269:9299   */\n      gt\n        /* \"#utility.yul\":9266:9383   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":9302:9381   */\n      tag_403\n      tag_223\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9266:9383   */\n    tag_402:\n        /* \"#utility.yul\":9407:9485   */\n      tag_404\n        /* \"#utility.yul\":9477:9484   */\n      dup9\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup10\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9407:9485   */\n      tag_248\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9397:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9192:9495   */\n      pop\n        /* \"#utility.yul\":9562:9564   */\n      0x60\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9534:9566   */\n      calldataload\n        /* \"#utility.yul\":9593:9611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9585:9591   */\n      dup2\n        /* \"#utility.yul\":9582:9612   */\n      gt\n        /* \"#utility.yul\":9579:9696   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9615:9694   */\n      tag_406\n      tag_223\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9579:9696   */\n    tag_405:\n        /* \"#utility.yul\":9720:9798   */\n      tag_407\n        /* \"#utility.yul\":9790:9797   */\n      dup9\n        /* \"#utility.yul\":9781:9787   */\n      dup3\n        /* \"#utility.yul\":9770:9779   */\n      dup10\n        /* \"#utility.yul\":9766:9788   */\n      add\n        /* \"#utility.yul\":9720:9798   */\n      tag_248\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9710:9798   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9808   */\n      pop\n        /* \"#utility.yul\":9875:9878   */\n      0x80\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9860:9879   */\n      add\n        /* \"#utility.yul\":9847:9880   */\n      calldataload\n        /* \"#utility.yul\":9907:9925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9899:9905   */\n      dup2\n        /* \"#utility.yul\":9896:9926   */\n      gt\n        /* \"#utility.yul\":9893:10010   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":9929:10008   */\n      tag_409\n      tag_223\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9893:10010   */\n    tag_408:\n        /* \"#utility.yul\":10034:10096   */\n      tag_410\n        /* \"#utility.yul\":10088:10095   */\n      dup9\n        /* \"#utility.yul\":10079:10085   */\n      dup3\n        /* \"#utility.yul\":10068:10077   */\n      dup10\n        /* \"#utility.yul\":10064:10086   */\n      add\n        /* \"#utility.yul\":10034:10096   */\n      tag_253\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10024:10096   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:10106   */\n      pop\n        /* \"#utility.yul\":8604:10113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10430   */\n    tag_254:\n        /* \"#utility.yul\":10196:10200   */\n      0x00\n        /* \"#utility.yul\":10286:10304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10278:10284   */\n      dup3\n        /* \"#utility.yul\":10275:10305   */\n      gt\n        /* \"#utility.yul\":10272:10328   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":10308:10326   */\n      tag_413\n      tag_86\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10272:10328   */\n    tag_412:\n        /* \"#utility.yul\":10358:10362   */\n      0x20\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10363   */\n      mul\n        /* \"#utility.yul\":10338:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10422   */\n      0x20\n        /* \"#utility.yul\":10412:10416   */\n      dup2\n        /* \"#utility.yul\":10408:10423   */\n      add\n        /* \"#utility.yul\":10400:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10119:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:11163   */\n    tag_255:\n        /* \"#utility.yul\":10549:10554   */\n      0x00\n        /* \"#utility.yul\":10574:10655   */\n      tag_415\n        /* \"#utility.yul\":10590:10654   */\n      tag_416\n        /* \"#utility.yul\":10647:10653   */\n      dup5\n        /* \"#utility.yul\":10590:10654   */\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10574:10655   */\n      tag_244\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10565:10655   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:10680   */\n      dup1\n        /* \"#utility.yul\":10704:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10702   */\n      dup3\n        /* \"#utility.yul\":10690:10711   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x20\n        /* \"#utility.yul\":10731:10736   */\n      dup3\n        /* \"#utility.yul\":10727:10743   */\n      add\n        /* \"#utility.yul\":10720:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10795   */\n      0x20\n        /* \"#utility.yul\":10783:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10796   */\n      mul\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10767:10797   */\n      add\n        /* \"#utility.yul\":10820:10823   */\n      dup6\n        /* \"#utility.yul\":10812:10818   */\n      dup2\n        /* \"#utility.yul\":10809:10824   */\n      gt\n        /* \"#utility.yul\":10806:10928   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_418\n      tag_246\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10806:10928   */\n    tag_417:\n        /* \"#utility.yul\":10954:10960   */\n      dup4\n        /* \"#utility.yul\":10937:11157   */\n    tag_419:\n        /* \"#utility.yul\":10971:10977   */\n      dup2\n        /* \"#utility.yul\":10966:10969   */\n      dup2\n        /* \"#utility.yul\":10963:10978   */\n      lt\n        /* \"#utility.yul\":10937:11157   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":11046:11049   */\n      dup1\n        /* \"#utility.yul\":11075:11112   */\n      tag_422\n        /* \"#utility.yul\":11108:11111   */\n      dup9\n        /* \"#utility.yul\":11096:11106   */\n      dup3\n        /* \"#utility.yul\":11075:11112   */\n      tag_227\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11070:11073   */\n      dup5\n        /* \"#utility.yul\":11063:11113   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x20\n        /* \"#utility.yul\":11137:11140   */\n      dup5\n        /* \"#utility.yul\":11133:11147   */\n      add\n        /* \"#utility.yul\":11126:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11157   */\n      pop\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup2\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11157   */\n      jump(tag_419)\n    tag_421:\n        /* \"#utility.yul\":10941:10962   */\n      pop\n        /* \"#utility.yul\":10555:11163   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:11163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11556   */\n    tag_256:\n        /* \"#utility.yul\":11257:11262   */\n      0x00\n        /* \"#utility.yul\":11306:11309   */\n      dup3\n        /* \"#utility.yul\":11299:11303   */\n      0x1f\n        /* \"#utility.yul\":11291:11297   */\n      dup4\n        /* \"#utility.yul\":11287:11304   */\n      add\n        /* \"#utility.yul\":11283:11310   */\n      slt\n        /* \"#utility.yul\":11273:11395   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":11314:11393   */\n      tag_425\n      tag_242\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11273:11395   */\n    tag_424:\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11418:11438   */\n      calldataload\n        /* \"#utility.yul\":11456:11550   */\n      tag_426\n        /* \"#utility.yul\":11546:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11531:11535   */\n      0x20\n        /* \"#utility.yul\":11523:11529   */\n      dup7\n        /* \"#utility.yul\":11519:11536   */\n      add\n        /* \"#utility.yul\":11456:11550   */\n      tag_255\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11447:11550   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11556   */\n      pop\n        /* \"#utility.yul\":11186:11556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11562:12456   */\n    tag_36:\n        /* \"#utility.yul\":11680:11686   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup1\n        /* \"#utility.yul\":11737:11739   */\n      0x40\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11716:11723   */\n      dup6\n        /* \"#utility.yul\":11712:11735   */\n      sub\n        /* \"#utility.yul\":11708:11740   */\n      slt\n        /* \"#utility.yul\":11705:11824   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":11743:11822   */\n      tag_429\n      tag_222\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11705:11824   */\n    tag_428:\n        /* \"#utility.yul\":11891:11892   */\n      0x00\n        /* \"#utility.yul\":11880:11889   */\n      dup4\n        /* \"#utility.yul\":11876:11893   */\n      add\n        /* \"#utility.yul\":11863:11894   */\n      calldataload\n        /* \"#utility.yul\":11921:11939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11910:11940   */\n      gt\n        /* \"#utility.yul\":11907:12024   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":11943:12022   */\n      tag_431\n      tag_223\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11907:12024   */\n    tag_430:\n        /* \"#utility.yul\":12048:12126   */\n      tag_432\n        /* \"#utility.yul\":12118:12125   */\n      dup6\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12098:12107   */\n      dup7\n        /* \"#utility.yul\":12094:12116   */\n      add\n        /* \"#utility.yul\":12048:12126   */\n      tag_256\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12038:12126   */\n      swap3\n      pop\n        /* \"#utility.yul\":11834:12136   */\n      pop\n        /* \"#utility.yul\":12203:12205   */\n      0x20\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12206   */\n      add\n        /* \"#utility.yul\":12175:12207   */\n      calldataload\n        /* \"#utility.yul\":12234:12252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12226:12232   */\n      dup2\n        /* \"#utility.yul\":12223:12253   */\n      gt\n        /* \"#utility.yul\":12220:12337   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":12256:12335   */\n      tag_434\n      tag_223\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12220:12337   */\n    tag_433:\n        /* \"#utility.yul\":12361:12439   */\n      tag_435\n        /* \"#utility.yul\":12431:12438   */\n      dup6\n        /* \"#utility.yul\":12422:12428   */\n      dup3\n        /* \"#utility.yul\":12411:12420   */\n      dup7\n        /* \"#utility.yul\":12407:12429   */\n      add\n        /* \"#utility.yul\":12361:12439   */\n      tag_248\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12351:12439   */\n      swap2\n      pop\n        /* \"#utility.yul\":12146:12449   */\n      pop\n        /* \"#utility.yul\":11562:12456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12576   */\n    tag_257:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12563:12568   */\n      dup2\n        /* \"#utility.yul\":12557:12569   */\n      mload\n        /* \"#utility.yul\":12547:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12462:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_258:\n        /* \"#utility.yul\":12681:12692   */\n      0x00\n        /* \"#utility.yul\":12715:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12703:12722   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x20\n        /* \"#utility.yul\":12750:12753   */\n      dup3\n        /* \"#utility.yul\":12746:12760   */\n      add\n        /* \"#utility.yul\":12731:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12582:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12904   */\n    tag_259:\n        /* \"#utility.yul\":12839:12843   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup2\n        /* \"#utility.yul\":12854:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12892:12896   */\n      0x20\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12883:12897   */\n      add\n        /* \"#utility.yul\":12875:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:12904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12910:13018   */\n    tag_260:\n        /* \"#utility.yul\":12987:13011   */\n      tag_440\n        /* \"#utility.yul\":13005:13010   */\n      dup2\n        /* \"#utility.yul\":12987:13011   */\n      tag_228\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":12982:12985   */\n      dup3\n        /* \"#utility.yul\":12975:13012   */\n      mstore\n        /* \"#utility.yul\":12910:13018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13203   */\n    tag_261:\n        /* \"#utility.yul\":13093:13103   */\n      0x00\n        /* \"#utility.yul\":13114:13160   */\n      tag_442\n        /* \"#utility.yul\":13156:13159   */\n      dup4\n        /* \"#utility.yul\":13148:13154   */\n      dup4\n        /* \"#utility.yul\":13114:13160   */\n      tag_260\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup4\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13169:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13322   */\n    tag_262:\n        /* \"#utility.yul\":13279:13283   */\n      0x00\n        /* \"#utility.yul\":13311:13315   */\n      0x20\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13316   */\n      add\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13358:14090   */\n    tag_263:\n        /* \"#utility.yul\":13477:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13560   */\n      tag_445\n        /* \"#utility.yul\":13554:13559   */\n      dup3\n        /* \"#utility.yul\":13506:13560   */\n      tag_257\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13576:13662   */\n      tag_446\n        /* \"#utility.yul\":13655:13661   */\n      dup2\n        /* \"#utility.yul\":13650:13653   */\n      dup6\n        /* \"#utility.yul\":13576:13662   */\n      tag_258\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13569:13662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13686:13742   */\n      tag_447\n        /* \"#utility.yul\":13736:13741   */\n      dup4\n        /* \"#utility.yul\":13686:13742   */\n      tag_259\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13765:13772   */\n      dup1\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13781:14065   */\n    tag_448:\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13803:13804   */\n      dup2\n        /* \"#utility.yul\":13800:13813   */\n      lt\n        /* \"#utility.yul\":13781:14065   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":13882:13888   */\n      dup2\n        /* \"#utility.yul\":13876:13889   */\n      mload\n        /* \"#utility.yul\":13909:13972   */\n      tag_451\n        /* \"#utility.yul\":13968:13971   */\n      dup9\n        /* \"#utility.yul\":13953:13966   */\n      dup3\n        /* \"#utility.yul\":13909:13972   */\n      tag_261\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":13902:13972   */\n      swap8\n      pop\n        /* \"#utility.yul\":13995:14055   */\n      tag_452\n        /* \"#utility.yul\":14048:14054   */\n      dup4\n        /* \"#utility.yul\":13995:14055   */\n      tag_262\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13985:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13841:14065   */\n      pop\n        /* \"#utility.yul\":13828:13829   */\n      0x01\n        /* \"#utility.yul\":13825:13826   */\n      dup2\n        /* \"#utility.yul\":13821:13830   */\n      add\n        /* \"#utility.yul\":13816:13830   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14065   */\n      jump(tag_448)\n    tag_450:\n        /* \"#utility.yul\":13785:13799   */\n      pop\n        /* \"#utility.yul\":14081:14084   */\n      dup6\n        /* \"#utility.yul\":14074:14084   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13358:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14469   */\n    tag_39:\n        /* \"#utility.yul\":14239:14243   */\n      0x00\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14266:14275   */\n      dup3\n        /* \"#utility.yul\":14262:14280   */\n      add\n        /* \"#utility.yul\":14254:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14335   */\n      dup2\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14316:14336   */\n      sub\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14301:14310   */\n      dup4\n        /* \"#utility.yul\":14297:14314   */\n      add\n        /* \"#utility.yul\":14290:14337   */\n      mstore\n        /* \"#utility.yul\":14354:14462   */\n      tag_454\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14448:14454   */\n      dup5\n        /* \"#utility.yul\":14354:14462   */\n      tag_263\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14346:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14096:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14591   */\n    tag_264:\n        /* \"#utility.yul\":14545:14566   */\n      tag_456\n        /* \"#utility.yul\":14560:14565   */\n      dup2\n        /* \"#utility.yul\":14545:14566   */\n      tag_235\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14538:14543   */\n      dup2\n        /* \"#utility.yul\":14535:14567   */\n      eq\n        /* \"#utility.yul\":14525:14585   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup1\n        /* \"#utility.yul\":14571:14583   */\n      revert\n        /* \"#utility.yul\":14525:14585   */\n    tag_457:\n        /* \"#utility.yul\":14475:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14730   */\n    tag_265:\n        /* \"#utility.yul\":14640:14645   */\n      0x00\n        /* \"#utility.yul\":14678:14684   */\n      dup2\n        /* \"#utility.yul\":14665:14685   */\n      calldataload\n        /* \"#utility.yul\":14656:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14724   */\n      tag_459\n        /* \"#utility.yul\":14718:14723   */\n      dup2\n        /* \"#utility.yul\":14694:14724   */\n      tag_264\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14597:14730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14736:15204   */\n    tag_42:\n        /* \"#utility.yul\":14801:14807   */\n      0x00\n        /* \"#utility.yul\":14809:14815   */\n      dup1\n        /* \"#utility.yul\":14858:14860   */\n      0x40\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14837:14844   */\n      dup6\n        /* \"#utility.yul\":14833:14856   */\n      sub\n        /* \"#utility.yul\":14829:14861   */\n      slt\n        /* \"#utility.yul\":14826:14945   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":14864:14943   */\n      tag_462\n      tag_222\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14826:14945   */\n    tag_461:\n        /* \"#utility.yul\":14984:14985   */\n      0x00\n        /* \"#utility.yul\":15009:15062   */\n      tag_463\n        /* \"#utility.yul\":15054:15061   */\n      dup6\n        /* \"#utility.yul\":15045:15051   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      dup7\n        /* \"#utility.yul\":15030:15052   */\n      add\n        /* \"#utility.yul\":15009:15062   */\n      tag_227\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14999:15062   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15072   */\n      pop\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15137:15187   */\n      tag_464\n        /* \"#utility.yul\":15179:15186   */\n      dup6\n        /* \"#utility.yul\":15170:15176   */\n      dup3\n        /* \"#utility.yul\":15159:15168   */\n      dup7\n        /* \"#utility.yul\":15155:15177   */\n      add\n        /* \"#utility.yul\":15137:15187   */\n      tag_265\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15127:15187   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15197   */\n      pop\n        /* \"#utility.yul\":14736:15204   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15684   */\n    tag_46:\n        /* \"#utility.yul\":15278:15284   */\n      0x00\n        /* \"#utility.yul\":15286:15292   */\n      dup1\n        /* \"#utility.yul\":15335:15337   */\n      0x40\n        /* \"#utility.yul\":15323:15332   */\n      dup4\n        /* \"#utility.yul\":15314:15321   */\n      dup6\n        /* \"#utility.yul\":15310:15333   */\n      sub\n        /* \"#utility.yul\":15306:15338   */\n      slt\n        /* \"#utility.yul\":15303:15422   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":15341:15420   */\n      tag_467\n      tag_222\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15303:15422   */\n    tag_466:\n        /* \"#utility.yul\":15461:15462   */\n      0x00\n        /* \"#utility.yul\":15486:15539   */\n      tag_468\n        /* \"#utility.yul\":15531:15538   */\n      dup6\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15511:15520   */\n      dup7\n        /* \"#utility.yul\":15507:15529   */\n      add\n        /* \"#utility.yul\":15486:15539   */\n      tag_227\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15476:15539   */\n      swap3\n      pop\n        /* \"#utility.yul\":15432:15549   */\n      pop\n        /* \"#utility.yul\":15588:15590   */\n      0x20\n        /* \"#utility.yul\":15614:15667   */\n      tag_469\n        /* \"#utility.yul\":15659:15666   */\n      dup6\n        /* \"#utility.yul\":15650:15656   */\n      dup3\n        /* \"#utility.yul\":15639:15648   */\n      dup7\n        /* \"#utility.yul\":15635:15657   */\n      add\n        /* \"#utility.yul\":15614:15667   */\n      tag_227\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15604:15667   */\n      swap2\n      pop\n        /* \"#utility.yul\":15559:15677   */\n      pop\n        /* \"#utility.yul\":15210:15684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15690:16779   */\n    tag_51:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15802:15808   */\n      dup1\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15818:15824   */\n      dup1\n        /* \"#utility.yul\":15826:15832   */\n      0x00\n        /* \"#utility.yul\":15875:15878   */\n      0xa0\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15854:15861   */\n      dup9\n        /* \"#utility.yul\":15850:15873   */\n      sub\n        /* \"#utility.yul\":15846:15879   */\n      slt\n        /* \"#utility.yul\":15843:15963   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":15882:15961   */\n      tag_472\n      tag_222\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15843:15963   */\n    tag_471:\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":16027:16080   */\n      tag_473\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_227\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16017:16080   */\n      swap6\n      pop\n        /* \"#utility.yul\":15973:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16155:16208   */\n      tag_474\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_227\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16145:16208   */\n      swap5\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16257:16259   */\n      0x40\n        /* \"#utility.yul\":16283:16336   */\n      tag_475\n        /* \"#utility.yul\":16328:16335   */\n      dup9\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16308:16317   */\n      dup10\n        /* \"#utility.yul\":16304:16326   */\n      add\n        /* \"#utility.yul\":16283:16336   */\n      tag_230\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16273:16336   */\n      swap4\n      pop\n        /* \"#utility.yul\":16228:16346   */\n      pop\n        /* \"#utility.yul\":16385:16387   */\n      0x60\n        /* \"#utility.yul\":16411:16464   */\n      tag_476\n        /* \"#utility.yul\":16456:16463   */\n      dup9\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      dup10\n        /* \"#utility.yul\":16432:16454   */\n      add\n        /* \"#utility.yul\":16411:16464   */\n      tag_230\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16401:16464   */\n      swap3\n      pop\n        /* \"#utility.yul\":16356:16474   */\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      0x80\n        /* \"#utility.yul\":16530:16539   */\n      dup7\n        /* \"#utility.yul\":16526:16545   */\n      add\n        /* \"#utility.yul\":16513:16546   */\n      calldataload\n        /* \"#utility.yul\":16573:16591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16565:16571   */\n      dup2\n        /* \"#utility.yul\":16562:16592   */\n      gt\n        /* \"#utility.yul\":16559:16676   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":16595:16674   */\n      tag_478\n      tag_223\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16559:16676   */\n    tag_477:\n        /* \"#utility.yul\":16700:16762   */\n      tag_479\n        /* \"#utility.yul\":16754:16761   */\n      dup9\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup10\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16700:16762   */\n      tag_253\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16690:16762   */\n      swap2\n      pop\n        /* \"#utility.yul\":16484:16772   */\n      pop\n        /* \"#utility.yul\":15690:16779   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16785:17015   */\n    tag_266:\n        /* \"#utility.yul\":16925:16959   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":16921:16922   */\n      0x00\n        /* \"#utility.yul\":16913:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16923   */\n      add\n        /* \"#utility.yul\":16902:16960   */\n      mstore\n        /* \"#utility.yul\":16994:17007   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16991   */\n      0x20\n        /* \"#utility.yul\":16981:16987   */\n      dup3\n        /* \"#utility.yul\":16977:16992   */\n      add\n        /* \"#utility.yul\":16970:17008   */\n      mstore\n        /* \"#utility.yul\":16785:17015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17021:17387   */\n    tag_267:\n        /* \"#utility.yul\":17163:17166   */\n      0x00\n        /* \"#utility.yul\":17184:17251   */\n      tag_482\n        /* \"#utility.yul\":17248:17250   */\n      0x2b\n        /* \"#utility.yul\":17243:17246   */\n      dup4\n        /* \"#utility.yul\":17184:17251   */\n      tag_238\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17177:17251   */\n      swap2\n      pop\n        /* \"#utility.yul\":17260:17353   */\n      tag_483\n        /* \"#utility.yul\":17349:17352   */\n      dup3\n        /* \"#utility.yul\":17260:17353   */\n      tag_266\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17378:17380   */\n      0x40\n        /* \"#utility.yul\":17373:17376   */\n      dup3\n        /* \"#utility.yul\":17369:17381   */\n      add\n        /* \"#utility.yul\":17362:17381   */\n      swap1\n      pop\n        /* \"#utility.yul\":17021:17387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17393:17812   */\n    tag_56:\n        /* \"#utility.yul\":17559:17563   */\n      0x00\n        /* \"#utility.yul\":17597:17599   */\n      0x20\n        /* \"#utility.yul\":17586:17595   */\n      dup3\n        /* \"#utility.yul\":17582:17600   */\n      add\n        /* \"#utility.yul\":17574:17600   */\n      swap1\n      pop\n        /* \"#utility.yul\":17646:17655   */\n      dup2\n        /* \"#utility.yul\":17640:17644   */\n      dup2\n        /* \"#utility.yul\":17636:17656   */\n      sub\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17621:17630   */\n      dup4\n        /* \"#utility.yul\":17617:17634   */\n      add\n        /* \"#utility.yul\":17610:17657   */\n      mstore\n        /* \"#utility.yul\":17674:17805   */\n      tag_485\n        /* \"#utility.yul\":17800:17804   */\n      dup2\n        /* \"#utility.yul\":17674:17805   */\n      tag_267\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17666:17805   */\n      swap1\n      pop\n        /* \"#utility.yul\":17393:17812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17818:17998   */\n    tag_268:\n        /* \"#utility.yul\":17866:17943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17863:17864   */\n      0x00\n        /* \"#utility.yul\":17856:17944   */\n      mstore\n        /* \"#utility.yul\":17963:17967   */\n      0x22\n        /* \"#utility.yul\":17960:17961   */\n      0x04\n        /* \"#utility.yul\":17953:17968   */\n      mstore\n        /* \"#utility.yul\":17987:17991   */\n      0x24\n        /* \"#utility.yul\":17984:17985   */\n      0x00\n        /* \"#utility.yul\":17977:17992   */\n      revert\n        /* \"#utility.yul\":18004:18324   */\n    tag_64:\n        /* \"#utility.yul\":18048:18054   */\n      0x00\n        /* \"#utility.yul\":18085:18086   */\n      0x02\n        /* \"#utility.yul\":18079:18083   */\n      dup3\n        /* \"#utility.yul\":18075:18087   */\n      div\n        /* \"#utility.yul\":18065:18087   */\n      swap1\n      pop\n        /* \"#utility.yul\":18132:18133   */\n      0x01\n        /* \"#utility.yul\":18126:18130   */\n      dup3\n        /* \"#utility.yul\":18122:18134   */\n      and\n        /* \"#utility.yul\":18153:18171   */\n      dup1\n        /* \"#utility.yul\":18143:18224   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18209:18213   */\n      0x7f\n        /* \"#utility.yul\":18201:18207   */\n      dup3\n        /* \"#utility.yul\":18197:18214   */\n      and\n        /* \"#utility.yul\":18187:18214   */\n      swap2\n      pop\n        /* \"#utility.yul\":18143:18224   */\n    tag_488:\n        /* \"#utility.yul\":18271:18273   */\n      0x20\n        /* \"#utility.yul\":18263:18269   */\n      dup3\n        /* \"#utility.yul\":18260:18274   */\n      lt\n        /* \"#utility.yul\":18240:18258   */\n      dup2\n        /* \"#utility.yul\":18237:18275   */\n      sub\n        /* \"#utility.yul\":18234:18318   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":18290:18308   */\n      tag_490\n      tag_268\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18234:18318   */\n    tag_489:\n        /* \"#utility.yul\":18055:18324   */\n      pop\n        /* \"#utility.yul\":18004:18324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18330:18567   */\n    tag_269:\n        /* \"#utility.yul\":18470:18504   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":18466:18467   */\n      0x00\n        /* \"#utility.yul\":18458:18464   */\n      dup3\n        /* \"#utility.yul\":18454:18468   */\n      add\n        /* \"#utility.yul\":18447:18505   */\n      mstore\n        /* \"#utility.yul\":18539:18559   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":18534:18536   */\n      0x20\n        /* \"#utility.yul\":18526:18532   */\n      dup3\n        /* \"#utility.yul\":18522:18537   */\n      add\n        /* \"#utility.yul\":18515:18560   */\n      mstore\n        /* \"#utility.yul\":18330:18567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18573:18939   */\n    tag_270:\n        /* \"#utility.yul\":18715:18718   */\n      0x00\n        /* \"#utility.yul\":18736:18803   */\n      tag_493\n        /* \"#utility.yul\":18800:18802   */\n      0x32\n        /* \"#utility.yul\":18795:18798   */\n      dup4\n        /* \"#utility.yul\":18736:18803   */\n      tag_238\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18729:18803   */\n      swap2\n      pop\n        /* \"#utility.yul\":18812:18905   */\n      tag_494\n        /* \"#utility.yul\":18901:18904   */\n      dup3\n        /* \"#utility.yul\":18812:18905   */\n      tag_269\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18930:18932   */\n      0x40\n        /* \"#utility.yul\":18925:18928   */\n      dup3\n        /* \"#utility.yul\":18921:18933   */\n      add\n        /* \"#utility.yul\":18914:18933   */\n      swap1\n      pop\n        /* \"#utility.yul\":18573:18939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19364   */\n    tag_77:\n        /* \"#utility.yul\":19111:19115   */\n      0x00\n        /* \"#utility.yul\":19149:19151   */\n      0x20\n        /* \"#utility.yul\":19138:19147   */\n      dup3\n        /* \"#utility.yul\":19134:19152   */\n      add\n        /* \"#utility.yul\":19126:19152   */\n      swap1\n      pop\n        /* \"#utility.yul\":19198:19207   */\n      dup2\n        /* \"#utility.yul\":19192:19196   */\n      dup2\n        /* \"#utility.yul\":19188:19208   */\n      sub\n        /* \"#utility.yul\":19184:19185   */\n      0x00\n        /* \"#utility.yul\":19173:19182   */\n      dup4\n        /* \"#utility.yul\":19169:19186   */\n      add\n        /* \"#utility.yul\":19162:19209   */\n      mstore\n        /* \"#utility.yul\":19226:19357   */\n      tag_496\n        /* \"#utility.yul\":19352:19356   */\n      dup2\n        /* \"#utility.yul\":19226:19357   */\n      tag_270\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19218:19357   */\n      swap1\n      pop\n        /* \"#utility.yul\":18945:19364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19370:19598   */\n    tag_271:\n        /* \"#utility.yul\":19510:19544   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19506:19507   */\n      0x00\n        /* \"#utility.yul\":19498:19504   */\n      dup3\n        /* \"#utility.yul\":19494:19508   */\n      add\n        /* \"#utility.yul\":19487:19545   */\n      mstore\n        /* \"#utility.yul\":19579:19590   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19574:19576   */\n      0x20\n        /* \"#utility.yul\":19566:19572   */\n      dup3\n        /* \"#utility.yul\":19562:19577   */\n      add\n        /* \"#utility.yul\":19555:19591   */\n      mstore\n        /* \"#utility.yul\":19370:19598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19604:19970   */\n    tag_272:\n        /* \"#utility.yul\":19746:19749   */\n      0x00\n        /* \"#utility.yul\":19767:19834   */\n      tag_499\n        /* \"#utility.yul\":19831:19833   */\n      0x29\n        /* \"#utility.yul\":19826:19829   */\n      dup4\n        /* \"#utility.yul\":19767:19834   */\n      tag_238\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19760:19834   */\n      swap2\n      pop\n        /* \"#utility.yul\":19843:19936   */\n      tag_500\n        /* \"#utility.yul\":19932:19935   */\n      dup3\n        /* \"#utility.yul\":19843:19936   */\n      tag_271\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19961:19963   */\n      0x40\n        /* \"#utility.yul\":19956:19959   */\n      dup3\n        /* \"#utility.yul\":19952:19964   */\n      add\n        /* \"#utility.yul\":19945:19964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19604:19970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19976:20395   */\n    tag_83:\n        /* \"#utility.yul\":20142:20146   */\n      0x00\n        /* \"#utility.yul\":20180:20182   */\n      0x20\n        /* \"#utility.yul\":20169:20178   */\n      dup3\n        /* \"#utility.yul\":20165:20183   */\n      add\n        /* \"#utility.yul\":20157:20183   */\n      swap1\n      pop\n        /* \"#utility.yul\":20229:20238   */\n      dup2\n        /* \"#utility.yul\":20223:20227   */\n      dup2\n        /* \"#utility.yul\":20219:20239   */\n      sub\n        /* \"#utility.yul\":20215:20216   */\n      0x00\n        /* \"#utility.yul\":20204:20213   */\n      dup4\n        /* \"#utility.yul\":20200:20217   */\n      add\n        /* \"#utility.yul\":20193:20240   */\n      mstore\n        /* \"#utility.yul\":20257:20388   */\n      tag_502\n        /* \"#utility.yul\":20383:20387   */\n      dup2\n        /* \"#utility.yul\":20257:20388   */\n      tag_272\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20249:20388   */\n      swap1\n      pop\n        /* \"#utility.yul\":19976:20395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20401:20581   */\n    tag_94:\n        /* \"#utility.yul\":20449:20526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20446:20447   */\n      0x00\n        /* \"#utility.yul\":20439:20527   */\n      mstore\n        /* \"#utility.yul\":20546:20550   */\n      0x32\n        /* \"#utility.yul\":20543:20544   */\n      0x04\n        /* \"#utility.yul\":20536:20551   */\n      mstore\n        /* \"#utility.yul\":20570:20574   */\n      0x24\n        /* \"#utility.yul\":20567:20568   */\n      0x00\n        /* \"#utility.yul\":20560:20575   */\n      revert\n        /* \"#utility.yul\":20587:20767   */\n    tag_273:\n        /* \"#utility.yul\":20635:20712   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20632:20633   */\n      0x00\n        /* \"#utility.yul\":20625:20713   */\n      mstore\n        /* \"#utility.yul\":20732:20736   */\n      0x11\n        /* \"#utility.yul\":20729:20730   */\n      0x04\n        /* \"#utility.yul\":20722:20737   */\n      mstore\n        /* \"#utility.yul\":20756:20760   */\n      0x24\n        /* \"#utility.yul\":20753:20754   */\n      0x00\n        /* \"#utility.yul\":20746:20761   */\n      revert\n        /* \"#utility.yul\":20773:21006   */\n    tag_100:\n        /* \"#utility.yul\":20812:20815   */\n      0x00\n        /* \"#utility.yul\":20835:20859   */\n      tag_506\n        /* \"#utility.yul\":20853:20858   */\n      dup3\n        /* \"#utility.yul\":20835:20859   */\n      tag_228\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20826:20859   */\n      swap2\n      pop\n        /* \"#utility.yul\":20881:20947   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20874:20879   */\n      dup3\n        /* \"#utility.yul\":20871:20948   */\n      sub\n        /* \"#utility.yul\":20868:20971   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":20951:20969   */\n      tag_508\n      tag_273\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20868:20971   */\n    tag_507:\n        /* \"#utility.yul\":20998:20999   */\n      0x01\n        /* \"#utility.yul\":20991:20996   */\n      dup3\n        /* \"#utility.yul\":20987:21000   */\n      add\n        /* \"#utility.yul\":20980:21000   */\n      swap1\n      pop\n        /* \"#utility.yul\":20773:21006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21012:21240   */\n    tag_274:\n        /* \"#utility.yul\":21152:21186   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":21148:21149   */\n      0x00\n        /* \"#utility.yul\":21140:21146   */\n      dup3\n        /* \"#utility.yul\":21136:21150   */\n      add\n        /* \"#utility.yul\":21129:21187   */\n      mstore\n        /* \"#utility.yul\":21221:21232   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21216:21218   */\n      0x20\n        /* \"#utility.yul\":21208:21214   */\n      dup3\n        /* \"#utility.yul\":21204:21219   */\n      add\n        /* \"#utility.yul\":21197:21233   */\n      mstore\n        /* \"#utility.yul\":21012:21240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21246:21612   */\n    tag_275:\n        /* \"#utility.yul\":21388:21391   */\n      0x00\n        /* \"#utility.yul\":21409:21476   */\n      tag_511\n        /* \"#utility.yul\":21473:21475   */\n      0x29\n        /* \"#utility.yul\":21468:21471   */\n      dup4\n        /* \"#utility.yul\":21409:21476   */\n      tag_238\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21402:21476   */\n      swap2\n      pop\n        /* \"#utility.yul\":21485:21578   */\n      tag_512\n        /* \"#utility.yul\":21574:21577   */\n      dup3\n        /* \"#utility.yul\":21485:21578   */\n      tag_274\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":21603:21605   */\n      0x40\n        /* \"#utility.yul\":21598:21601   */\n      dup3\n        /* \"#utility.yul\":21594:21606   */\n      add\n        /* \"#utility.yul\":21587:21606   */\n      swap1\n      pop\n        /* \"#utility.yul\":21246:21612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21618:22037   */\n    tag_113:\n        /* \"#utility.yul\":21784:21788   */\n      0x00\n        /* \"#utility.yul\":21822:21824   */\n      0x20\n        /* \"#utility.yul\":21811:21820   */\n      dup3\n        /* \"#utility.yul\":21807:21825   */\n      add\n        /* \"#utility.yul\":21799:21825   */\n      swap1\n      pop\n        /* \"#utility.yul\":21871:21880   */\n      dup2\n        /* \"#utility.yul\":21865:21869   */\n      dup2\n        /* \"#utility.yul\":21861:21881   */\n      sub\n        /* \"#utility.yul\":21857:21858   */\n      0x00\n        /* \"#utility.yul\":21846:21855   */\n      dup4\n        /* \"#utility.yul\":21842:21859   */\n      add\n        /* \"#utility.yul\":21835:21882   */\n      mstore\n        /* \"#utility.yul\":21899:22030   */\n      tag_514\n        /* \"#utility.yul\":22025:22029   */\n      dup2\n        /* \"#utility.yul\":21899:22030   */\n      tag_275\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":21891:22030   */\n      swap1\n      pop\n        /* \"#utility.yul\":21618:22037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22043:22270   */\n    tag_276:\n        /* \"#utility.yul\":22183:22217   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":22179:22180   */\n      0x00\n        /* \"#utility.yul\":22171:22177   */\n      dup3\n        /* \"#utility.yul\":22167:22181   */\n      add\n        /* \"#utility.yul\":22160:22218   */\n      mstore\n        /* \"#utility.yul\":22252:22262   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22247:22249   */\n      0x20\n        /* \"#utility.yul\":22239:22245   */\n      dup3\n        /* \"#utility.yul\":22235:22250   */\n      add\n        /* \"#utility.yul\":22228:22263   */\n      mstore\n        /* \"#utility.yul\":22043:22270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22276:22642   */\n    tag_277:\n        /* \"#utility.yul\":22418:22421   */\n      0x00\n        /* \"#utility.yul\":22439:22506   */\n      tag_517\n        /* \"#utility.yul\":22503:22505   */\n      0x28\n        /* \"#utility.yul\":22498:22501   */\n      dup4\n        /* \"#utility.yul\":22439:22506   */\n      tag_238\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22432:22506   */\n      swap2\n      pop\n        /* \"#utility.yul\":22515:22608   */\n      tag_518\n        /* \"#utility.yul\":22604:22607   */\n      dup3\n        /* \"#utility.yul\":22515:22608   */\n      tag_276\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22633:22635   */\n      0x40\n        /* \"#utility.yul\":22628:22631   */\n      dup3\n        /* \"#utility.yul\":22624:22636   */\n      add\n        /* \"#utility.yul\":22617:22636   */\n      swap1\n      pop\n        /* \"#utility.yul\":22276:22642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22648:23067   */\n    tag_121:\n        /* \"#utility.yul\":22814:22818   */\n      0x00\n        /* \"#utility.yul\":22852:22854   */\n      0x20\n        /* \"#utility.yul\":22841:22850   */\n      dup3\n        /* \"#utility.yul\":22837:22855   */\n      add\n        /* \"#utility.yul\":22829:22855   */\n      swap1\n      pop\n        /* \"#utility.yul\":22901:22910   */\n      dup2\n        /* \"#utility.yul\":22895:22899   */\n      dup2\n        /* \"#utility.yul\":22891:22911   */\n      sub\n        /* \"#utility.yul\":22887:22888   */\n      0x00\n        /* \"#utility.yul\":22876:22885   */\n      dup4\n        /* \"#utility.yul\":22872:22889   */\n      add\n        /* \"#utility.yul\":22865:22912   */\n      mstore\n        /* \"#utility.yul\":22929:23060   */\n      tag_520\n        /* \"#utility.yul\":23055:23059   */\n      dup2\n        /* \"#utility.yul\":22929:23060   */\n      tag_277\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22921:23060   */\n      swap1\n      pop\n        /* \"#utility.yul\":22648:23067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23073:23297   */\n    tag_278:\n        /* \"#utility.yul\":23213:23247   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":23209:23210   */\n      0x00\n        /* \"#utility.yul\":23201:23207   */\n      dup3\n        /* \"#utility.yul\":23197:23211   */\n      add\n        /* \"#utility.yul\":23190:23248   */\n      mstore\n        /* \"#utility.yul\":23282:23289   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23277:23279   */\n      0x20\n        /* \"#utility.yul\":23269:23275   */\n      dup3\n        /* \"#utility.yul\":23265:23280   */\n      add\n        /* \"#utility.yul\":23258:23290   */\n      mstore\n        /* \"#utility.yul\":23073:23297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23303:23669   */\n    tag_279:\n        /* \"#utility.yul\":23445:23448   */\n      0x00\n        /* \"#utility.yul\":23466:23533   */\n      tag_523\n        /* \"#utility.yul\":23530:23532   */\n      0x25\n        /* \"#utility.yul\":23525:23528   */\n      dup4\n        /* \"#utility.yul\":23466:23533   */\n      tag_238\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":23459:23533   */\n      swap2\n      pop\n        /* \"#utility.yul\":23542:23635   */\n      tag_524\n        /* \"#utility.yul\":23631:23634   */\n      dup3\n        /* \"#utility.yul\":23542:23635   */\n      tag_278\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":23660:23662   */\n      0x40\n        /* \"#utility.yul\":23655:23658   */\n      dup3\n        /* \"#utility.yul\":23651:23663   */\n      add\n        /* \"#utility.yul\":23644:23663   */\n      swap1\n      pop\n        /* \"#utility.yul\":23303:23669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23675:24094   */\n    tag_124:\n        /* \"#utility.yul\":23841:23845   */\n      0x00\n        /* \"#utility.yul\":23879:23881   */\n      0x20\n        /* \"#utility.yul\":23868:23877   */\n      dup3\n        /* \"#utility.yul\":23864:23882   */\n      add\n        /* \"#utility.yul\":23856:23882   */\n      swap1\n      pop\n        /* \"#utility.yul\":23928:23937   */\n      dup2\n        /* \"#utility.yul\":23922:23926   */\n      dup2\n        /* \"#utility.yul\":23918:23938   */\n      sub\n        /* \"#utility.yul\":23914:23915   */\n      0x00\n        /* \"#utility.yul\":23903:23912   */\n      dup4\n        /* \"#utility.yul\":23899:23916   */\n      add\n        /* \"#utility.yul\":23892:23939   */\n      mstore\n        /* \"#utility.yul\":23956:24087   */\n      tag_526\n        /* \"#utility.yul\":24082:24086   */\n      dup2\n        /* \"#utility.yul\":23956:24087   */\n      tag_279\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":23948:24087   */\n      swap1\n      pop\n        /* \"#utility.yul\":23675:24094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24100:24329   */\n    tag_280:\n        /* \"#utility.yul\":24240:24274   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24236:24237   */\n      0x00\n        /* \"#utility.yul\":24228:24234   */\n      dup3\n        /* \"#utility.yul\":24224:24238   */\n      add\n        /* \"#utility.yul\":24217:24275   */\n      mstore\n        /* \"#utility.yul\":24309:24321   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24304:24306   */\n      0x20\n        /* \"#utility.yul\":24296:24302   */\n      dup3\n        /* \"#utility.yul\":24292:24307   */\n      add\n        /* \"#utility.yul\":24285:24322   */\n      mstore\n        /* \"#utility.yul\":24100:24329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24335:24701   */\n    tag_281:\n        /* \"#utility.yul\":24477:24480   */\n      0x00\n        /* \"#utility.yul\":24498:24565   */\n      tag_529\n        /* \"#utility.yul\":24562:24564   */\n      0x2a\n        /* \"#utility.yul\":24557:24560   */\n      dup4\n        /* \"#utility.yul\":24498:24565   */\n      tag_238\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":24491:24565   */\n      swap2\n      pop\n        /* \"#utility.yul\":24574:24667   */\n      tag_530\n        /* \"#utility.yul\":24663:24666   */\n      dup3\n        /* \"#utility.yul\":24574:24667   */\n      tag_280\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24692:24694   */\n      0x40\n        /* \"#utility.yul\":24687:24690   */\n      dup3\n        /* \"#utility.yul\":24683:24695   */\n      add\n        /* \"#utility.yul\":24676:24695   */\n      swap1\n      pop\n        /* \"#utility.yul\":24335:24701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24707:25126   */\n    tag_137:\n        /* \"#utility.yul\":24873:24877   */\n      0x00\n        /* \"#utility.yul\":24911:24913   */\n      0x20\n        /* \"#utility.yul\":24900:24909   */\n      dup3\n        /* \"#utility.yul\":24896:24914   */\n      add\n        /* \"#utility.yul\":24888:24914   */\n      swap1\n      pop\n        /* \"#utility.yul\":24960:24969   */\n      dup2\n        /* \"#utility.yul\":24954:24958   */\n      dup2\n        /* \"#utility.yul\":24950:24970   */\n      sub\n        /* \"#utility.yul\":24946:24947   */\n      0x00\n        /* \"#utility.yul\":24935:24944   */\n      dup4\n        /* \"#utility.yul\":24931:24948   */\n      add\n        /* \"#utility.yul\":24924:24971   */\n      mstore\n        /* \"#utility.yul\":24988:25119   */\n      tag_532\n        /* \"#utility.yul\":25114:25118   */\n      dup2\n        /* \"#utility.yul\":24988:25119   */\n      tag_281\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":24980:25119   */\n      swap1\n      pop\n        /* \"#utility.yul\":24707:25126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25132:25437   */\n    tag_139:\n        /* \"#utility.yul\":25172:25175   */\n      0x00\n        /* \"#utility.yul\":25191:25211   */\n      tag_534\n        /* \"#utility.yul\":25209:25210   */\n      dup3\n        /* \"#utility.yul\":25191:25211   */\n      tag_228\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":25186:25211   */\n      swap2\n      pop\n        /* \"#utility.yul\":25225:25245   */\n      tag_535\n        /* \"#utility.yul\":25243:25244   */\n      dup4\n        /* \"#utility.yul\":25225:25245   */\n      tag_228\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25220:25245   */\n      swap3\n      pop\n        /* \"#utility.yul\":25379:25380   */\n      dup3\n        /* \"#utility.yul\":25311:25377   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25307:25381   */\n      sub\n        /* \"#utility.yul\":25304:25305   */\n      dup3\n        /* \"#utility.yul\":25301:25382   */\n      gt\n        /* \"#utility.yul\":25298:25405   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":25385:25403   */\n      tag_537\n      tag_273\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25298:25405   */\n    tag_536:\n        /* \"#utility.yul\":25429:25430   */\n      dup3\n        /* \"#utility.yul\":25426:25427   */\n      dup3\n        /* \"#utility.yul\":25422:25431   */\n      add\n        /* \"#utility.yul\":25415:25431   */\n      swap1\n      pop\n        /* \"#utility.yul\":25132:25437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25443:26077   */\n    tag_142:\n        /* \"#utility.yul\":25664:25668   */\n      0x00\n        /* \"#utility.yul\":25702:25704   */\n      0x40\n        /* \"#utility.yul\":25691:25700   */\n      dup3\n        /* \"#utility.yul\":25687:25705   */\n      add\n        /* \"#utility.yul\":25679:25705   */\n      swap1\n      pop\n        /* \"#utility.yul\":25751:25760   */\n      dup2\n        /* \"#utility.yul\":25745:25749   */\n      dup2\n        /* \"#utility.yul\":25741:25761   */\n      sub\n        /* \"#utility.yul\":25737:25738   */\n      0x00\n        /* \"#utility.yul\":25726:25735   */\n      dup4\n        /* \"#utility.yul\":25722:25739   */\n      add\n        /* \"#utility.yul\":25715:25762   */\n      mstore\n        /* \"#utility.yul\":25779:25887   */\n      tag_539\n        /* \"#utility.yul\":25882:25886   */\n      dup2\n        /* \"#utility.yul\":25873:25879   */\n      dup6\n        /* \"#utility.yul\":25779:25887   */\n      tag_263\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25771:25887   */\n      swap1\n      pop\n        /* \"#utility.yul\":25934:25943   */\n      dup2\n        /* \"#utility.yul\":25928:25932   */\n      dup2\n        /* \"#utility.yul\":25924:25944   */\n      sub\n        /* \"#utility.yul\":25919:25921   */\n      0x20\n        /* \"#utility.yul\":25908:25917   */\n      dup4\n        /* \"#utility.yul\":25904:25922   */\n      add\n        /* \"#utility.yul\":25897:25945   */\n      mstore\n        /* \"#utility.yul\":25962:26070   */\n      tag_540\n        /* \"#utility.yul\":26065:26069   */\n      dup2\n        /* \"#utility.yul\":26056:26062   */\n      dup5\n        /* \"#utility.yul\":25962:26070   */\n      tag_263\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":25954:26070   */\n      swap1\n      pop\n        /* \"#utility.yul\":25443:26077   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26083:26311   */\n    tag_282:\n        /* \"#utility.yul\":26223:26257   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":26219:26220   */\n      0x00\n        /* \"#utility.yul\":26211:26217   */\n      dup3\n        /* \"#utility.yul\":26207:26221   */\n      add\n        /* \"#utility.yul\":26200:26258   */\n      mstore\n        /* \"#utility.yul\":26292:26303   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26287:26289   */\n      0x20\n        /* \"#utility.yul\":26279:26285   */\n      dup3\n        /* \"#utility.yul\":26275:26290   */\n      add\n        /* \"#utility.yul\":26268:26304   */\n      mstore\n        /* \"#utility.yul\":26083:26311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26317:26683   */\n    tag_283:\n        /* \"#utility.yul\":26459:26462   */\n      0x00\n        /* \"#utility.yul\":26480:26547   */\n      tag_543\n        /* \"#utility.yul\":26544:26546   */\n      0x29\n        /* \"#utility.yul\":26539:26542   */\n      dup4\n        /* \"#utility.yul\":26480:26547   */\n      tag_238\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":26473:26547   */\n      swap2\n      pop\n        /* \"#utility.yul\":26556:26649   */\n      tag_544\n        /* \"#utility.yul\":26645:26648   */\n      dup3\n        /* \"#utility.yul\":26556:26649   */\n      tag_282\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":26674:26676   */\n      0x40\n        /* \"#utility.yul\":26669:26672   */\n      dup3\n        /* \"#utility.yul\":26665:26677   */\n      add\n        /* \"#utility.yul\":26658:26677   */\n      swap1\n      pop\n        /* \"#utility.yul\":26317:26683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26689:27108   */\n    tag_150:\n        /* \"#utility.yul\":26855:26859   */\n      0x00\n        /* \"#utility.yul\":26893:26895   */\n      0x20\n        /* \"#utility.yul\":26882:26891   */\n      dup3\n        /* \"#utility.yul\":26878:26896   */\n      add\n        /* \"#utility.yul\":26870:26896   */\n      swap1\n      pop\n        /* \"#utility.yul\":26942:26951   */\n      dup2\n        /* \"#utility.yul\":26936:26940   */\n      dup2\n        /* \"#utility.yul\":26932:26952   */\n      sub\n        /* \"#utility.yul\":26928:26929   */\n      0x00\n        /* \"#utility.yul\":26917:26926   */\n      dup4\n        /* \"#utility.yul\":26913:26930   */\n      add\n        /* \"#utility.yul\":26906:26953   */\n      mstore\n        /* \"#utility.yul\":26970:27101   */\n      tag_546\n        /* \"#utility.yul\":27096:27100   */\n      dup2\n        /* \"#utility.yul\":26970:27101   */\n      tag_283\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":26962:27101   */\n      swap1\n      pop\n        /* \"#utility.yul\":26689:27108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27114:27446   */\n    tag_164:\n        /* \"#utility.yul\":27235:27239   */\n      0x00\n        /* \"#utility.yul\":27273:27275   */\n      0x40\n        /* \"#utility.yul\":27262:27271   */\n      dup3\n        /* \"#utility.yul\":27258:27276   */\n      add\n        /* \"#utility.yul\":27250:27276   */\n      swap1\n      pop\n        /* \"#utility.yul\":27286:27357   */\n      tag_548\n        /* \"#utility.yul\":27354:27355   */\n      0x00\n        /* \"#utility.yul\":27343:27352   */\n      dup4\n        /* \"#utility.yul\":27339:27356   */\n      add\n        /* \"#utility.yul\":27330:27336   */\n      dup6\n        /* \"#utility.yul\":27286:27357   */\n      tag_231\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":27367:27439   */\n      tag_549\n        /* \"#utility.yul\":27435:27437   */\n      0x20\n        /* \"#utility.yul\":27424:27433   */\n      dup4\n        /* \"#utility.yul\":27420:27438   */\n      add\n        /* \"#utility.yul\":27411:27417   */\n      dup5\n        /* \"#utility.yul\":27367:27439   */\n      tag_231\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":27114:27446   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27452:27570   */\n    tag_284:\n        /* \"#utility.yul\":27539:27563   */\n      tag_551\n        /* \"#utility.yul\":27557:27562   */\n      dup2\n        /* \"#utility.yul\":27539:27563   */\n      tag_225\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":27534:27537   */\n      dup3\n        /* \"#utility.yul\":27527:27564   */\n      mstore\n        /* \"#utility.yul\":27452:27570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27576:27674   */\n    tag_285:\n        /* \"#utility.yul\":27627:27633   */\n      0x00\n        /* \"#utility.yul\":27661:27666   */\n      dup2\n        /* \"#utility.yul\":27655:27667   */\n      mload\n        /* \"#utility.yul\":27645:27667   */\n      swap1\n      pop\n        /* \"#utility.yul\":27576:27674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27680:27848   */\n    tag_286:\n        /* \"#utility.yul\":27763:27774   */\n      0x00\n        /* \"#utility.yul\":27797:27803   */\n      dup3\n        /* \"#utility.yul\":27792:27795   */\n      dup3\n        /* \"#utility.yul\":27785:27804   */\n      mstore\n        /* \"#utility.yul\":27837:27841   */\n      0x20\n        /* \"#utility.yul\":27832:27835   */\n      dup3\n        /* \"#utility.yul\":27828:27842   */\n      add\n        /* \"#utility.yul\":27813:27842   */\n      swap1\n      pop\n        /* \"#utility.yul\":27680:27848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27854:28214   */\n    tag_287:\n        /* \"#utility.yul\":27940:27943   */\n      0x00\n        /* \"#utility.yul\":27968:28006   */\n      tag_555\n        /* \"#utility.yul\":28000:28005   */\n      dup3\n        /* \"#utility.yul\":27968:28006   */\n      tag_285\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":28022:28092   */\n      tag_556\n        /* \"#utility.yul\":28085:28091   */\n      dup2\n        /* \"#utility.yul\":28080:28083   */\n      dup6\n        /* \"#utility.yul\":28022:28092   */\n      tag_286\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":28015:28092   */\n      swap4\n      pop\n        /* \"#utility.yul\":28101:28153   */\n      tag_557\n        /* \"#utility.yul\":28146:28152   */\n      dup2\n        /* \"#utility.yul\":28141:28144   */\n      dup6\n        /* \"#utility.yul\":28134:28138   */\n      0x20\n        /* \"#utility.yul\":28127:28132   */\n      dup7\n        /* \"#utility.yul\":28123:28139   */\n      add\n        /* \"#utility.yul\":28101:28153   */\n      tag_239\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28178:28207   */\n      tag_558\n        /* \"#utility.yul\":28200:28206   */\n      dup2\n        /* \"#utility.yul\":28178:28207   */\n      tag_240\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":28173:28176   */\n      dup5\n        /* \"#utility.yul\":28169:28208   */\n      add\n        /* \"#utility.yul\":28162:28208   */\n      swap2\n      pop\n        /* \"#utility.yul\":27944:28214   */\n      pop\n        /* \"#utility.yul\":27854:28214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28220:29273   */\n    tag_175:\n        /* \"#utility.yul\":28543:28547   */\n      0x00\n        /* \"#utility.yul\":28581:28584   */\n      0xa0\n        /* \"#utility.yul\":28570:28579   */\n      dup3\n        /* \"#utility.yul\":28566:28585   */\n      add\n        /* \"#utility.yul\":28558:28585   */\n      swap1\n      pop\n        /* \"#utility.yul\":28595:28666   */\n      tag_560\n        /* \"#utility.yul\":28663:28664   */\n      0x00\n        /* \"#utility.yul\":28652:28661   */\n      dup4\n        /* \"#utility.yul\":28648:28665   */\n      add\n        /* \"#utility.yul\":28639:28645   */\n      dup9\n        /* \"#utility.yul\":28595:28666   */\n      tag_284\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":28676:28748   */\n      tag_561\n        /* \"#utility.yul\":28744:28746   */\n      0x20\n        /* \"#utility.yul\":28733:28742   */\n      dup4\n        /* \"#utility.yul\":28729:28747   */\n      add\n        /* \"#utility.yul\":28720:28726   */\n      dup8\n        /* \"#utility.yul\":28676:28748   */\n      tag_284\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":28795:28804   */\n      dup2\n        /* \"#utility.yul\":28789:28793   */\n      dup2\n        /* \"#utility.yul\":28785:28805   */\n      sub\n        /* \"#utility.yul\":28780:28782   */\n      0x40\n        /* \"#utility.yul\":28769:28778   */\n      dup4\n        /* \"#utility.yul\":28765:28783   */\n      add\n        /* \"#utility.yul\":28758:28806   */\n      mstore\n        /* \"#utility.yul\":28823:28931   */\n      tag_562\n        /* \"#utility.yul\":28926:28930   */\n      dup2\n        /* \"#utility.yul\":28917:28923   */\n      dup7\n        /* \"#utility.yul\":28823:28931   */\n      tag_263\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":28815:28931   */\n      swap1\n      pop\n        /* \"#utility.yul\":28978:28987   */\n      dup2\n        /* \"#utility.yul\":28972:28976   */\n      dup2\n        /* \"#utility.yul\":28968:28988   */\n      sub\n        /* \"#utility.yul\":28963:28965   */\n      0x60\n        /* \"#utility.yul\":28952:28961   */\n      dup4\n        /* \"#utility.yul\":28948:28966   */\n      add\n        /* \"#utility.yul\":28941:28989   */\n      mstore\n        /* \"#utility.yul\":29006:29114   */\n      tag_563\n        /* \"#utility.yul\":29109:29113   */\n      dup2\n        /* \"#utility.yul\":29100:29106   */\n      dup6\n        /* \"#utility.yul\":29006:29114   */\n      tag_263\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":28998:29114   */\n      swap1\n      pop\n        /* \"#utility.yul\":29162:29171   */\n      dup2\n        /* \"#utility.yul\":29156:29160   */\n      dup2\n        /* \"#utility.yul\":29152:29172   */\n      sub\n        /* \"#utility.yul\":29146:29149   */\n      0x80\n        /* \"#utility.yul\":29135:29144   */\n      dup4\n        /* \"#utility.yul\":29131:29150   */\n      add\n        /* \"#utility.yul\":29124:29173   */\n      mstore\n        /* \"#utility.yul\":29190:29266   */\n      tag_564\n        /* \"#utility.yul\":29261:29265   */\n      dup2\n        /* \"#utility.yul\":29252:29258   */\n      dup5\n        /* \"#utility.yul\":29190:29266   */\n      tag_287\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":29182:29266   */\n      swap1\n      pop\n        /* \"#utility.yul\":28220:29273   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29279:29420   */\n    tag_288:\n        /* \"#utility.yul\":29335:29340   */\n      0x00\n        /* \"#utility.yul\":29366:29372   */\n      dup2\n        /* \"#utility.yul\":29360:29373   */\n      mload\n        /* \"#utility.yul\":29351:29373   */\n      swap1\n      pop\n        /* \"#utility.yul\":29382:29414   */\n      tag_566\n        /* \"#utility.yul\":29408:29413   */\n      dup2\n        /* \"#utility.yul\":29382:29414   */\n      tag_233\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":29279:29420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29426:29775   */\n    tag_178:\n        /* \"#utility.yul\":29495:29501   */\n      0x00\n        /* \"#utility.yul\":29544:29546   */\n      0x20\n        /* \"#utility.yul\":29532:29541   */\n      dup3\n        /* \"#utility.yul\":29523:29530   */\n      dup5\n        /* \"#utility.yul\":29519:29542   */\n      sub\n        /* \"#utility.yul\":29515:29547   */\n      slt\n        /* \"#utility.yul\":29512:29631   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":29550:29629   */\n      tag_569\n      tag_222\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":29512:29631   */\n    tag_568:\n        /* \"#utility.yul\":29670:29671   */\n      0x00\n        /* \"#utility.yul\":29695:29758   */\n      tag_570\n        /* \"#utility.yul\":29750:29757   */\n      dup5\n        /* \"#utility.yul\":29741:29747   */\n      dup3\n        /* \"#utility.yul\":29730:29739   */\n      dup6\n        /* \"#utility.yul\":29726:29748   */\n      add\n        /* \"#utility.yul\":29695:29758   */\n      tag_288\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":29685:29758   */\n      swap2\n      pop\n        /* \"#utility.yul\":29641:29768   */\n      pop\n        /* \"#utility.yul\":29426:29775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29781:29887   */\n    tag_289:\n        /* \"#utility.yul\":29825:29833   */\n      0x00\n        /* \"#utility.yul\":29874:29879   */\n      dup2\n        /* \"#utility.yul\":29869:29872   */\n      0xe0\n        /* \"#utility.yul\":29865:29880   */\n      shr\n        /* \"#utility.yul\":29844:29880   */\n      swap1\n      pop\n        /* \"#utility.yul\":29781:29887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29893:30076   */\n    tag_184:\n        /* \"#utility.yul\":29928:29931   */\n      0x00\n        /* \"#utility.yul\":29966:29967   */\n      0x03\n        /* \"#utility.yul\":29948:29964   */\n      returndatasize\n        /* \"#utility.yul\":29945:29968   */\n      gt\n        /* \"#utility.yul\":29942:30070   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":30004:30005   */\n      0x04\n        /* \"#utility.yul\":30001:30002   */\n      0x00\n        /* \"#utility.yul\":29998:29999   */\n      dup1\n        /* \"#utility.yul\":29983:30006   */\n      returndatacopy\n        /* \"#utility.yul\":30026:30060   */\n      tag_574\n        /* \"#utility.yul\":30057:30058   */\n      0x00\n        /* \"#utility.yul\":30051:30059   */\n      mload\n        /* \"#utility.yul\":30026:30060   */\n      tag_289\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":30019:30060   */\n      swap1\n      pop\n        /* \"#utility.yul\":29942:30070   */\n    tag_573:\n        /* \"#utility.yul\":29893:30076   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30082:30793   */\n    tag_186:\n        /* \"#utility.yul\":30121:30124   */\n      0x00\n        /* \"#utility.yul\":30159:30163   */\n      0x44\n        /* \"#utility.yul\":30141:30157   */\n      returndatasize\n        /* \"#utility.yul\":30138:30164   */\n      lt\n        /* \"#utility.yul\":30167:30172   */\n      tag_575\n        /* \"#utility.yul\":30135:30174   */\n      jumpi\n        /* \"#utility.yul\":30196:30216   */\n      tag_577\n      tag_221\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":30271:30272   */\n      0x04\n        /* \"#utility.yul\":30253:30269   */\n      returndatasize\n        /* \"#utility.yul\":30249:30273   */\n      sub\n        /* \"#utility.yul\":30246:30247   */\n      0x04\n        /* \"#utility.yul\":30240:30244   */\n      dup3\n        /* \"#utility.yul\":30225:30274   */\n      returndatacopy\n        /* \"#utility.yul\":30304:30308   */\n      dup1\n        /* \"#utility.yul\":30298:30309   */\n      mload\n        /* \"#utility.yul\":30403:30419   */\n      returndatasize\n        /* \"#utility.yul\":30396:30400   */\n      0x24\n        /* \"#utility.yul\":30388:30394   */\n      dup3\n        /* \"#utility.yul\":30384:30401   */\n      add\n        /* \"#utility.yul\":30381:30420   */\n      gt\n        /* \"#utility.yul\":30348:30366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30340:30346   */\n      dup3\n        /* \"#utility.yul\":30337:30367   */\n      gt\n        /* \"#utility.yul\":30321:30434   */\n      or\n        /* \"#utility.yul\":30318:30464   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":30449:30454   */\n      pop\n      pop\n      jump(tag_575)\n        /* \"#utility.yul\":30318:30464   */\n    tag_578:\n        /* \"#utility.yul\":30495:30501   */\n      dup1\n        /* \"#utility.yul\":30489:30493   */\n      dup3\n        /* \"#utility.yul\":30485:30502   */\n      add\n        /* \"#utility.yul\":30531:30534   */\n      dup1\n        /* \"#utility.yul\":30525:30535   */\n      mload\n        /* \"#utility.yul\":30558:30576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30550:30556   */\n      dup2\n        /* \"#utility.yul\":30547:30577   */\n      gt\n        /* \"#utility.yul\":30544:30587   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":30580:30585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_575)\n        /* \"#utility.yul\":30544:30587   */\n    tag_579:\n        /* \"#utility.yul\":30628:30634   */\n      dup1\n        /* \"#utility.yul\":30621:30625   */\n      0x20\n        /* \"#utility.yul\":30616:30619   */\n      dup4\n        /* \"#utility.yul\":30612:30626   */\n      add\n        /* \"#utility.yul\":30608:30635   */\n      add\n        /* \"#utility.yul\":30687:30688   */\n      0x04\n        /* \"#utility.yul\":30669:30685   */\n      returndatasize\n        /* \"#utility.yul\":30665:30689   */\n      sub\n        /* \"#utility.yul\":30659:30663   */\n      dup6\n        /* \"#utility.yul\":30655:30690   */\n      add\n        /* \"#utility.yul\":30650:30653   */\n      dup2\n        /* \"#utility.yul\":30647:30691   */\n      gt\n        /* \"#utility.yul\":30644:30701   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":30694:30699   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_575)\n        /* \"#utility.yul\":30644:30701   */\n    tag_580:\n        /* \"#utility.yul\":30711:30768   */\n      tag_581\n        /* \"#utility.yul\":30759:30765   */\n      dup3\n        /* \"#utility.yul\":30753:30757   */\n      0x20\n        /* \"#utility.yul\":30749:30766   */\n      add\n        /* \"#utility.yul\":30741:30747   */\n      dup6\n        /* \"#utility.yul\":30737:30767   */\n      add\n        /* \"#utility.yul\":30731:30735   */\n      dup7\n        /* \"#utility.yul\":30711:30768   */\n      tag_243\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":30784:30787   */\n      dup3\n        /* \"#utility.yul\":30777:30787   */\n      swap6\n      pop\n        /* \"#utility.yul\":30125:30793   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":30082:30793   */\n    tag_575:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30799:31038   */\n    tag_290:\n        /* \"#utility.yul\":30939:30973   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":30935:30936   */\n      0x00\n        /* \"#utility.yul\":30927:30933   */\n      dup3\n        /* \"#utility.yul\":30923:30937   */\n      add\n        /* \"#utility.yul\":30916:30974   */\n      mstore\n        /* \"#utility.yul\":31008:31030   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31003:31005   */\n      0x20\n        /* \"#utility.yul\":30995:31001   */\n      dup3\n        /* \"#utility.yul\":30991:31006   */\n      add\n        /* \"#utility.yul\":30984:31031   */\n      mstore\n        /* \"#utility.yul\":30799:31038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31044:31410   */\n    tag_291:\n        /* \"#utility.yul\":31186:31189   */\n      0x00\n        /* \"#utility.yul\":31207:31274   */\n      tag_584\n        /* \"#utility.yul\":31271:31273   */\n      0x34\n        /* \"#utility.yul\":31266:31269   */\n      dup4\n        /* \"#utility.yul\":31207:31274   */\n      tag_238\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":31200:31274   */\n      swap2\n      pop\n        /* \"#utility.yul\":31283:31376   */\n      tag_585\n        /* \"#utility.yul\":31372:31375   */\n      dup3\n        /* \"#utility.yul\":31283:31376   */\n      tag_290\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":31401:31403   */\n      0x40\n        /* \"#utility.yul\":31396:31399   */\n      dup3\n        /* \"#utility.yul\":31392:31404   */\n      add\n        /* \"#utility.yul\":31385:31404   */\n      swap1\n      pop\n        /* \"#utility.yul\":31044:31410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31416:31835   */\n    tag_190:\n        /* \"#utility.yul\":31582:31586   */\n      0x00\n        /* \"#utility.yul\":31620:31622   */\n      0x20\n        /* \"#utility.yul\":31609:31618   */\n      dup3\n        /* \"#utility.yul\":31605:31623   */\n      add\n        /* \"#utility.yul\":31597:31623   */\n      swap1\n      pop\n        /* \"#utility.yul\":31669:31678   */\n      dup2\n        /* \"#utility.yul\":31663:31667   */\n      dup2\n        /* \"#utility.yul\":31659:31679   */\n      sub\n        /* \"#utility.yul\":31655:31656   */\n      0x00\n        /* \"#utility.yul\":31644:31653   */\n      dup4\n        /* \"#utility.yul\":31640:31657   */\n      add\n        /* \"#utility.yul\":31633:31680   */\n      mstore\n        /* \"#utility.yul\":31697:31828   */\n      tag_587\n        /* \"#utility.yul\":31823:31827   */\n      dup2\n        /* \"#utility.yul\":31697:31828   */\n      tag_291\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":31689:31828   */\n      swap1\n      pop\n        /* \"#utility.yul\":31416:31835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31841:32068   */\n    tag_292:\n        /* \"#utility.yul\":31981:32015   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":31977:31978   */\n      0x00\n        /* \"#utility.yul\":31969:31975   */\n      dup3\n        /* \"#utility.yul\":31965:31979   */\n      add\n        /* \"#utility.yul\":31958:32016   */\n      mstore\n        /* \"#utility.yul\":32050:32060   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32045:32047   */\n      0x20\n        /* \"#utility.yul\":32037:32043   */\n      dup3\n        /* \"#utility.yul\":32033:32048   */\n      add\n        /* \"#utility.yul\":32026:32061   */\n      mstore\n        /* \"#utility.yul\":31841:32068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32074:32440   */\n    tag_293:\n        /* \"#utility.yul\":32216:32219   */\n      0x00\n        /* \"#utility.yul\":32237:32304   */\n      tag_590\n        /* \"#utility.yul\":32301:32303   */\n      0x28\n        /* \"#utility.yul\":32296:32299   */\n      dup4\n        /* \"#utility.yul\":32237:32304   */\n      tag_238\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":32230:32304   */\n      swap2\n      pop\n        /* \"#utility.yul\":32313:32406   */\n      tag_591\n        /* \"#utility.yul\":32402:32405   */\n      dup3\n        /* \"#utility.yul\":32313:32406   */\n      tag_292\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":32431:32433   */\n      0x40\n        /* \"#utility.yul\":32426:32429   */\n      dup3\n        /* \"#utility.yul\":32422:32434   */\n      add\n        /* \"#utility.yul\":32415:32434   */\n      swap1\n      pop\n        /* \"#utility.yul\":32074:32440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32446:32865   */\n    tag_194:\n        /* \"#utility.yul\":32612:32616   */\n      0x00\n        /* \"#utility.yul\":32650:32652   */\n      0x20\n        /* \"#utility.yul\":32639:32648   */\n      dup3\n        /* \"#utility.yul\":32635:32653   */\n      add\n        /* \"#utility.yul\":32627:32653   */\n      swap1\n      pop\n        /* \"#utility.yul\":32699:32708   */\n      dup2\n        /* \"#utility.yul\":32693:32697   */\n      dup2\n        /* \"#utility.yul\":32689:32709   */\n      sub\n        /* \"#utility.yul\":32685:32686   */\n      0x00\n        /* \"#utility.yul\":32674:32683   */\n      dup4\n        /* \"#utility.yul\":32670:32687   */\n      add\n        /* \"#utility.yul\":32663:32710   */\n      mstore\n        /* \"#utility.yul\":32727:32858   */\n      tag_593\n        /* \"#utility.yul\":32853:32857   */\n      dup2\n        /* \"#utility.yul\":32727:32858   */\n      tag_293\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":32719:32858   */\n      swap1\n      pop\n        /* \"#utility.yul\":32446:32865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32871:33622   */\n    tag_205:\n        /* \"#utility.yul\":33094:33098   */\n      0x00\n        /* \"#utility.yul\":33132:33135   */\n      0xa0\n        /* \"#utility.yul\":33121:33130   */\n      dup3\n        /* \"#utility.yul\":33117:33136   */\n      add\n        /* \"#utility.yul\":33109:33136   */\n      swap1\n      pop\n        /* \"#utility.yul\":33146:33217   */\n      tag_595\n        /* \"#utility.yul\":33214:33215   */\n      0x00\n        /* \"#utility.yul\":33203:33212   */\n      dup4\n        /* \"#utility.yul\":33199:33216   */\n      add\n        /* \"#utility.yul\":33190:33196   */\n      dup9\n        /* \"#utility.yul\":33146:33217   */\n      tag_284\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":33227:33299   */\n      tag_596\n        /* \"#utility.yul\":33295:33297   */\n      0x20\n        /* \"#utility.yul\":33284:33293   */\n      dup4\n        /* \"#utility.yul\":33280:33298   */\n      add\n        /* \"#utility.yul\":33271:33277   */\n      dup8\n        /* \"#utility.yul\":33227:33299   */\n      tag_284\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":33309:33381   */\n      tag_597\n        /* \"#utility.yul\":33377:33379   */\n      0x40\n        /* \"#utility.yul\":33366:33375   */\n      dup4\n        /* \"#utility.yul\":33362:33380   */\n      add\n        /* \"#utility.yul\":33353:33359   */\n      dup7\n        /* \"#utility.yul\":33309:33381   */\n      tag_231\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":33391:33463   */\n      tag_598\n        /* \"#utility.yul\":33459:33461   */\n      0x60\n        /* \"#utility.yul\":33448:33457   */\n      dup4\n        /* \"#utility.yul\":33444:33462   */\n      add\n        /* \"#utility.yul\":33435:33441   */\n      dup6\n        /* \"#utility.yul\":33391:33463   */\n      tag_231\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":33511:33520   */\n      dup2\n        /* \"#utility.yul\":33505:33509   */\n      dup2\n        /* \"#utility.yul\":33501:33521   */\n      sub\n        /* \"#utility.yul\":33495:33498   */\n      0x80\n        /* \"#utility.yul\":33484:33493   */\n      dup4\n        /* \"#utility.yul\":33480:33499   */\n      add\n        /* \"#utility.yul\":33473:33522   */\n      mstore\n        /* \"#utility.yul\":33539:33615   */\n      tag_599\n        /* \"#utility.yul\":33610:33614   */\n      dup2\n        /* \"#utility.yul\":33601:33607   */\n      dup5\n        /* \"#utility.yul\":33539:33615   */\n      tag_287\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":33531:33615   */\n      swap1\n      pop\n        /* \"#utility.yul\":32871:33622   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122020dfd4e94848a8ef46fa0e4728681c5b33be82ee7fdd5a636cb25520572c370c64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_660": {
									"entryPoint": 79,
									"id": 660,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8293:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:11",
																"statements": []
															},
															"src": "1688:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:11"
															},
															"nodeType": "YulIf",
															"src": "1810:101:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:11",
														"type": ""
													}
												],
												"src": "1610:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:11"
															},
															"nodeType": "YulIf",
															"src": "2178:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:11",
														"type": ""
													}
												],
												"src": "1923:421:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:11"
															},
															"nodeType": "YulIf",
															"src": "2447:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:11",
														"type": ""
													}
												],
												"src": "2364:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:437:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2858:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2860:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2833:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2825:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:32:11"
															},
															"nodeType": "YulIf",
															"src": "2822:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2951:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2966:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2990:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3001:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2986:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2986:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2980:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2970:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3051:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3053:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3053:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3053:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3020:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3017:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3158:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2793:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2805:6:11",
														"type": ""
													}
												],
												"src": "2725:524:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3314:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3325:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3341:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3335:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3325:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3297:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3307:6:11",
														"type": ""
													}
												],
												"src": "3255:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3388:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3398:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3502:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3505:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3519:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3360:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3597:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3607:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3621:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3627:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3638:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3668:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3664:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3642:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3715:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3729:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3743:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3751:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3739:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3729:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3695:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:26:11"
															},
															"nodeType": "YulIf",
															"src": "3685:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3818:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3832:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3832:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3832:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3782:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3805:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3813:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3802:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3779:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:38:11"
															},
															"nodeType": "YulIf",
															"src": "3776:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3581:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3590:6:11",
														"type": ""
													}
												],
												"src": "3546:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3926:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3936:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3944:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3936:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3964:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3967:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3957:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:14:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3957:14:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3980:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3998:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3988:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3980:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3913:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3921:4:11",
														"type": ""
													}
												],
												"src": "3872:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4063:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4073:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4091:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4098:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4087:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4083:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4046:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4056:6:11",
														"type": ""
													}
												],
												"src": "4019:93:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4171:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4181:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4206:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4212:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4202:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4181:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4146:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4152:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4162:8:11",
														"type": ""
													}
												],
												"src": "4118:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4307:317:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4317:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4338:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4321:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4361:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4392:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4403:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4373:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4365:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4521:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4491:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4491:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4479:8:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4539:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4552:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4563:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4559:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4548:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4539:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4578:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4591:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4602:8:11"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4612:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4588:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4268:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4275:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4287:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4300:6:11",
														"type": ""
													}
												],
												"src": "4231:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4675:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4685:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4696:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4685:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4657:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4667:7:11",
														"type": ""
													}
												],
												"src": "4630:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4745:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4755:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4762:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4731:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4741:3:11",
														"type": ""
													}
												],
												"src": "4713:60:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4839:82:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4849:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4907:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4889:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4889:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4880:8:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4880:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4862:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4849:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4819:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4829:9:11",
														"type": ""
													}
												],
												"src": "4779:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4974:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4984:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4991:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4960:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4970:3:11",
														"type": ""
													}
												],
												"src": "4927:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5084:193:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5094:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5149:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5118:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5098:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5173:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5213:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5207:5:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5207:11:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5252:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5228:23:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5228:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5179:27:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:105:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5061:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5067:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5075:7:11",
														"type": ""
													}
												],
												"src": "5008:269:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5332:24:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5342:8:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5349:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5328:3:11",
														"type": ""
													}
												],
												"src": "5283:73:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5415:136:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5425:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5439:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5439:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5429:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5524:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5530:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5538:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5480:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5401:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5407:6:11",
														"type": ""
													}
												],
												"src": "5362:189:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5607:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5674:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5718:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5725:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5688:29:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5688:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5688:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5627:5:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5624:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:14:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5639:26:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5641:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5654:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5650:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5650:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5641:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5621:2:11",
																"statements": []
															},
															"src": "5617:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5595:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5602:3:11",
														"type": ""
													}
												],
												"src": "5557:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:464:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5854:431:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5868:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5916:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "5884:31:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5884:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "5872:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5935:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "5958:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "5986:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "5968:17:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5968:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5954:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5954:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5939:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6155:27:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6157:23:11",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6172:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6157:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6139:10:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6151:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6136:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6136:18:11"
																		},
																		"nodeType": "YulIf",
																		"src": "6133:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6224:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6241:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6269:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6251:17:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6251:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6237:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6237:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6195:28:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6195:80:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6195:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5845:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5842:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5842:11:11"
															},
															"nodeType": "YulIf",
															"src": "5839:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5804:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5811:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5816:10:11",
														"type": ""
													}
												],
												"src": "5749:543:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6371:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6396:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6402:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6371:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6336:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6342:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6352:8:11",
														"type": ""
													}
												],
												"src": "6298:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6472:118:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6482:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6531:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6534:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6527:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6527:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6546:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6542:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6542:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6498:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6494:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6486:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6559:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6573:4:11"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6579:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6559:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6449:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6455:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6465:6:11",
														"type": ""
													}
												],
												"src": "6421:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6676:214:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6809:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6836:4:11"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6842:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "6817:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6809:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6855:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6866:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6876:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6879:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6863:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6657:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6663:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6671:4:11",
														"type": ""
													}
												],
												"src": "6595:295:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6987:1303:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6998:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7012:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7002:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7134:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7136:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7136:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7136:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7106:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7114:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7103:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7103:30:11"
															},
															"nodeType": "YulIf",
															"src": "7100:56:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7166:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7212:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7206:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7206:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7180:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7170:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7311:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7317:6:11"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7325:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7265:45:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7265:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7265:67:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7342:18:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7359:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7346:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7370:17:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7383:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7370:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7434:611:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7448:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7467:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7479:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7475:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7475:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7463:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7463:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7452:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7499:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7545:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7513:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7513:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7503:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7563:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7572:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7567:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7631:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7656:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7674:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7679:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7670:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7670:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7664:5:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7664:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7649:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7649:42:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7649:42:11"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7708:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7722:6:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7730:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7708:6:11"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7749:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7766:9:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7777:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7749:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7597:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7600:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7594:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7594:14:11"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7609:21:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7611:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7620:1:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7623:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7616:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7616:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7611:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7590:3:11",
																					"statements": []
																				},
																				"src": "7586:208:11"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7830:156:11",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7848:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7875:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7880:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7871:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7871:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7865:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7865:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7852:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7915:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7942:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "7957:6:11"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "7965:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "7953:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7953:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "7923:18:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7923:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7908:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7908:64:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7908:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7813:7:11"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7822:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7810:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7810:19:11"
																				},
																				"nodeType": "YulIf",
																				"src": "7807:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8006:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8020:6:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8028:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8016:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8016:14:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8032:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8012:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8012:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7999:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7999:36:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7999:36:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7427:618:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8062:222:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8076:14:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8089:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8080:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8113:67:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8131:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8150:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8155:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8146:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8146:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8140:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8140:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8131:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8106:6:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8103:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8200:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8259:5:11"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8266:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8206:52:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8206:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8193:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8193:81:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8193:81:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8054:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7407:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7404:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:14:11"
															},
															"nodeType": "YulSwitch",
															"src": "7397:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6976:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6982:3:11",
														"type": ""
													}
												],
												"src": "6895:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B48 CODESIZE SUB DUP1 PUSH3 0x2B48 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x201 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x584 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x49D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCD DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEE PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x104 PUSH3 0x64 JUMP JUMPDEST SWAP1 POP PUSH3 0x112 DUP3 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x140 DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x150 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x17D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19A PUSH3 0x194 DUP5 PUSH3 0x117 JUMP JUMPDEST PUSH3 0xF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x7D JUMP JUMPDEST JUMPDEST PUSH3 0x1C6 DUP5 DUP3 DUP6 PUSH3 0x14D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1E6 JUMPI PUSH3 0x1E5 PUSH3 0x78 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x183 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x21A JUMPI PUSH3 0x219 PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x23B JUMPI PUSH3 0x23A PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x249 DUP5 DUP3 DUP6 ADD PUSH3 0x1CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2BB JUMPI PUSH3 0x2BA PUSH3 0x25D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x325 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2E6 JUMP JUMPDEST PUSH3 0x331 DUP7 DUP4 PUSH3 0x2E6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37E PUSH3 0x378 PUSH3 0x372 DUP5 PUSH3 0x349 JUMP JUMPDEST PUSH3 0x353 JUMP JUMPDEST PUSH3 0x349 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x39A DUP4 PUSH3 0x35D JUMP JUMPDEST PUSH3 0x3B2 PUSH3 0x3A9 DUP3 PUSH3 0x385 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2F3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3C9 PUSH3 0x3BA JUMP JUMPDEST PUSH3 0x3D6 DUP2 DUP5 DUP5 PUSH3 0x38F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3FE JUMPI PUSH3 0x3F2 PUSH1 0x0 DUP3 PUSH3 0x3BF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x44D JUMPI PUSH3 0x417 DUP2 PUSH3 0x2C1 JUMP JUMPDEST PUSH3 0x422 DUP5 PUSH3 0x2D6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x432 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x44A PUSH3 0x441 DUP6 PUSH3 0x2D6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3DB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x472 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x452 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48D DUP4 DUP4 PUSH3 0x45F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4A8 DUP3 PUSH3 0x252 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4C4 JUMPI PUSH3 0x4C3 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x4D0 DUP3 SLOAD PUSH3 0x28C JUMP JUMPDEST PUSH3 0x4DD DUP3 DUP3 DUP6 PUSH3 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x515 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x500 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x50C DUP6 DUP3 PUSH3 0x47F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x57C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x525 DUP7 PUSH3 0x2C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x54F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x528 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x56F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x45F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25B4 DUP1 PUSH3 0x594 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E5B JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x234E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x2370 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x234E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x2370 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1577 DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x1587 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1590 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B5 DUP2 DUP5 PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15FA DUP3 PUSH2 0x1551 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x1638 DUP3 DUP3 PUSH2 0x15F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH2 0x167C DUP5 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x1669 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16CD JUMPI DUP1 PUSH2 0x16B9 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16A6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x166E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH2 0x172E DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175D PUSH2 0x1758 DUP5 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1779 JUMPI PUSH2 0x1778 PUSH2 0x1705 JUMP JUMPDEST JUMPDEST PUSH2 0x1784 DUP5 DUP3 DUP6 PUSH2 0x173B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x174A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17F5 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1815 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1822 DUP9 DUP3 DUP10 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x184F DUP9 DUP3 DUP10 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x187C DUP9 DUP3 DUP10 ADD PUSH2 0x178C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A3 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 PUSH2 0x18C3 DUP5 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1669 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1914 JUMPI DUP1 PUSH2 0x1900 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18ED JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1943 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19BA DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP4 DUP4 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F DUP3 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1A39 DUP2 DUP6 PUSH2 0x19CF JUMP JUMPDEST SWAP4 POP PUSH2 0x1A44 DUP4 PUSH2 0x19E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A75 JUMPI DUP2 MLOAD PUSH2 0x1A5C DUP9 DUP3 PUSH2 0x19FF JUMP JUMPDEST SWAP8 POP PUSH2 0x1A67 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A48 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAD DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B27 JUMPI PUSH2 0x1B26 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B35 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B46 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7A DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B8B DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B9C DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BAD DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDA DUP9 DUP3 DUP10 ADD PUSH2 0x178C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C43 PUSH1 0x2B DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4E DUP3 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C72 DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1C79 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x32 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E66 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E98 JUMPI PUSH2 0x1E97 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2E DUP2 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9C DUP3 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC0 DUP2 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2023 PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x202E DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2052 DUP2 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B5 PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E4 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F6 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x2101 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215B DUP2 DUP6 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x216F DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D4 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2203 DUP2 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x221F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x222C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2269 DUP3 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2273 DUP2 DUP6 PUSH2 0x224D JUMP JUMPDEST SWAP4 POP PUSH2 0x2283 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x228C DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22AC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x22B9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2233 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22CB DUP2 DUP7 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22DF DUP2 DUP6 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22F3 DUP2 DUP5 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x230E DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP5 DUP3 DUP6 ADD PUSH2 0x22FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x236D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x236A PUSH1 0x0 MLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23FD JUMPI PUSH2 0x2382 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23AA JUMPI POP POP PUSH2 0x23FD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C8 JUMPI POP POP POP POP PUSH2 0x23FD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23E5 JUMPI POP POP POP POP POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x23F4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15F1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2467 DUP3 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248B DUP2 PUSH2 0x244F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EE PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP3 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x251D DUP2 PUSH2 0x24E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2539 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x2546 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x2553 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2560 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2572 DUP2 DUP5 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDF 0xD4 0xE9 BASEFEE BASEFEE 0xA8 0xEF CHAINID STATICCALL 0xE SELFBALANCE 0x28 PUSH9 0x1C5B33BE82EE7FDD5A PUSH4 0x6CB25520 JUMPI 0x2C CALLDATACOPY 0xC PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "570:16550:1:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16550;;8171:86;8244:6;8237:4;:13;;;;;;:::i;:::-;;8171:86;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:524::-;2805:6;2854:2;2842:9;2833:7;2829:23;2825:32;2822:119;;;2860:79;;:::i;:::-;2822:119;3001:1;2990:9;2986:17;2980:24;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3158:74;3224:7;3215:6;3204:9;3200:22;3158:74;:::i;:::-;3148:84;;2951:291;2725:524;;;;:::o;3255:99::-;3307:6;3341:5;3335:12;3325:22;;3255:99;;;:::o;3360:180::-;3408:77;3405:1;3398:88;3505:4;3502:1;3495:15;3529:4;3526:1;3519:15;3546:320;3590:6;3627:1;3621:4;3617:12;3607:22;;3674:1;3668:4;3664:12;3695:18;3685:81;;3751:4;3743:6;3739:17;3729:27;;3685:81;3813:2;3805:6;3802:14;3782:18;3779:38;3776:84;;3832:18;;:::i;:::-;3776:84;3597:269;3546:320;;;:::o;3872:141::-;3921:4;3944:3;3936:11;;3967:3;3964:1;3957:14;4001:4;3998:1;3988:18;3980:26;;3872:141;;;:::o;4019:93::-;4056:6;4103:2;4098;4091:5;4087:14;4083:23;4073:33;;4019:93;;;:::o;4118:107::-;4162:8;4212:5;4206:4;4202:16;4181:37;;4118:107;;;;:::o;4231:393::-;4300:6;4350:1;4338:10;4334:18;4373:97;4403:66;4392:9;4373:97;:::i;:::-;4491:39;4521:8;4510:9;4491:39;:::i;:::-;4479:51;;4563:4;4559:9;4552:5;4548:21;4539:30;;4612:4;4602:8;4598:19;4591:5;4588:30;4578:40;;4307:317;;4231:393;;;;;:::o;4630:77::-;4667:7;4696:5;4685:16;;4630:77;;;:::o;4713:60::-;4741:3;4762:5;4755:12;;4713:60;;;:::o;4779:142::-;4829:9;4862:53;4880:34;4889:24;4907:5;4889:24;:::i;:::-;4880:34;:::i;:::-;4862:53;:::i;:::-;4849:66;;4779:142;;;:::o;4927:75::-;4970:3;4991:5;4984:12;;4927:75;;;:::o;5008:269::-;5118:39;5149:7;5118:39;:::i;:::-;5179:91;5228:41;5252:16;5228:41;:::i;:::-;5220:6;5213:4;5207:11;5179:91;:::i;:::-;5173:4;5166:105;5084:193;5008:269;;;:::o;5283:73::-;5328:3;5283:73;:::o;5362:189::-;5439:32;;:::i;:::-;5480:65;5538:6;5530;5524:4;5480:65;:::i;:::-;5415:136;5362:189;;:::o;5557:186::-;5617:120;5634:3;5627:5;5624:14;5617:120;;;5688:39;5725:1;5718:5;5688:39;:::i;:::-;5661:1;5654:5;5650:13;5641:22;;5617:120;;;5557:186;;:::o;5749:543::-;5850:2;5845:3;5842:11;5839:446;;;5884:38;5916:5;5884:38;:::i;:::-;5968:29;5986:10;5968:29;:::i;:::-;5958:8;5954:44;6151:2;6139:10;6136:18;6133:49;;;6172:8;6157:23;;6133:49;6195:80;6251:22;6269:3;6251:22;:::i;:::-;6241:8;6237:37;6224:11;6195:80;:::i;:::-;5854:431;;5839:446;5749:543;;;:::o;6298:117::-;6352:8;6402:5;6396:4;6392:16;6371:37;;6298:117;;;;:::o;6421:169::-;6465:6;6498:51;6546:1;6542:6;6534:5;6531:1;6527:13;6498:51;:::i;:::-;6494:56;6579:4;6573;6569:15;6559:25;;6472:118;6421:169;;;;:::o;6595:295::-;6671:4;6817:29;6842:3;6836:4;6817:29;:::i;:::-;6809:37;;6879:3;6876:1;6872:11;6866:4;6863:21;6855:29;;6595:295;;;;:::o;6895:1395::-;7012:37;7045:3;7012:37;:::i;:::-;7114:18;7106:6;7103:30;7100:56;;;7136:18;;:::i;:::-;7100:56;7180:38;7212:4;7206:11;7180:38;:::i;:::-;7265:67;7325:6;7317;7311:4;7265:67;:::i;:::-;7359:1;7383:4;7370:17;;7415:2;7407:6;7404:14;7432:1;7427:618;;;;8089:1;8106:6;8103:77;;;8155:9;8150:3;8146:19;8140:26;8131:35;;8103:77;8206:67;8266:6;8259:5;8206:67;:::i;:::-;8200:4;8193:81;8062:222;7397:887;;7427:618;7479:4;7475:9;7467:6;7463:22;7513:37;7545:4;7513:37;:::i;:::-;7572:1;7586:208;7600:7;7597:1;7594:14;7586:208;;;7679:9;7674:3;7670:19;7664:26;7656:6;7649:42;7730:1;7722:6;7718:14;7708:24;;7777:2;7766:9;7762:18;7749:31;;7623:4;7620:1;7616:12;7611:17;;7586:208;;;7822:6;7813:7;7810:19;7807:179;;;7880:9;7875:3;7871:19;7865:26;7923:48;7965:4;7957:6;7953:17;7942:9;7923:48;:::i;:::-;7915:6;7908:64;7830:156;7807:179;8032:1;8028;8020:6;8016:14;8012:22;8006:4;7999:36;7434:611;;;7397:887;;6987:1303;;;6895:1395;;:::o;570:16550:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1170": {
									"entryPoint": 3765,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1326": {
									"entryPoint": 4244,
									"id": 1326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1151": {
									"entryPoint": 3757,
									"id": 1151,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1298": {
									"entryPoint": 3773,
									"id": 1298,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1233": {
									"entryPoint": 4366,
									"id": 1233,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1812": {
									"entryPoint": 1917,
									"id": 1812,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_649": {
									"entryPoint": 1925,
									"id": 649,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_514": {
									"entryPoint": 3090,
									"id": 514,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1132": {
									"entryPoint": 2726,
									"id": 1132,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_284": {
									"entryPoint": 1199,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_220": {
									"entryPoint": 464,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_319": {
									"entryPoint": 1502,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1523": {
									"entryPoint": 4837,
									"id": 1523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_397": {
									"entryPoint": 1038,
									"id": 397,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_357": {
									"entryPoint": 1650,
									"id": 357,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_301": {
									"entryPoint": 1480,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_180": {
									"entryPoint": 664,
									"id": 180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2048": {
									"entryPoint": 1811,
									"id": 2048,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_192": {
									"entryPoint": 890,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8855,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33625:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:11",
														"type": ""
													}
												],
												"src": "841:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:11"
															},
															"nodeType": "YulIf",
															"src": "977:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:11",
														"type": ""
													}
												],
												"src": "924:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:11",
														"type": ""
													}
												],
												"src": "1052:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:11"
															},
															"nodeType": "YulIf",
															"src": "1290:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:11",
														"type": ""
													}
												],
												"src": "1197:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:11",
														"type": ""
													}
												],
												"src": "1677:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:11",
														"type": ""
													}
												],
												"src": "1801:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:11",
														"type": ""
													}
												],
												"src": "2029:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:11"
															},
															"nodeType": "YulIf",
															"src": "2236:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:11",
														"type": ""
													}
												],
												"src": "2184:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:11",
														"type": ""
													}
												],
												"src": "2310:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:11"
															},
															"nodeType": "YulIf",
															"src": "2528:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:11",
														"type": ""
													}
												],
												"src": "2453:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:11",
														"type": ""
													}
												],
												"src": "2786:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:11",
														"type": ""
													}
												],
												"src": "2882:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:11",
														"type": ""
													}
												],
												"src": "2997:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:11"
															},
															"nodeType": "YulIf",
															"src": "3289:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:11",
														"type": ""
													}
												],
												"src": "3213:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:11",
														"type": ""
													}
												],
												"src": "3548:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:11",
														"type": ""
													}
												],
												"src": "3653:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:258:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3887:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3896:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3891:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3956:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3981:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3986:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3977:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4000:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4005:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3996:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3996:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3970:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3970:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3970:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3928:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3930:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3939:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3935:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3930:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3910:3:11",
																"statements": []
															},
															"src": "3906:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:76:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4108:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4099:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4099:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4092:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4034:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4031:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:13:11"
															},
															"nodeType": "YulIf",
															"src": "4028:101:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3859:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3864:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:11",
														"type": ""
													}
												],
												"src": "3828:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4217:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4182:6:11",
														"type": ""
													}
												],
												"src": "4141:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:272:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4351:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4398:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4365:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4355:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4526:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4500:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4572:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4577:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4322:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4329:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4337:3:11",
														"type": ""
													}
												],
												"src": "4249:364:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4759:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4747:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4813:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4920:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4721:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:11",
														"type": ""
													}
												],
												"src": "4619:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5061:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5352:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5330:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5304:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5469:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5471:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5471:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5471:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5409:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5448:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5406:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:62:11"
															},
															"nodeType": "YulIf",
															"src": "5403:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5511:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5284:4:11",
														"type": ""
													}
												],
												"src": "5247:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5585:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5595:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5652:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5624:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5559:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5568:6:11",
														"type": ""
													}
												],
												"src": "5534:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:30:11"
															},
															"nodeType": "YulIf",
															"src": "5822:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5900:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5735:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5746:4:11",
														"type": ""
													}
												],
												"src": "5669:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5986:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:608:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6263:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6247:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6238:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6337:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6348:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6341:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6426:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6430:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6498:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6512:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6482:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:15:11"
															},
															"nodeType": "YulIf",
															"src": "6479:122:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6686:144:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6701:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6705:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6743:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6769:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6781:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6748:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6748:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6799:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6815:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6806:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6799:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6652:25:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6654:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6670:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6661:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6614:21:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:17:11",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6627:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6620:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6610:220:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6198:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6206:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6222:5:11",
														"type": ""
													}
												],
												"src": "6126:710:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6987:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6964:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6972:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6960:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6979:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:35:11"
															},
															"nodeType": "YulIf",
															"src": "6946:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7077:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7091:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7081:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7120:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7129:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7120:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6914:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6922:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6930:5:11",
														"type": ""
													}
												],
												"src": "6859:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7235:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7529:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7531:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7498:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:11"
															},
															"nodeType": "YulIf",
															"src": "7495:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7569:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7647:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7653:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7408:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7419:4:11",
														"type": ""
													}
												],
												"src": "7358:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7722:103:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:11"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7803:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7799:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7704:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7709:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7714:6:11",
														"type": ""
													}
												],
												"src": "7671:154:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:327:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7924:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7990:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7949:40:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7933:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8014:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8021:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8041:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8102:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8083:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:25:11"
															},
															"nodeType": "YulIf",
															"src": "8073:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8223:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8194:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:41:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7887:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7908:5:11",
														"type": ""
													}
												],
												"src": "7831:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:277:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8370:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8372:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8372:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8349:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8364:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:35:11"
															},
															"nodeType": "YulIf",
															"src": "8331:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8476:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8466:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8505:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8573:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8514:46:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8299:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8307:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8315:5:11",
														"type": ""
													}
												],
												"src": "8260:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8797:1316:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8846:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:33:11"
															},
															"nodeType": "YulIf",
															"src": "8807:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "8937:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8952:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8956:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8981:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9064:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9109:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9192:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9207:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9249:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9221:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9211:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9300:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9302:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9302:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9302:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9272:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9269:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9266:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9397:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9407:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9397:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9547:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9534:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9615:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9615:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9615:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9582:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9579:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9710:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9770:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9781:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9766:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9790:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9720:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9818:288:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9833:47:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9864:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:3:11",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9860:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:19:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9847:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:33:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9837:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9927:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9929:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9929:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9929:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9899:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9896:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9893:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10024:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10068:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10079:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10064:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10064:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10034:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10024:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8735:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8746:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8766:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8774:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8790:6:11",
														"type": ""
													}
												],
												"src": "8604:1509:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10201:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10306:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10308:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10308:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:30:11"
															},
															"nodeType": "YulIf",
															"src": "10272:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10338:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10412:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10196:4:11",
														"type": ""
													}
												],
												"src": "10119:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10555:608:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10565:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10647:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10590:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10590:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10574:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10565:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10675:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10704:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10720:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10731:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10753:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10757:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10825:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10812:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10820:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10809:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:15:11"
															},
															"nodeType": "YulIf",
															"src": "10806:122:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:144:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11028:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11032:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11070:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11096:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11108:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11075:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11075:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11063:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11063:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11126:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11142:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11133:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11133:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10966:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10963:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10979:25:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10981:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10997:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10981:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10941:21:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10943:17:11",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10954:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10947:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10937:220:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10525:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10533:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10541:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10549:5:11",
														"type": ""
													}
												],
												"src": "10453:710:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11312:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11314:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11314:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11314:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11299:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11287:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11287:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11306:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:35:11"
															},
															"nodeType": "YulIf",
															"src": "11273:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11404:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11408:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11447:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11538:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11456:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11241:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11249:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11257:5:11",
														"type": ""
													}
												],
												"src": "11186:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11695:761:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11741:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11743:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11716:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:32:11"
															},
															"nodeType": "YulIf",
															"src": "11705:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "11834:302:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11880:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11876:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11876:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11863:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11941:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11943:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11943:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11943:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11913:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11921:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11910:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "11907:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12038:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12098:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12109:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12094:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12094:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12118:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12048:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12038:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12146:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12161:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12192:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12203:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12188:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12188:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12175:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12165:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12254:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12256:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12256:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12256:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12223:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "12220:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12351:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12411:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12422:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12407:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12431:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12361:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12351:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11657:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11668:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11688:6:11",
														"type": ""
													}
												],
												"src": "11562:894:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12557:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12519:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12529:6:11",
														"type": ""
													}
												],
												"src": "12462:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12693:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12715:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12731:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12665:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12670:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12681:11:11",
														"type": ""
													}
												],
												"src": "12582:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:60:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12854:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12862:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12854:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12875:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12831:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12839:4:11",
														"type": ""
													}
												],
												"src": "12772:132:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12965:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12982:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13005:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12987:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12953:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12960:3:11",
														"type": ""
													}
												],
												"src": "12910:108:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13148:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:33:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13169:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13169:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13077:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13085:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13093:10:11",
														"type": ""
													}
												],
												"src": "13024:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13294:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13294:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13271:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13279:4:11",
														"type": ""
													}
												],
												"src": "13209:113:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:608:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13492:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13554:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13506:47:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13496:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13569:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13650:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13655:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13576:73:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13736:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13686:49:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13675:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13751:21:11",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13765:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13755:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13841:224:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13855:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13882:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13876:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13859:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13902:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13953:13:11"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13968:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13909:43:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13909:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13902:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13995:52:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13800:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13814:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13816:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13825:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13828:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13821:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13816:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13785:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13787:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13796:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13791:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13781:284:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14081:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13461:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13477:3:11",
														"type": ""
													}
												],
												"src": "13358:732:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:225:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14266:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14277:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14254:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14320:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14326:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14316:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14316:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14457:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14354:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14346:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14228:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14239:4:11",
														"type": ""
													}
												],
												"src": "14096:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14569:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14578:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14571:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14571:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14571:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14538:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14560:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14545:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14545:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14535:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:40:11"
															},
															"nodeType": "YulIf",
															"src": "14525:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14508:5:11",
														"type": ""
													}
												],
												"src": "14475:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14656:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14678:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14665:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14656:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14718:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14694:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14624:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14632:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14640:5:11",
														"type": ""
													}
												],
												"src": "14597:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14816:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14862:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14864:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14864:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14864:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14837:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:32:11"
															},
															"nodeType": "YulIf",
															"src": "14826:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "14955:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14999:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15034:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15045:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15030:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15030:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15054:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15009:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14999:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15082:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15097:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15101:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15127:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15159:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15170:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15155:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15155:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15179:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15137:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15137:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15127:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14778:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14789:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14801:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14809:6:11",
														"type": ""
													}
												],
												"src": "14736:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15341:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15341:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15341:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15314:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15323:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15306:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15306:32:11"
															},
															"nodeType": "YulIf",
															"src": "15303:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "15432:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15447:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15461:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15451:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15476:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15511:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15507:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15531:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15486:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15486:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15476:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15559:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15574:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15578:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15604:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15639:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15635:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15635:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15659:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15614:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15604:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15255:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15266:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15278:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15286:6:11",
														"type": ""
													}
												],
												"src": "15210:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15833:946:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15882:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15882:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15854:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15863:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15850:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:33:11"
															},
															"nodeType": "YulIf",
															"src": "15843:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "15973:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15988:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16002:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15992:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16273:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16308:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16319:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16304:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16304:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16328:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16283:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16273:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16356:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16371:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16385:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16375:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16401:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16436:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16447:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16432:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16456:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16411:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16401:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16484:288:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16499:47:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16530:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16541:3:11",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16526:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:19:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16513:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16513:33:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16503:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16593:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16595:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16595:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16595:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16565:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16573:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16562:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "16559:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16690:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16700:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16700:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16690:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15771:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15782:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15794:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15802:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15810:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15818:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15826:6:11",
														"type": ""
													}
												],
												"src": "15690:1089:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16891:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16921:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16925:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16902:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16902:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:15:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16883:6:11",
														"type": ""
													}
												],
												"src": "16785:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17167:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17177:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17243:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17248:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17184:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17184:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17177:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17349:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "17260:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17260:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17260:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17362:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17373:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17378:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17369:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17369:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17362:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17155:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17163:3:11",
														"type": ""
													}
												],
												"src": "17021:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17564:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17574:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17586:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17582:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17574:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17621:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17632:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17617:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17640:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17646:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17636:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17636:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17666:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17800:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17674:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17666:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17544:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17559:4:11",
														"type": ""
													}
												],
												"src": "17393:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17846:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17863:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17866:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17856:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17960:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17963:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17953:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17953:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17984:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17987:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17977:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17818:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18055:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18065:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18079:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18075:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18075:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18096:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18126:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18132:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18100:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18173:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18187:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18201:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18209:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18197:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18197:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18153:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18146:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18146:26:11"
															},
															"nodeType": "YulIf",
															"src": "18143:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18276:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18290:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18290:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18290:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18240:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18263:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18271:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18260:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18260:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18237:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18237:38:11"
															},
															"nodeType": "YulIf",
															"src": "18234:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18039:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18048:6:11",
														"type": ""
													}
												],
												"src": "18004:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18436:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18458:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18466:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18454:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18454:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18470:34:11",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18447:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18447:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18447:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18526:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18534:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18522:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18522:15:11"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18539:20:11",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18515:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18515:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18515:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18428:6:11",
														"type": ""
													}
												],
												"src": "18330:237:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18719:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18729:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18795:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18800:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18736:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18736:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18729:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18901:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "18812:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18812:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18812:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18914:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18925:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18930:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18921:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18921:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18914:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18707:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18715:3:11",
														"type": ""
													}
												],
												"src": "18573:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19116:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19126:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19138:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19149:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19134:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19134:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19126:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19173:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19184:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19169:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19192:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19198:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19188:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19162:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19162:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19162:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19218:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19352:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19226:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19218:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19096:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19111:4:11",
														"type": ""
													}
												],
												"src": "18945:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19476:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19498:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19506:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19494:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19494:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19510:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19487:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19487:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19487:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19566:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19574:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19562:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19562:15:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19579:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19555:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19555:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19555:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19468:6:11",
														"type": ""
													}
												],
												"src": "19370:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19750:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19760:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19826:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19831:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19767:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19760:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19932:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19843:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19843:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19843:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19945:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19956:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19961:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19952:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19952:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19945:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19738:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19746:3:11",
														"type": ""
													}
												],
												"src": "19604:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20147:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20157:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20169:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20180:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20165:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20165:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20157:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20204:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20215:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20200:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20200:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20223:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20229:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20219:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20219:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20193:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20193:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20193:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20249:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20383:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20257:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20257:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20249:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20127:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20142:4:11",
														"type": ""
													}
												],
												"src": "19976:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20429:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20446:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20449:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20439:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20543:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20546:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20536:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20536:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20536:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20567:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20570:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20560:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20560:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20560:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20401:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20615:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20632:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20635:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20625:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20625:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20729:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20732:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20722:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20722:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20722:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20753:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20756:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20746:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20746:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20746:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20587:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20816:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20826:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20853:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20835:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20835:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20826:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20949:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20951:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20951:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20951:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20874:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20881:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20871:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20871:77:11"
															},
															"nodeType": "YulIf",
															"src": "20868:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20980:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20991:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20998:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20987:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20987:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20980:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20802:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20812:3:11",
														"type": ""
													}
												],
												"src": "20773:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21118:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21140:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21148:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21136:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21136:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21152:34:11",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21129:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21129:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21129:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21208:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21216:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21204:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21204:15:11"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21221:11:11",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21197:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21197:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21197:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21110:6:11",
														"type": ""
													}
												],
												"src": "21012:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21392:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21402:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21468:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21473:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21409:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21409:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21402:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21574:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "21485:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21485:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21485:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21587:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21598:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21603:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21594:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21587:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21380:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21388:3:11",
														"type": ""
													}
												],
												"src": "21246:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21789:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21799:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21811:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21822:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21807:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21807:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21799:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21846:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21857:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21842:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21842:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21865:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21871:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21861:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21861:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21835:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21835:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21835:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21891:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22025:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21899:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21899:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21891:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21769:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21784:4:11",
														"type": ""
													}
												],
												"src": "21618:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22149:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22171:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22179:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22167:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22167:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22183:34:11",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22160:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22160:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22160:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22239:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22247:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22235:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22235:15:11"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22252:10:11",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22228:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22228:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22141:6:11",
														"type": ""
													}
												],
												"src": "22043:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22422:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22432:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22498:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22503:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22439:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22439:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22432:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22604:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "22515:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22515:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22515:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22617:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22628:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22633:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22624:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22624:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22617:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22410:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22418:3:11",
														"type": ""
													}
												],
												"src": "22276:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22819:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22829:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22841:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22852:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22837:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22837:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22829:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22876:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22887:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22872:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22872:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22895:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22901:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22865:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22865:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22921:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23055:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22929:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22929:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22921:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22799:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22814:4:11",
														"type": ""
													}
												],
												"src": "22648:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23179:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23201:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23209:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23197:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23197:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23213:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23190:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23190:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23190:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23269:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23277:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23265:15:11"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23282:7:11",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23258:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23258:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23258:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23171:6:11",
														"type": ""
													}
												],
												"src": "23073:224:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23449:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23459:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23525:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23530:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23466:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23466:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23459:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23631:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "23542:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23542:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23542:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23644:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23655:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23660:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23651:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23651:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23644:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23437:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23445:3:11",
														"type": ""
													}
												],
												"src": "23303:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23846:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23856:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23868:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23879:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23864:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23864:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23856:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23903:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23914:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23899:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23899:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23922:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23928:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23918:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23918:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23948:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24082:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23956:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23956:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23948:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23826:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23841:4:11",
														"type": ""
													}
												],
												"src": "23675:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24206:123:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24228:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24236:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24224:14:11"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24240:34:11",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24217:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24217:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24217:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24296:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24304:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24292:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24292:15:11"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24309:12:11",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24285:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24285:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24285:37:11"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24198:6:11",
														"type": ""
													}
												],
												"src": "24100:229:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24481:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24491:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24557:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24562:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24498:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24498:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24491:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24663:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "24574:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24574:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24574:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24676:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24687:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24692:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24683:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24683:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24676:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24469:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24477:3:11",
														"type": ""
													}
												],
												"src": "24335:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24878:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24888:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24900:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24911:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24896:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24896:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24888:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24935:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24946:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24931:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24931:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24954:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24960:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24950:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24950:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24924:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24924:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24924:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24980:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25114:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24988:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24988:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24980:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24858:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24873:4:11",
														"type": ""
													}
												],
												"src": "24707:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25176:261:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25186:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25209:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25191:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25191:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25186:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25220:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25243:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25225:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25225:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25220:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25383:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25385:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25385:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25385:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25304:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25311:66:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25379:1:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25307:74:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25301:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25301:81:11"
															},
															"nodeType": "YulIf",
															"src": "25298:107:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25415:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25426:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25429:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25422:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25422:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25415:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25163:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25166:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25172:3:11",
														"type": ""
													}
												],
												"src": "25132:305:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25669:408:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25679:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25691:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25702:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25687:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25687:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25679:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25726:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25737:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25722:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25722:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25745:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25751:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25741:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25741:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25715:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25715:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25715:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25771:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25873:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25882:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25779:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25779:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25771:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25908:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25919:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25904:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25904:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25928:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25934:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25924:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25924:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25897:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25897:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25897:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25954:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26056:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26065:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25962:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25962:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25954:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25633:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25645:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25653:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25664:4:11",
														"type": ""
													}
												],
												"src": "25443:634:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26189:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26211:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26219:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26207:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26223:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26200:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26200:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26200:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26279:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26287:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26275:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26275:15:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26292:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26268:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26268:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26268:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26181:6:11",
														"type": ""
													}
												],
												"src": "26083:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26463:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26473:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26539:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26544:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26480:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26480:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26473:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26645:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "26556:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26556:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26556:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26658:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26669:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26674:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26665:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26665:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26658:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26451:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26459:3:11",
														"type": ""
													}
												],
												"src": "26317:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26860:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26870:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26882:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26893:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26878:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26878:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26870:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26917:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26928:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26913:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26913:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26936:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26942:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26932:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26932:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26906:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26906:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26906:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26962:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27096:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26970:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26970:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26962:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26840:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26855:4:11",
														"type": ""
													}
												],
												"src": "26689:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27240:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27250:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27262:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27273:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27258:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27258:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27250:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27330:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27343:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27354:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27339:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27339:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27286:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27286:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27286:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27411:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27424:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27435:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27420:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27420:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27367:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27367:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27367:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27204:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27216:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27224:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27235:4:11",
														"type": ""
													}
												],
												"src": "27114:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27517:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27534:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27557:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "27539:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27539:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27527:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27527:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27527:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27505:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27512:3:11",
														"type": ""
													}
												],
												"src": "27452:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27634:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27645:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27661:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27655:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27655:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27645:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27617:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27627:6:11",
														"type": ""
													}
												],
												"src": "27576:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27775:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27792:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27797:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27785:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27785:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27785:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27813:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27832:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27837:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27828:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27828:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "27813:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27747:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27752:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "27763:11:11",
														"type": ""
													}
												],
												"src": "27680:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27944:270:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27954:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28000:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27968:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27968:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27958:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28015:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28080:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28085:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28022:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28022:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28015:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28127:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28134:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28123:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28123:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28141:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28146:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "28101:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28101:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28101:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28162:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28173:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28200:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28178:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28178:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28169:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28169:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28162:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27925:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27932:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27940:3:11",
														"type": ""
													}
												],
												"src": "27854:360:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28548:725:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28558:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28570:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28581:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28566:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28566:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28558:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28639:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28652:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28663:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28648:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28648:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28595:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28595:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28595:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28720:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28733:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28744:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28729:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28729:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28676:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28676:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28676:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28769:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28780:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28765:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28765:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28789:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28795:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28785:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28785:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28758:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28758:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28758:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28815:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28917:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28926:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28823:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28823:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28815:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28952:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28963:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28948:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28948:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28972:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28978:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28968:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28968:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28941:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28941:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28941:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28998:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29100:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29109:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29006:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29006:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28998:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29135:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29146:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29131:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29131:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29156:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29162:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29152:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29152:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29124:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29124:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29124:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29182:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29252:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29261:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29190:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29190:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29182:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28488:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28500:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28508:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28516:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28524:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28532:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28543:4:11",
														"type": ""
													}
												],
												"src": "28220:1053:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29341:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29351:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29366:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29360:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29360:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29351:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29408:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29382:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29382:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29382:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29319:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29327:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29335:5:11",
														"type": ""
													}
												],
												"src": "29279:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29502:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29548:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29550:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29550:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29550:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29523:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29532:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29519:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29519:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29544:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29515:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29515:32:11"
															},
															"nodeType": "YulIf",
															"src": "29512:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "29641:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29656:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29670:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29660:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29685:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29730:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29741:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29726:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29726:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29750:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29695:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29695:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29685:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29472:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29483:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29495:6:11",
														"type": ""
													}
												],
												"src": "29426:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29834:53:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29844:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29869:3:11",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29874:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29865:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29865:15:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29844:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29815:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29825:8:11",
														"type": ""
													}
												],
												"src": "29781:106:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29932:144:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29969:101:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29998:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30001:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30004:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29983:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29983:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29983:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "30019:41:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30057:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30051:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30051:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "30026:24:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30026:34:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "30019:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29948:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29948:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29966:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29945:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29945:23:11"
															},
															"nodeType": "YulIf",
															"src": "29942:128:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "29928:3:11",
														"type": ""
													}
												],
												"src": "29893:183:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30125:668:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30165:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30167:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30141:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30141:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30159:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30138:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30138:26:11"
															},
															"nodeType": "YulIf",
															"src": "30135:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30184:32:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30196:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30196:20:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30188:4:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30240:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30246:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30253:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30253:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30271:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30249:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30249:24:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30225:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30225:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30225:49:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30284:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30304:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30298:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30298:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30288:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30435:29:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30449:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30340:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30348:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30337:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30337:30:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30388:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30396:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30384:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30384:17:11"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30403:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30403:16:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30381:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30381:39:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30321:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30321:113:11"
															},
															"nodeType": "YulIf",
															"src": "30318:146:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30474:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30489:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30495:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30485:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30485:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30478:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30511:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30531:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30525:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30525:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30515:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30578:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30580:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30550:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30558:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30547:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30547:30:11"
															},
															"nodeType": "YulIf",
															"src": "30544:43:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30597:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30616:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30621:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30612:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30612:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30628:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30608:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30608:27:11"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30601:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30692:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30694:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30650:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30659:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30669:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30669:16:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30687:1:11",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30665:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30665:24:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30655:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30655:35:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30647:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30647:44:11"
															},
															"nodeType": "YulIf",
															"src": "30644:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30731:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30741:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30753:4:11",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30759:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30749:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30749:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30737:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30737:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30711:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30711:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30711:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30777:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30784:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30777:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30121:3:11",
														"type": ""
													}
												],
												"src": "30082:711:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30905:133:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30927:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30935:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30923:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30923:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30939:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30916:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30916:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30916:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30995:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31003:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30991:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30991:15:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31008:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30984:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30984:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30984:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30897:6:11",
														"type": ""
													}
												],
												"src": "30799:239:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31190:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31200:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31266:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31271:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31207:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31207:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31200:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31372:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "31283:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31283:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31283:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31385:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31396:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31401:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31392:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31392:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31385:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31178:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31186:3:11",
														"type": ""
													}
												],
												"src": "31044:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31587:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31597:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31609:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31620:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31605:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31605:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31597:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31644:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31655:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31640:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31640:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31663:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31669:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31659:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31659:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31633:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31633:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31633:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31689:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31823:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31697:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31697:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31689:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31567:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31582:4:11",
														"type": ""
													}
												],
												"src": "31416:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31947:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31969:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31977:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31965:14:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31981:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31958:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31958:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31958:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32037:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32045:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32033:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32033:15:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32050:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32026:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32026:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32026:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31939:6:11",
														"type": ""
													}
												],
												"src": "31841:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32220:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32230:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32296:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32301:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32237:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32237:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32230:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32402:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "32313:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32313:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32313:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32415:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32426:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32431:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32422:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32422:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32415:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32208:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32216:3:11",
														"type": ""
													}
												],
												"src": "32074:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32617:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32627:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32639:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32650:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32635:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32635:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32627:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32674:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32685:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32670:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32670:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32693:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32699:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32689:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32689:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32663:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32663:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32663:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32719:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32853:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32727:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32727:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32719:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32597:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32612:4:11",
														"type": ""
													}
												],
												"src": "32446:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33099:523:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33109:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33121:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33132:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33117:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33117:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33109:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33190:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33203:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33214:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33199:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33199:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33146:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33146:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33146:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33271:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33284:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33295:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33280:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33280:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33227:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33227:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33227:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33353:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33366:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33377:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33362:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33362:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33309:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33309:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33309:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33435:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33448:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33459:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33444:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33444:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33391:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33391:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33391:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33484:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33495:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33480:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33480:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33505:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33511:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33501:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33501:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33473:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33473:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33473:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33531:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "33601:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33610:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33539:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33539:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33531:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33039:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "33051:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "33059:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "33067:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "33075:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33083:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33094:4:11",
														"type": ""
													}
												],
												"src": "32871:751:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b0565b6101d0565b6040516100b391906113ff565b60405180910390f35b6100d660048036038101906100d19190611472565b610298565b6040516100e391906114ba565b60405180910390f35b610106600480360381019061010191906114d5565b61037a565b604051610113919061159b565b60405180910390f35b610136600480360381019061013191906117ba565b61040e565b005b610152600480360381019061014d919061194c565b6104af565b60405161015f9190611a82565b60405180910390f35b610182600480360381019061017d9190611ad0565b6105c8565b005b61019e60048036038101906101999190611b10565b6105de565b6040516101ab91906114ba565b60405180910390f35b6101ce60048036038101906101c99190611b50565b610672565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790611c59565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610373575061037282610713565b5b9050919050565b60606002805461038990611ca8565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590611ca8565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505050509050919050565b61041661077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045c575061045b8561045661077d565b6105de565b5b61049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611d4b565b60405180910390fd5b6104a88585858585610785565b5050505050565b606081518351146104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611ddd565b60405180910390fd5b6000835167ffffffffffffffff811115610512576105116115c2565b5b6040519080825280602002602001820160405280156105405781602001602082028036833780820191505090505b50905060005b84518110156105bd5761058d85828151811061056557610564611dfd565b5b60200260200101518583815181106105805761057f611dfd565b5b60200260200101516101d0565b8282815181106105a05761059f611dfd565b5b602002602001018181525050806105b690611e5b565b9050610546565b508091505092915050565b6105da6105d361077d565b8383610aa6565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067a61077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c057506106bf856106ba61077d565b6105de565b5b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611f15565b60405180910390fd5b61070c8585858585610c12565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090611fa7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90612039565b60405180910390fd5b600061084261077d565b9050610852818787878787610ead565b60005b8451811015610a0357600085828151811061087357610872611dfd565b5b60200260200101519050600085838151811061089257610891611dfd565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906120cb565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e891906120eb565b92505081905550505050806109fc90611e5b565b9050610855565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7a929190612141565b60405180910390a4610a90818787878787610eb5565b610a9e818787878787610ebd565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b906121ea565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0591906114ba565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890612039565b60405180910390fd5b6000610c8b61077d565b90506000610c9885611094565b90506000610ca585611094565b9050610cb5838989858589610ead565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d43906120cb565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0191906120eb565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e7e92919061220a565b60405180910390a4610e94848a8a86868a610eb5565b610ea2848a8a8a8a8a61110e565b505050505050505050565b505050505050565b505050505050565b610edc8473ffffffffffffffffffffffffffffffffffffffff166112e5565b1561108c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f22959493929190612297565b6020604051808303816000875af1925050508015610f5e57506040513d601f19601f82011682018060405250810190610f5b9190612314565b60015b61100357610f6a61234e565b806308c379a003610fc65750610f7e612370565b80610f895750610fc8565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd919061159b565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa90612472565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190612504565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b3576110b26115c2565b5b6040519080825280602002602001820160405280156110e15781602001602082028036833780820191505090505b50905082816000815181106110f9576110f8611dfd565b5b60200260200101818152505080915050919050565b61112d8473ffffffffffffffffffffffffffffffffffffffff166112e5565b156112dd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611173959493929190612524565b6020604051808303816000875af19250505080156111af57506040513d601f19601f820116820180604052508101906111ac9190612314565b60015b611254576111bb61234e565b806308c379a00361121757506111cf612370565b806111da5750611219565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e919061159b565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612472565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612504565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113478261131c565b9050919050565b6113578161133c565b811461136257600080fd5b50565b6000813590506113748161134e565b92915050565b6000819050919050565b61138d8161137a565b811461139857600080fd5b50565b6000813590506113aa81611384565b92915050565b600080604083850312156113c7576113c6611312565b5b60006113d585828601611365565b92505060206113e68582860161139b565b9150509250929050565b6113f98161137a565b82525050565b600060208201905061141460008301846113f0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61144f8161141a565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60006020828403121561148857611487611312565b5b60006114968482850161145d565b91505092915050565b60008115159050919050565b6114b48161149f565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000602082840312156114eb576114ea611312565b5b60006114f98482850161139b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561153c578082015181840152602081019050611521565b8381111561154b576000848401525b50505050565b6000601f19601f8301169050919050565b600061156d82611502565b611577818561150d565b935061158781856020860161151e565b61159081611551565b840191505092915050565b600060208201905081810360008301526115b58184611562565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115fa82611551565b810181811067ffffffffffffffff82111715611619576116186115c2565b5b80604052505050565b600061162c611308565b905061163882826115f1565b919050565b600067ffffffffffffffff821115611658576116576115c2565b5b602082029050602081019050919050565b600080fd5b600061168161167c8461163d565b611622565b905080838252602082019050602084028301858111156116a4576116a3611669565b5b835b818110156116cd57806116b9888261139b565b8452602084019350506020810190506116a6565b5050509392505050565b600082601f8301126116ec576116eb6115bd565b5b81356116fc84826020860161166e565b91505092915050565b600080fd5b600067ffffffffffffffff821115611725576117246115c2565b5b61172e82611551565b9050602081019050919050565b82818337600083830152505050565b600061175d6117588461170a565b611622565b90508281526020810184848401111561177957611778611705565b5b61178484828561173b565b509392505050565b600082601f8301126117a1576117a06115bd565b5b81356117b184826020860161174a565b91505092915050565b600080600080600060a086880312156117d6576117d5611312565b5b60006117e488828901611365565b95505060206117f588828901611365565b945050604086013567ffffffffffffffff81111561181657611815611317565b5b611822888289016116d7565b935050606086013567ffffffffffffffff81111561184357611842611317565b5b61184f888289016116d7565b925050608086013567ffffffffffffffff8111156118705761186f611317565b5b61187c8882890161178c565b9150509295509295909350565b600067ffffffffffffffff8211156118a4576118a36115c2565b5b602082029050602081019050919050565b60006118c86118c384611889565b611622565b905080838252602082019050602084028301858111156118eb576118ea611669565b5b835b8181101561191457806119008882611365565b8452602084019350506020810190506118ed565b5050509392505050565b600082601f830112611933576119326115bd565b5b81356119438482602086016118b5565b91505092915050565b6000806040838503121561196357611962611312565b5b600083013567ffffffffffffffff81111561198157611980611317565b5b61198d8582860161191e565b925050602083013567ffffffffffffffff8111156119ae576119ad611317565b5b6119ba858286016116d7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f98161137a565b82525050565b6000611a0b83836119f0565b60208301905092915050565b6000602082019050919050565b6000611a2f826119c4565b611a3981856119cf565b9350611a44836119e0565b8060005b83811015611a75578151611a5c88826119ff565b9750611a6783611a17565b925050600181019050611a48565b5085935050505092915050565b60006020820190508181036000830152611a9c8184611a24565b905092915050565b611aad8161149f565b8114611ab857600080fd5b50565b600081359050611aca81611aa4565b92915050565b60008060408385031215611ae757611ae6611312565b5b6000611af585828601611365565b9250506020611b0685828601611abb565b9150509250929050565b60008060408385031215611b2757611b26611312565b5b6000611b3585828601611365565b9250506020611b4685828601611365565b9150509250929050565b600080600080600060a08688031215611b6c57611b6b611312565b5b6000611b7a88828901611365565b9550506020611b8b88828901611365565b9450506040611b9c8882890161139b565b9350506060611bad8882890161139b565b925050608086013567ffffffffffffffff811115611bce57611bcd611317565b5b611bda8882890161178c565b9150509295509295909350565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611c43602b8361150d565b9150611c4e82611be7565b604082019050919050565b60006020820190508181036000830152611c7281611c36565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc057607f821691505b602082108103611cd357611cd2611c79565b5b50919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611d3560328361150d565b9150611d4082611cd9565b604082019050919050565b60006020820190508181036000830152611d6481611d28565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dc760298361150d565b9150611dd282611d6b565b604082019050919050565b60006020820190508181036000830152611df681611dba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e668261137a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e9857611e97611e2c565b5b600182019050919050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000611eff60298361150d565b9150611f0a82611ea3565b604082019050919050565b60006020820190508181036000830152611f2e81611ef2565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f9160288361150d565b9150611f9c82611f35565b604082019050919050565b60006020820190508181036000830152611fc081611f84565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061202360258361150d565b915061202e82611fc7565b604082019050919050565b6000602082019050818103600083015261205281612016565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b60006120b5602a8361150d565b91506120c082612059565b604082019050919050565b600060208201905081810360008301526120e4816120a8565b9050919050565b60006120f68261137a565b91506121018361137a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561213657612135611e2c565b5b828201905092915050565b6000604082019050818103600083015261215b8185611a24565b9050818103602083015261216f8184611a24565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b60006121d460298361150d565b91506121df82612178565b604082019050919050565b60006020820190508181036000830152612203816121c7565b9050919050565b600060408201905061221f60008301856113f0565b61222c60208301846113f0565b9392505050565b61223c8161133c565b82525050565b600081519050919050565b600082825260208201905092915050565b600061226982612242565b612273818561224d565b935061228381856020860161151e565b61228c81611551565b840191505092915050565b600060a0820190506122ac6000830188612233565b6122b96020830187612233565b81810360408301526122cb8186611a24565b905081810360608301526122df8185611a24565b905081810360808301526122f3818461225e565b90509695505050505050565b60008151905061230e81611446565b92915050565b60006020828403121561232a57612329611312565b5b6000612338848285016122ff565b91505092915050565b60008160e01c9050919050565b600060033d111561236d5760046000803e61236a600051612341565b90505b90565b600060443d106123fd57612382611308565b60043d036004823e80513d602482011167ffffffffffffffff821117156123aa5750506123fd565b808201805167ffffffffffffffff8111156123c857505050506123fd565b80602083010160043d0385018111156123e55750505050506123fd565b6123f4826020018501866115f1565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061245c60348361150d565b915061246782612400565b604082019050919050565b6000602082019050818103600083015261248b8161244f565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006124ee60288361150d565b91506124f982612492565b604082019050919050565b6000602082019050818103600083015261251d816124e1565b9050919050565b600060a0820190506125396000830188612233565b6125466020830187612233565b61255360408301866113f0565b61256060608301856113f0565b8181036080830152612572818461225e565b9050969550505050505056fea264697066735822122020dfd4e94848a8ef46fa0e4728681c5b33be82ee7fdd5a636cb25520572c370c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E5B JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x234E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x2370 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x234E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x2370 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1577 DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x1587 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1590 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B5 DUP2 DUP5 PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15FA DUP3 PUSH2 0x1551 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x1638 DUP3 DUP3 PUSH2 0x15F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH2 0x167C DUP5 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x1669 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16CD JUMPI DUP1 PUSH2 0x16B9 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16A6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x166E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH2 0x172E DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175D PUSH2 0x1758 DUP5 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1779 JUMPI PUSH2 0x1778 PUSH2 0x1705 JUMP JUMPDEST JUMPDEST PUSH2 0x1784 DUP5 DUP3 DUP6 PUSH2 0x173B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x174A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17F5 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1815 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1822 DUP9 DUP3 DUP10 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x184F DUP9 DUP3 DUP10 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x187C DUP9 DUP3 DUP10 ADD PUSH2 0x178C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A3 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 PUSH2 0x18C3 DUP5 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1669 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1914 JUMPI DUP1 PUSH2 0x1900 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18ED JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x15BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1943 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19BA DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP4 DUP4 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F DUP3 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1A39 DUP2 DUP6 PUSH2 0x19CF JUMP JUMPDEST SWAP4 POP PUSH2 0x1A44 DUP4 PUSH2 0x19E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A75 JUMPI DUP2 MLOAD PUSH2 0x1A5C DUP9 DUP3 PUSH2 0x19FF JUMP JUMPDEST SWAP8 POP PUSH2 0x1A67 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A48 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAD DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B27 JUMPI PUSH2 0x1B26 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B35 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B46 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7A DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B8B DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B9C DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BAD DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDA DUP9 DUP3 DUP10 ADD PUSH2 0x178C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C43 PUSH1 0x2B DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4E DUP3 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C72 DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1C79 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x32 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E66 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E98 JUMPI PUSH2 0x1E97 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2E DUP2 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9C DUP3 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC0 DUP2 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2023 PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x202E DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2052 DUP2 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B5 PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E4 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F6 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x2101 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x1E2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215B DUP2 DUP6 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x216F DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D4 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2203 DUP2 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x221F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x222C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2269 DUP3 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2273 DUP2 DUP6 PUSH2 0x224D JUMP JUMPDEST SWAP4 POP PUSH2 0x2283 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x228C DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22AC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x22B9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2233 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22CB DUP2 DUP7 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22DF DUP2 DUP6 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22F3 DUP2 DUP5 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x230E DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP5 DUP3 DUP6 ADD PUSH2 0x22FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x236D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x236A PUSH1 0x0 MLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23FD JUMPI PUSH2 0x2382 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23AA JUMPI POP POP PUSH2 0x23FD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C8 JUMPI POP POP POP POP PUSH2 0x23FD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23E5 JUMPI POP POP POP POP POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x23F4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15F1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2467 DUP3 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248B DUP2 PUSH2 0x244F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EE PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP3 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x251D DUP2 PUSH2 0x24E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2539 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x2546 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x2553 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2560 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2572 DUP2 DUP5 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDF 0xD4 0xE9 BASEFEE BASEFEE 0xA8 0xEF CHAINID STATICCALL 0xE SELFBALANCE 0x28 PUSH9 0x1C5B33BE82EE7FDD5A PUSH4 0x6CB25520 JUMPI 0x2C CALLDATACOPY 0xC PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "570:16550:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4060:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3146:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3366:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3599:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:228;2271:7;2317:1;2298:21;;:7;:21;;;2290:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2384:9;:13;2394:2;2384:13;;;;;;;;;;;:22;2398:7;2384:22;;;;;;;;;;;;;;;;2377:29;;2185:228;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;4293:12;:10;:12::i;:::-;4285:20;;:4;:20;;;:60;;;;4309:36;4326:4;4332:12;:10;:12::i;:::-;4309:16;:36::i;:::-;4285:60;4264:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2962:3;;;;:::i;:::-;;;2921:120;;;;3058:13;3051:20;;;2570:508;;;;:::o;3146:153::-;3240:52;3259:12;:10;:12::i;:::-;3273:8;3283;3240:18;:52::i;:::-;3146:153;;:::o;3366:166::-;3465:4;3488:18;:27;3507:7;3488:27;;;;;;;;;;;;;;;:37;3516:8;3488:37;;;;;;;;;;;;;;;;;;;;;;;;;3481:44;;3366:166;;;;:::o;3599:389::-;3807:12;:10;:12::i;:::-;3799:20;;:4;:20;;;:60;;;;3823:36;3840:4;3846:12;:10;:12::i;:::-;3823:16;:36::i;:::-;3799:60;3778:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;:::-;3599:389;;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;6233:1115:1:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6544:1;6530:16;;:2;:16;;;6522:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6599:16;6618:12;:10;:12::i;:::-;6599:31;;6641:60;6662:8;6672:4;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;6800:27;;6842:19;6864:9;:13;6874:2;6864:13;;;;;;;;;;;:19;6878:4;6864:19;;;;;;;;;;;;;;;;6842:41;;6920:6;6905:11;:21;;6897:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7051:6;7037:11;:20;7015:9;:13;7025:2;7015:13;;;;;;;;;;;:19;7029:4;7015:19;;;;;;;;;;;;;;;:42;;;;7106:6;7085:9;:13;7095:2;7085:13;;;;;;;;;;;:17;7099:2;7085:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7196:59;7216:8;7226:4;7232:2;7236:3;7241:7;7250:4;7196:19;:59::i;:::-;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;12914:17;;:5;:17;;;12906:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13025:8;12987:18;:25;13006:5;12987:25;;;;;;;;;;;;;;;:35;13013:8;12987:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13070:8;13048:41;;13063:5;13048:41;;;13080:8;13048:41;;;;;;:::i;:::-;;;;;;;;12773:323;;;:::o;4940:947::-;5135:1;5121:16;;:2;:16;;;5113:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5190:16;5209:12;:10;:12::i;:::-;5190:31;;5231:20;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:9;:13;5451:2;5441:13;;;;;;;;;;;:19;5455:4;5441:19;;;;;;;;;;;;;;;;5419:41;;5493:6;5478:11;:21;;5470:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5616:6;5602:11;:20;5580:9;:13;5590:2;5580:13;;;;;;;;;;;:19;5594:4;5580:19;;;;;;;;;;;;;;;:42;;;;5663:6;5642:9;:13;5652:2;5642:13;;;;;;;;;;;:17;5656:2;5642:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5716:2;5685:46;;5710:4;5685:46;;5700:8;5685:46;;;5720:2;5724:6;5685:46;;;;;;;:::i;:::-;;;;;;;;5742:59;5762:8;5772:4;5778:2;5782:3;5787:7;5796:4;5742:19;:59::i;:::-;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;14030:214::-;;;;;;;:::o;15177:213::-;;;;;;;:::o;16127:792::-;16359:15;:2;:13;;;:15::i;:::-;16355:558;;;16411:2;16394:43;;;16438:8;16448:4;16454:3;16459:7;16468:4;16394:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;;;;;;;;;;:::i;:::-;;;;;;;;16390:513;;;16826:62;;;;;;;;;;:::i;:::-;;;;;;;;16390:513;16564:48;;;16552:60;;;:8;:60;;;;16548:157;;16636:50;;;;;;;;;;:::i;:::-;;;;;;;;16548:157;16474:245;16355:558;16127:792;;;;;;:::o;16925:193::-;16991:16;17019:22;17058:1;17044:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17106:5;17099:12;;;16925:193;;;:::o;15396:725::-;15603:15;:2;:13;;;:15::i;:::-;15599:516;;;15655:2;15638:38;;;15677:8;15687:4;15693:2;15697:6;15705:4;15638:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15981:6;15974:14;;;;;;;;;;;:::i;:::-;;;;;;;;15634:471;;;16028:62;;;;;;;;;;:::i;:::-;;;;;;;;15634:471;15771:43;;;15759:55;;;:8;:55;;;;15755:152;;15838:50;;;;;;;;;;:::i;:::-;;;;;;;;15755:152;15711:210;15599:516;15396:725;;;;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:307::-;3896:1;3906:113;3920:6;3917:1;3914:13;3906:113;;;4005:1;4000:3;3996:11;3990:18;3986:1;3981:3;3977:11;3970:39;3942:2;3939:1;3935:10;3930:15;;3906:113;;;4037:6;4034:1;4031:13;4028:101;;;4117:1;4108:6;4103:3;4099:16;4092:27;4028:101;3877:258;3828:307;;;:::o;4141:102::-;4182:6;4233:2;4229:7;4224:2;4217:5;4213:14;4209:28;4199:38;;4141:102;;;:::o;4249:364::-;4337:3;4365:39;4398:5;4365:39;:::i;:::-;4420:71;4484:6;4479:3;4420:71;:::i;:::-;4413:78;;4500:52;4545:6;4540:3;4533:4;4526:5;4522:16;4500:52;:::i;:::-;4577:29;4599:6;4577:29;:::i;:::-;4572:3;4568:39;4561:46;;4341:272;4249:364;;;;:::o;4619:313::-;4732:4;4770:2;4759:9;4755:18;4747:26;;4819:9;4813:4;4809:20;4805:1;4794:9;4790:17;4783:47;4847:78;4920:4;4911:6;4847:78;:::i;:::-;4839:86;;4619:313;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:307;7419:4;7509:18;7501:6;7498:30;7495:56;;;7531:18;;:::i;:::-;7495:56;7569:29;7591:6;7569:29;:::i;:::-;7561:37;;7653:4;7647;7643:15;7635:23;;7358:307;;;:::o;7671:154::-;7755:6;7750:3;7745;7732:30;7817:1;7808:6;7803:3;7799:16;7792:27;7671:154;;;:::o;7831:410::-;7908:5;7933:65;7949:48;7990:6;7949:48;:::i;:::-;7933:65;:::i;:::-;7924:74;;8021:6;8014:5;8007:21;8059:4;8052:5;8048:16;8097:3;8088:6;8083:3;8079:16;8076:25;8073:112;;;8104:79;;:::i;:::-;8073:112;8194:41;8228:6;8223:3;8218;8194:41;:::i;:::-;7914:327;7831:410;;;;;:::o;8260:338::-;8315:5;8364:3;8357:4;8349:6;8345:17;8341:27;8331:122;;8372:79;;:::i;:::-;8331:122;8489:6;8476:20;8514:78;8588:3;8580:6;8573:4;8565:6;8561:17;8514:78;:::i;:::-;8505:87;;8321:277;8260:338;;;;:::o;8604:1509::-;8758:6;8766;8774;8782;8790;8839:3;8827:9;8818:7;8814:23;8810:33;8807:120;;;8846:79;;:::i;:::-;8807:120;8966:1;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8937:117;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;9249:2;9238:9;9234:18;9221:32;9280:18;9272:6;9269:30;9266:117;;;9302:79;;:::i;:::-;9266:117;9407:78;9477:7;9468:6;9457:9;9453:22;9407:78;:::i;:::-;9397:88;;9192:303;9562:2;9551:9;9547:18;9534:32;9593:18;9585:6;9582:30;9579:117;;;9615:79;;:::i;:::-;9579:117;9720:78;9790:7;9781:6;9770:9;9766:22;9720:78;:::i;:::-;9710:88;;9505:303;9875:3;9864:9;9860:19;9847:33;9907:18;9899:6;9896:30;9893:117;;;9929:79;;:::i;:::-;9893:117;10034:62;10088:7;10079:6;10068:9;10064:22;10034:62;:::i;:::-;10024:72;;9818:288;8604:1509;;;;;;;;:::o;10119:311::-;10196:4;10286:18;10278:6;10275:30;10272:56;;;10308:18;;:::i;:::-;10272:56;10358:4;10350:6;10346:17;10338:25;;10418:4;10412;10408:15;10400:23;;10119:311;;;:::o;10453:710::-;10549:5;10574:81;10590:64;10647:6;10590:64;:::i;:::-;10574:81;:::i;:::-;10565:90;;10675:5;10704:6;10697:5;10690:21;10738:4;10731:5;10727:16;10720:23;;10791:4;10783:6;10779:17;10771:6;10767:30;10820:3;10812:6;10809:15;10806:122;;;10839:79;;:::i;:::-;10806:122;10954:6;10937:220;10971:6;10966:3;10963:15;10937:220;;;11046:3;11075:37;11108:3;11096:10;11075:37;:::i;:::-;11070:3;11063:50;11142:4;11137:3;11133:14;11126:21;;11013:144;10997:4;10992:3;10988:14;10981:21;;10937:220;;;10941:21;10555:608;;10453:710;;;;;:::o;11186:370::-;11257:5;11306:3;11299:4;11291:6;11287:17;11283:27;11273:122;;11314:79;;:::i;:::-;11273:122;11431:6;11418:20;11456:94;11546:3;11538:6;11531:4;11523:6;11519:17;11456:94;:::i;:::-;11447:103;;11263:293;11186:370;;;;:::o;11562:894::-;11680:6;11688;11737:2;11725:9;11716:7;11712:23;11708:32;11705:119;;;11743:79;;:::i;:::-;11705:119;11891:1;11880:9;11876:17;11863:31;11921:18;11913:6;11910:30;11907:117;;;11943:79;;:::i;:::-;11907:117;12048:78;12118:7;12109:6;12098:9;12094:22;12048:78;:::i;:::-;12038:88;;11834:302;12203:2;12192:9;12188:18;12175:32;12234:18;12226:6;12223:30;12220:117;;;12256:79;;:::i;:::-;12220:117;12361:78;12431:7;12422:6;12411:9;12407:22;12361:78;:::i;:::-;12351:88;;12146:303;11562:894;;;;;:::o;12462:114::-;12529:6;12563:5;12557:12;12547:22;;12462:114;;;:::o;12582:184::-;12681:11;12715:6;12710:3;12703:19;12755:4;12750:3;12746:14;12731:29;;12582:184;;;;:::o;12772:132::-;12839:4;12862:3;12854:11;;12892:4;12887:3;12883:14;12875:22;;12772:132;;;:::o;12910:108::-;12987:24;13005:5;12987:24;:::i;:::-;12982:3;12975:37;12910:108;;:::o;13024:179::-;13093:10;13114:46;13156:3;13148:6;13114:46;:::i;:::-;13192:4;13187:3;13183:14;13169:28;;13024:179;;;;:::o;13209:113::-;13279:4;13311;13306:3;13302:14;13294:22;;13209:113;;;:::o;13358:732::-;13477:3;13506:54;13554:5;13506:54;:::i;:::-;13576:86;13655:6;13650:3;13576:86;:::i;:::-;13569:93;;13686:56;13736:5;13686:56;:::i;:::-;13765:7;13796:1;13781:284;13806:6;13803:1;13800:13;13781:284;;;13882:6;13876:13;13909:63;13968:3;13953:13;13909:63;:::i;:::-;13902:70;;13995:60;14048:6;13995:60;:::i;:::-;13985:70;;13841:224;13828:1;13825;13821:9;13816:14;;13781:284;;;13785:14;14081:3;14074:10;;13482:608;;;13358:732;;;;:::o;14096:373::-;14239:4;14277:2;14266:9;14262:18;14254:26;;14326:9;14320:4;14316:20;14312:1;14301:9;14297:17;14290:47;14354:108;14457:4;14448:6;14354:108;:::i;:::-;14346:116;;14096:373;;;;:::o;14475:116::-;14545:21;14560:5;14545:21;:::i;:::-;14538:5;14535:32;14525:60;;14581:1;14578;14571:12;14525:60;14475:116;:::o;14597:133::-;14640:5;14678:6;14665:20;14656:29;;14694:30;14718:5;14694:30;:::i;:::-;14597:133;;;;:::o;14736:468::-;14801:6;14809;14858:2;14846:9;14837:7;14833:23;14829:32;14826:119;;;14864:79;;:::i;:::-;14826:119;14984:1;15009:53;15054:7;15045:6;15034:9;15030:22;15009:53;:::i;:::-;14999:63;;14955:117;15111:2;15137:50;15179:7;15170:6;15159:9;15155:22;15137:50;:::i;:::-;15127:60;;15082:115;14736:468;;;;;:::o;15210:474::-;15278:6;15286;15335:2;15323:9;15314:7;15310:23;15306:32;15303:119;;;15341:79;;:::i;:::-;15303:119;15461:1;15486:53;15531:7;15522:6;15511:9;15507:22;15486:53;:::i;:::-;15476:63;;15432:117;15588:2;15614:53;15659:7;15650:6;15639:9;15635:22;15614:53;:::i;:::-;15604:63;;15559:118;15210:474;;;;;:::o;15690:1089::-;15794:6;15802;15810;15818;15826;15875:3;15863:9;15854:7;15850:23;15846:33;15843:120;;;15882:79;;:::i;:::-;15843:120;16002:1;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15973:117;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16257:2;16283:53;16328:7;16319:6;16308:9;16304:22;16283:53;:::i;:::-;16273:63;;16228:118;16385:2;16411:53;16456:7;16447:6;16436:9;16432:22;16411:53;:::i;:::-;16401:63;;16356:118;16541:3;16530:9;16526:19;16513:33;16573:18;16565:6;16562:30;16559:117;;;16595:79;;:::i;:::-;16559:117;16700:62;16754:7;16745:6;16734:9;16730:22;16700:62;:::i;:::-;16690:72;;16484:288;15690:1089;;;;;;;;:::o;16785:230::-;16925:34;16921:1;16913:6;16909:14;16902:58;16994:13;16989:2;16981:6;16977:15;16970:38;16785:230;:::o;17021:366::-;17163:3;17184:67;17248:2;17243:3;17184:67;:::i;:::-;17177:74;;17260:93;17349:3;17260:93;:::i;:::-;17378:2;17373:3;17369:12;17362:19;;17021:366;;;:::o;17393:419::-;17559:4;17597:2;17586:9;17582:18;17574:26;;17646:9;17640:4;17636:20;17632:1;17621:9;17617:17;17610:47;17674:131;17800:4;17674:131;:::i;:::-;17666:139;;17393:419;;;:::o;17818:180::-;17866:77;17863:1;17856:88;17963:4;17960:1;17953:15;17987:4;17984:1;17977:15;18004:320;18048:6;18085:1;18079:4;18075:12;18065:22;;18132:1;18126:4;18122:12;18153:18;18143:81;;18209:4;18201:6;18197:17;18187:27;;18143:81;18271:2;18263:6;18260:14;18240:18;18237:38;18234:84;;18290:18;;:::i;:::-;18234:84;18055:269;18004:320;;;:::o;18330:237::-;18470:34;18466:1;18458:6;18454:14;18447:58;18539:20;18534:2;18526:6;18522:15;18515:45;18330:237;:::o;18573:366::-;18715:3;18736:67;18800:2;18795:3;18736:67;:::i;:::-;18729:74;;18812:93;18901:3;18812:93;:::i;:::-;18930:2;18925:3;18921:12;18914:19;;18573:366;;;:::o;18945:419::-;19111:4;19149:2;19138:9;19134:18;19126:26;;19198:9;19192:4;19188:20;19184:1;19173:9;19169:17;19162:47;19226:131;19352:4;19226:131;:::i;:::-;19218:139;;18945:419;;;:::o;19370:228::-;19510:34;19506:1;19498:6;19494:14;19487:58;19579:11;19574:2;19566:6;19562:15;19555:36;19370:228;:::o;19604:366::-;19746:3;19767:67;19831:2;19826:3;19767:67;:::i;:::-;19760:74;;19843:93;19932:3;19843:93;:::i;:::-;19961:2;19956:3;19952:12;19945:19;;19604:366;;;:::o;19976:419::-;20142:4;20180:2;20169:9;20165:18;20157:26;;20229:9;20223:4;20219:20;20215:1;20204:9;20200:17;20193:47;20257:131;20383:4;20257:131;:::i;:::-;20249:139;;19976:419;;;:::o;20401:180::-;20449:77;20446:1;20439:88;20546:4;20543:1;20536:15;20570:4;20567:1;20560:15;20587:180;20635:77;20632:1;20625:88;20732:4;20729:1;20722:15;20756:4;20753:1;20746:15;20773:233;20812:3;20835:24;20853:5;20835:24;:::i;:::-;20826:33;;20881:66;20874:5;20871:77;20868:103;;20951:18;;:::i;:::-;20868:103;20998:1;20991:5;20987:13;20980:20;;20773:233;;;:::o;21012:228::-;21152:34;21148:1;21140:6;21136:14;21129:58;21221:11;21216:2;21208:6;21204:15;21197:36;21012:228;:::o;21246:366::-;21388:3;21409:67;21473:2;21468:3;21409:67;:::i;:::-;21402:74;;21485:93;21574:3;21485:93;:::i;:::-;21603:2;21598:3;21594:12;21587:19;;21246:366;;;:::o;21618:419::-;21784:4;21822:2;21811:9;21807:18;21799:26;;21871:9;21865:4;21861:20;21857:1;21846:9;21842:17;21835:47;21899:131;22025:4;21899:131;:::i;:::-;21891:139;;21618:419;;;:::o;22043:227::-;22183:34;22179:1;22171:6;22167:14;22160:58;22252:10;22247:2;22239:6;22235:15;22228:35;22043:227;:::o;22276:366::-;22418:3;22439:67;22503:2;22498:3;22439:67;:::i;:::-;22432:74;;22515:93;22604:3;22515:93;:::i;:::-;22633:2;22628:3;22624:12;22617:19;;22276:366;;;:::o;22648:419::-;22814:4;22852:2;22841:9;22837:18;22829:26;;22901:9;22895:4;22891:20;22887:1;22876:9;22872:17;22865:47;22929:131;23055:4;22929:131;:::i;:::-;22921:139;;22648:419;;;:::o;23073:224::-;23213:34;23209:1;23201:6;23197:14;23190:58;23282:7;23277:2;23269:6;23265:15;23258:32;23073:224;:::o;23303:366::-;23445:3;23466:67;23530:2;23525:3;23466:67;:::i;:::-;23459:74;;23542:93;23631:3;23542:93;:::i;:::-;23660:2;23655:3;23651:12;23644:19;;23303:366;;;:::o;23675:419::-;23841:4;23879:2;23868:9;23864:18;23856:26;;23928:9;23922:4;23918:20;23914:1;23903:9;23899:17;23892:47;23956:131;24082:4;23956:131;:::i;:::-;23948:139;;23675:419;;;:::o;24100:229::-;24240:34;24236:1;24228:6;24224:14;24217:58;24309:12;24304:2;24296:6;24292:15;24285:37;24100:229;:::o;24335:366::-;24477:3;24498:67;24562:2;24557:3;24498:67;:::i;:::-;24491:74;;24574:93;24663:3;24574:93;:::i;:::-;24692:2;24687:3;24683:12;24676:19;;24335:366;;;:::o;24707:419::-;24873:4;24911:2;24900:9;24896:18;24888:26;;24960:9;24954:4;24950:20;24946:1;24935:9;24931:17;24924:47;24988:131;25114:4;24988:131;:::i;:::-;24980:139;;24707:419;;;:::o;25132:305::-;25172:3;25191:20;25209:1;25191:20;:::i;:::-;25186:25;;25225:20;25243:1;25225:20;:::i;:::-;25220:25;;25379:1;25311:66;25307:74;25304:1;25301:81;25298:107;;;25385:18;;:::i;:::-;25298:107;25429:1;25426;25422:9;25415:16;;25132:305;;;;:::o;25443:634::-;25664:4;25702:2;25691:9;25687:18;25679:26;;25751:9;25745:4;25741:20;25737:1;25726:9;25722:17;25715:47;25779:108;25882:4;25873:6;25779:108;:::i;:::-;25771:116;;25934:9;25928:4;25924:20;25919:2;25908:9;25904:18;25897:48;25962:108;26065:4;26056:6;25962:108;:::i;:::-;25954:116;;25443:634;;;;;:::o;26083:228::-;26223:34;26219:1;26211:6;26207:14;26200:58;26292:11;26287:2;26279:6;26275:15;26268:36;26083:228;:::o;26317:366::-;26459:3;26480:67;26544:2;26539:3;26480:67;:::i;:::-;26473:74;;26556:93;26645:3;26556:93;:::i;:::-;26674:2;26669:3;26665:12;26658:19;;26317:366;;;:::o;26689:419::-;26855:4;26893:2;26882:9;26878:18;26870:26;;26942:9;26936:4;26932:20;26928:1;26917:9;26913:17;26906:47;26970:131;27096:4;26970:131;:::i;:::-;26962:139;;26689:419;;;:::o;27114:332::-;27235:4;27273:2;27262:9;27258:18;27250:26;;27286:71;27354:1;27343:9;27339:17;27330:6;27286:71;:::i;:::-;27367:72;27435:2;27424:9;27420:18;27411:6;27367:72;:::i;:::-;27114:332;;;;;:::o;27452:118::-;27539:24;27557:5;27539:24;:::i;:::-;27534:3;27527:37;27452:118;;:::o;27576:98::-;27627:6;27661:5;27655:12;27645:22;;27576:98;;;:::o;27680:168::-;27763:11;27797:6;27792:3;27785:19;27837:4;27832:3;27828:14;27813:29;;27680:168;;;;:::o;27854:360::-;27940:3;27968:38;28000:5;27968:38;:::i;:::-;28022:70;28085:6;28080:3;28022:70;:::i;:::-;28015:77;;28101:52;28146:6;28141:3;28134:4;28127:5;28123:16;28101:52;:::i;:::-;28178:29;28200:6;28178:29;:::i;:::-;28173:3;28169:39;28162:46;;27944:270;27854:360;;;;:::o;28220:1053::-;28543:4;28581:3;28570:9;28566:19;28558:27;;28595:71;28663:1;28652:9;28648:17;28639:6;28595:71;:::i;:::-;28676:72;28744:2;28733:9;28729:18;28720:6;28676:72;:::i;:::-;28795:9;28789:4;28785:20;28780:2;28769:9;28765:18;28758:48;28823:108;28926:4;28917:6;28823:108;:::i;:::-;28815:116;;28978:9;28972:4;28968:20;28963:2;28952:9;28948:18;28941:48;29006:108;29109:4;29100:6;29006:108;:::i;:::-;28998:116;;29162:9;29156:4;29152:20;29146:3;29135:9;29131:19;29124:49;29190:76;29261:4;29252:6;29190:76;:::i;:::-;29182:84;;28220:1053;;;;;;;;:::o;29279:141::-;29335:5;29366:6;29360:13;29351:22;;29382:32;29408:5;29382:32;:::i;:::-;29279:141;;;;:::o;29426:349::-;29495:6;29544:2;29532:9;29523:7;29519:23;29515:32;29512:119;;;29550:79;;:::i;:::-;29512:119;29670:1;29695:63;29750:7;29741:6;29730:9;29726:22;29695:63;:::i;:::-;29685:73;;29641:127;29426:349;;;;:::o;29781:106::-;29825:8;29874:5;29869:3;29865:15;29844:36;;29781:106;;;:::o;29893:183::-;29928:3;29966:1;29948:16;29945:23;29942:128;;;30004:1;30001;29998;29983:23;30026:34;30057:1;30051:8;30026:34;:::i;:::-;30019:41;;29942:128;29893:183;:::o;30082:711::-;30121:3;30159:4;30141:16;30138:26;30167:5;30135:39;30196:20;;:::i;:::-;30271:1;30253:16;30249:24;30246:1;30240:4;30225:49;30304:4;30298:11;30403:16;30396:4;30388:6;30384:17;30381:39;30348:18;30340:6;30337:30;30321:113;30318:146;;;30449:5;;;;30318:146;30495:6;30489:4;30485:17;30531:3;30525:10;30558:18;30550:6;30547:30;30544:43;;;30580:5;;;;;;30544:43;30628:6;30621:4;30616:3;30612:14;30608:27;30687:1;30669:16;30665:24;30659:4;30655:35;30650:3;30647:44;30644:57;;;30694:5;;;;;;;30644:57;30711;30759:6;30753:4;30749:17;30741:6;30737:30;30731:4;30711:57;:::i;:::-;30784:3;30777:10;;30125:668;;;;;30082:711;;:::o;30799:239::-;30939:34;30935:1;30927:6;30923:14;30916:58;31008:22;31003:2;30995:6;30991:15;30984:47;30799:239;:::o;31044:366::-;31186:3;31207:67;31271:2;31266:3;31207:67;:::i;:::-;31200:74;;31283:93;31372:3;31283:93;:::i;:::-;31401:2;31396:3;31392:12;31385:19;;31044:366;;;:::o;31416:419::-;31582:4;31620:2;31609:9;31605:18;31597:26;;31669:9;31663:4;31659:20;31655:1;31644:9;31640:17;31633:47;31697:131;31823:4;31697:131;:::i;:::-;31689:139;;31416:419;;;:::o;31841:227::-;31981:34;31977:1;31969:6;31965:14;31958:58;32050:10;32045:2;32037:6;32033:15;32026:35;31841:227;:::o;32074:366::-;32216:3;32237:67;32301:2;32296:3;32237:67;:::i;:::-;32230:74;;32313:93;32402:3;32313:93;:::i;:::-;32431:2;32426:3;32422:12;32415:19;;32074:366;;;:::o;32446:419::-;32612:4;32650:2;32639:9;32635:18;32627:26;;32699:9;32693:4;32689:20;32685:1;32674:9;32670:17;32663:47;32727:131;32853:4;32727:131;:::i;:::-;32719:139;;32446:419;;;:::o;32871:751::-;33094:4;33132:3;33121:9;33117:19;33109:27;;33146:71;33214:1;33203:9;33199:17;33190:6;33146:71;:::i;:::-;33227:72;33295:2;33284:9;33280:18;33271:6;33227:72;:::i;:::-;33309;33377:2;33366:9;33362:18;33353:6;33309:72;:::i;:::-;33391;33459:2;33448:9;33444:18;33435:6;33391:72;:::i;:::-;33511:9;33505:4;33501:20;33495:3;33484:9;33480:19;33473:49;33539:76;33610:4;33601:6;33539:76;:::i;:::-;33531:84;;32871:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1930400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8244,
									"end": 8250,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2805,
									"end": 2811,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2854,
									"end": 2856,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2842,
									"end": 2851,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2833,
									"end": 2840,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2829,
									"end": 2852,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2860,
									"end": 2939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3001,
									"end": 3002,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2990,
									"end": 2999,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2986,
									"end": 3003,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2980,
									"end": 3004,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3031,
									"end": 3049,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3020,
									"end": 3050,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3053,
									"end": 3132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3224,
									"end": 3231,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3215,
									"end": 3221,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3204,
									"end": 3213,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3200,
									"end": 3222,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3158,
									"end": 3232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2951,
									"end": 3242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3354,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3255,
									"end": 3354,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3307,
									"end": 3313,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3341,
									"end": 3346,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3335,
									"end": 3347,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3347,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3347,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3354,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3354,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3354,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3360,
									"end": 3540,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 3360,
									"end": 3540,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3408,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3405,
									"end": 3406,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3398,
									"end": 3486,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3505,
									"end": 3509,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3502,
									"end": 3503,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3495,
									"end": 3510,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3529,
									"end": 3533,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3526,
									"end": 3527,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3534,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3866,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3546,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3590,
									"end": 3596,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3627,
									"end": 3628,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3621,
									"end": 3625,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3617,
									"end": 3629,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3629,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3629,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3674,
									"end": 3675,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3668,
									"end": 3672,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3664,
									"end": 3676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3695,
									"end": 3713,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3685,
									"end": 3766,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3685,
									"end": 3766,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3751,
									"end": 3755,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 3743,
									"end": 3749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3739,
									"end": 3756,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3729,
									"end": 3756,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3729,
									"end": 3756,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3685,
									"end": 3766,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3685,
									"end": 3766,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3813,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3805,
									"end": 3811,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 3816,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3782,
									"end": 3800,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3779,
									"end": 3817,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3776,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3776,
									"end": 3860,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3832,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3832,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 3832,
									"end": 3850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3832,
									"end": 3850,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3832,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3776,
									"end": 3860,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3776,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3597,
									"end": 3866,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3866,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3866,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3866,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3872,
									"end": 4013,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3872,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3921,
									"end": 3925,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3944,
									"end": 3947,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3936,
									"end": 3947,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3936,
									"end": 3947,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3967,
									"end": 3970,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3964,
									"end": 3965,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3957,
									"end": 3971,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4001,
									"end": 4005,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3998,
									"end": 3999,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3988,
									"end": 4006,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 3980,
									"end": 4006,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3980,
									"end": 4006,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3872,
									"end": 4013,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3872,
									"end": 4013,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3872,
									"end": 4013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3872,
									"end": 4013,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4019,
									"end": 4112,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4019,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4103,
									"end": 4105,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4098,
									"end": 4100,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4091,
									"end": 4096,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4087,
									"end": 4101,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4083,
									"end": 4106,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4073,
									"end": 4106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4073,
									"end": 4106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4019,
									"end": 4112,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4019,
									"end": 4112,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4019,
									"end": 4112,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4019,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4162,
									"end": 4170,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4212,
									"end": 4217,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4206,
									"end": 4210,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4202,
									"end": 4218,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4181,
									"end": 4218,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4181,
									"end": 4218,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4306,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4350,
									"end": 4351,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4338,
									"end": 4348,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4334,
									"end": 4352,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4373,
									"end": 4470,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4403,
									"end": 4469,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4392,
									"end": 4401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4373,
									"end": 4470,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4373,
									"end": 4470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4373,
									"end": 4470,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4373,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4491,
									"end": 4530,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4521,
									"end": 4529,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4519,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4491,
									"end": 4530,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4491,
									"end": 4530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4491,
									"end": 4530,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4491,
									"end": 4530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4479,
									"end": 4530,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 4479,
									"end": 4530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4563,
									"end": 4567,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4559,
									"end": 4568,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4552,
									"end": 4557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4548,
									"end": 4569,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4539,
									"end": 4569,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4539,
									"end": 4569,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4616,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4610,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4598,
									"end": 4617,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4591,
									"end": 4596,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4618,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4578,
									"end": 4618,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4578,
									"end": 4618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4307,
									"end": 4624,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4307,
									"end": 4624,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4231,
									"end": 4624,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4630,
									"end": 4707,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4630,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4667,
									"end": 4674,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4696,
									"end": 4701,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4685,
									"end": 4701,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4685,
									"end": 4701,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4630,
									"end": 4707,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4630,
									"end": 4707,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4630,
									"end": 4707,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4630,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4773,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4713,
									"end": 4773,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4762,
									"end": 4767,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4755,
									"end": 4767,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4755,
									"end": 4767,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4773,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4773,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4773,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4773,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4779,
									"end": 4921,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4779,
									"end": 4921,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4829,
									"end": 4838,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4862,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4880,
									"end": 4914,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4889,
									"end": 4913,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4907,
									"end": 4912,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4889,
									"end": 4913,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4889,
									"end": 4913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4889,
									"end": 4913,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4889,
									"end": 4913,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4914,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4880,
									"end": 4914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4914,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4880,
									"end": 4914,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4862,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4862,
									"end": 4915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4862,
									"end": 4915,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4862,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4849,
									"end": 4915,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4849,
									"end": 4915,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4779,
									"end": 4921,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4779,
									"end": 4921,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4779,
									"end": 4921,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4779,
									"end": 4921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4927,
									"end": 5002,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 4927,
									"end": 5002,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4973,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4991,
									"end": 4996,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4984,
									"end": 4996,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4984,
									"end": 4996,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4927,
									"end": 5002,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4927,
									"end": 5002,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4927,
									"end": 5002,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4927,
									"end": 5002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5008,
									"end": 5277,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5008,
									"end": 5277,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5118,
									"end": 5157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5149,
									"end": 5156,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5118,
									"end": 5157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5118,
									"end": 5157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5118,
									"end": 5157,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5118,
									"end": 5157,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5228,
									"end": 5269,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5252,
									"end": 5268,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5228,
									"end": 5269,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5228,
									"end": 5269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5228,
									"end": 5269,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5228,
									"end": 5269,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5220,
									"end": 5226,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5213,
									"end": 5217,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5207,
									"end": 5218,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 5179,
									"end": 5270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5270,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5179,
									"end": 5270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5173,
									"end": 5177,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5166,
									"end": 5271,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5008,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5008,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5008,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5008,
									"end": 5277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5283,
									"end": 5356,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5283,
									"end": 5356,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5328,
									"end": 5331,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5283,
									"end": 5356,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5283,
									"end": 5356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5551,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5362,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5439,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5439,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5439,
									"end": 5471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5439,
									"end": 5471,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5439,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5480,
									"end": 5545,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5538,
									"end": 5544,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 5536,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5524,
									"end": 5528,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5480,
									"end": 5545,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5480,
									"end": 5545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5480,
									"end": 5545,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5480,
									"end": 5545,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5415,
									"end": 5551,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5551,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5551,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5551,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5557,
									"end": 5743,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5557,
									"end": 5743,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5634,
									"end": 5637,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5627,
									"end": 5632,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5624,
									"end": 5638,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5688,
									"end": 5727,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5725,
									"end": 5726,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5718,
									"end": 5723,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5688,
									"end": 5727,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5688,
									"end": 5727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5688,
									"end": 5727,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5688,
									"end": 5727,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5662,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5654,
									"end": 5659,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5650,
									"end": 5663,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5641,
									"end": 5663,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5641,
									"end": 5663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5617,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5557,
									"end": 5743,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5557,
									"end": 5743,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5557,
									"end": 5743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 6292,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5749,
									"end": 6292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5850,
									"end": 5852,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5845,
									"end": 5848,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5842,
									"end": 5853,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5839,
									"end": 6285,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5839,
									"end": 6285,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5839,
									"end": 6285,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5884,
									"end": 5922,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 5916,
									"end": 5921,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5884,
									"end": 5922,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 5884,
									"end": 5922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5884,
									"end": 5922,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 5884,
									"end": 5922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5968,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5986,
									"end": 5996,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5968,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5968,
									"end": 5997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5968,
									"end": 5997,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5968,
									"end": 5997,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5958,
									"end": 5966,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5954,
									"end": 5998,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6151,
									"end": 6153,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6139,
									"end": 6149,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6136,
									"end": 6154,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6133,
									"end": 6182,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6133,
									"end": 6182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6133,
									"end": 6182,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6172,
									"end": 6180,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6157,
									"end": 6180,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6157,
									"end": 6180,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6133,
									"end": 6182,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6133,
									"end": 6182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6269,
									"end": 6272,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 6251,
									"end": 6273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6241,
									"end": 6249,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6237,
									"end": 6274,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6235,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6195,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6275,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6195,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5854,
									"end": 6285,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5854,
									"end": 6285,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5839,
									"end": 6285,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5839,
									"end": 6285,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 6292,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 6292,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 6292,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 6292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6352,
									"end": 6360,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6402,
									"end": 6407,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6396,
									"end": 6400,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6392,
									"end": 6408,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6371,
									"end": 6408,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6371,
									"end": 6408,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6298,
									"end": 6415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6465,
									"end": 6471,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6498,
									"end": 6549,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6546,
									"end": 6547,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6542,
									"end": 6548,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6531,
									"end": 6532,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 6527,
									"end": 6540,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6498,
									"end": 6549,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6498,
									"end": 6549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6498,
									"end": 6549,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6498,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6494,
									"end": 6550,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6583,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6573,
									"end": 6577,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6569,
									"end": 6584,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6559,
									"end": 6584,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6559,
									"end": 6584,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6590,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6421,
									"end": 6590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6671,
									"end": 6675,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6817,
									"end": 6846,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6842,
									"end": 6845,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6836,
									"end": 6840,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6817,
									"end": 6846,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 6817,
									"end": 6846,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6817,
									"end": 6846,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6817,
									"end": 6846,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6809,
									"end": 6846,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6809,
									"end": 6846,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6879,
									"end": 6882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 6877,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6872,
									"end": 6883,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6866,
									"end": 6870,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6863,
									"end": 6884,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 6855,
									"end": 6884,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6855,
									"end": 6884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6895,
									"end": 8290,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 6895,
									"end": 8290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7012,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7045,
									"end": 7048,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7012,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 7012,
									"end": 7049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7012,
									"end": 7049,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7012,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7114,
									"end": 7132,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7106,
									"end": 7112,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7100,
									"end": 7156,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7100,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7100,
									"end": 7156,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7154,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7136,
									"end": 7154,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 7136,
									"end": 7154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7154,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7136,
									"end": 7154,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7100,
									"end": 7156,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7100,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7180,
									"end": 7218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7212,
									"end": 7216,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7206,
									"end": 7217,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7180,
									"end": 7218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 7180,
									"end": 7218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7180,
									"end": 7218,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7180,
									"end": 7218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7265,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7325,
									"end": 7331,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7317,
									"end": 7323,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7311,
									"end": 7315,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7265,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7265,
									"end": 7332,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7265,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7359,
									"end": 7360,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7370,
									"end": 7387,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7370,
									"end": 7387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7415,
									"end": 7417,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7407,
									"end": 7413,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7404,
									"end": 7418,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7432,
									"end": 7433,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8089,
									"end": 8090,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8106,
									"end": 8112,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8180,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8180,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8103,
									"end": 8180,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8155,
									"end": 8164,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8150,
									"end": 8153,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8146,
									"end": 8165,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8140,
									"end": 8166,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8131,
									"end": 8166,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8131,
									"end": 8166,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8180,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8103,
									"end": 8180,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8206,
									"end": 8273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8266,
									"end": 8272,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8259,
									"end": 8264,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8206,
									"end": 8273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 8206,
									"end": 8273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8206,
									"end": 8273,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8206,
									"end": 8273,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8200,
									"end": 8204,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8193,
									"end": 8274,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8062,
									"end": 8284,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7397,
									"end": 8284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7397,
									"end": 8284,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7427,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7479,
									"end": 7483,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7475,
									"end": 7484,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7467,
									"end": 7473,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7463,
									"end": 7485,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7513,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7545,
									"end": 7549,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7513,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 7513,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7513,
									"end": 7550,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7513,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7600,
									"end": 7607,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7597,
									"end": 7598,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7594,
									"end": 7608,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7679,
									"end": 7688,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7674,
									"end": 7677,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7670,
									"end": 7689,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7664,
									"end": 7690,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7656,
									"end": 7662,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7649,
									"end": 7691,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7730,
									"end": 7731,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7722,
									"end": 7728,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 7732,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 7732,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 7732,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7777,
									"end": 7779,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7766,
									"end": 7775,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7762,
									"end": 7780,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7749,
									"end": 7780,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 7749,
									"end": 7780,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7623,
									"end": 7627,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7620,
									"end": 7621,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7616,
									"end": 7628,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7611,
									"end": 7628,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7611,
									"end": 7628,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7586,
									"end": 7794,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7822,
									"end": 7828,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7813,
									"end": 7820,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7810,
									"end": 7829,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7807,
									"end": 7986,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7807,
									"end": 7986,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7807,
									"end": 7986,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7889,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7875,
									"end": 7878,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7871,
									"end": 7890,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7865,
									"end": 7891,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7923,
									"end": 7971,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7965,
									"end": 7969,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7957,
									"end": 7963,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7953,
									"end": 7970,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7942,
									"end": 7951,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7923,
									"end": 7971,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 7923,
									"end": 7971,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7923,
									"end": 7971,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7923,
									"end": 7971,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7915,
									"end": 7921,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7908,
									"end": 7972,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7830,
									"end": 7986,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7807,
									"end": 7986,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7807,
									"end": 7986,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8032,
									"end": 8033,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8028,
									"end": 8029,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8020,
									"end": 8026,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8016,
									"end": 8030,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8012,
									"end": 8034,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8006,
									"end": 8010,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 7999,
									"end": 8035,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7434,
									"end": 8045,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7434,
									"end": 8045,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7434,
									"end": 8045,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7397,
									"end": 8284,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7397,
									"end": 8284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7397,
									"end": 8284,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6987,
									"end": 8290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6987,
									"end": 8290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6987,
									"end": 8290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6895,
									"end": 8290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6895,
									"end": 8290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6895,
									"end": 8290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020dfd4e94848a8ef46fa0e4728681c5b33be82ee7fdd5a636cb25520572c370c64736f6c634300080f0033",
									".code": [
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4293,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4293,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4289,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4332,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4309,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4264,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2753,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3259,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3807,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3823,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3778,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6431,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6522,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6662,
											"end": 6670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6641,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6897,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7027,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7097,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7216,
											"end": 7224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7196,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 12906,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13006,
											"end": 13011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13013,
											"end": 13021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13070,
											"end": 13078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13080,
											"end": 13088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13048,
											"end": 13089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5113,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5209,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5348,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5470,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 5708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5720,
											"end": 5722,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5685,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5742,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16359,
											"end": 16361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16359,
											"end": 16374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16411,
											"end": 16413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16826,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 16636,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16474,
											"end": 16719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17044,
											"end": 17060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 15603,
											"end": 15618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15974,
											"end": 15988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16028,
											"end": 16090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15838,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15711,
											"end": 15921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3996,
											"end": 4007,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4119,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 4135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4222,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4237,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4365,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4420,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4531,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4500,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4577,
											"end": 4606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 4829,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 4830,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4847,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5186,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5211,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 5330,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5318,
											"end": 5358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5448,
											"end": 5458,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5406,
											"end": 5468,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5471,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5595,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5624,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5534,
											"end": 5663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6085,
											"end": 6097,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6263,
											"end": 6327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6247,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6384,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6400,
											"end": 6416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6452,
											"end": 6469,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6512,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6748,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6786,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6686,
											"end": 6830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6614,
											"end": 6635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6987,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7091,
											"end": 7111,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 7129,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6936,
											"end": 7229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7346,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7531,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7569,
											"end": 7598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7358,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 7913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7949,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 7933,
											"end": 7998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8048,
											"end": 8064,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8079,
											"end": 8095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 8104,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 8194,
											"end": 8235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7914,
											"end": 8241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 8241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8341,
											"end": 8368,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 8372,
											"end": 8451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8561,
											"end": 8578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 8514,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8843,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 8846,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 8991,
											"end": 9044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 9119,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9253,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 9302,
											"end": 9381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 9407,
											"end": 9485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9534,
											"end": 9566,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9582,
											"end": 9612,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 9615,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9790,
											"end": 9797,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9766,
											"end": 9788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 9720,
											"end": 9798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9505,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9860,
											"end": 9879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9926,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 9929,
											"end": 10008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 10034,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 10106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 10113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 10308,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 10590,
											"end": 10654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 10574,
											"end": 10655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10675,
											"end": 10680,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10809,
											"end": 10824,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 10839,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10963,
											"end": 10978,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 11106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 11075,
											"end": 11112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11063,
											"end": 11113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11133,
											"end": 11147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11013,
											"end": 11157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10941,
											"end": 10962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 11163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11287,
											"end": 11304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11283,
											"end": 11310,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 11314,
											"end": 11393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11531,
											"end": 11535,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11519,
											"end": 11536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 11456,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11186,
											"end": 11556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11712,
											"end": 11735,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 11743,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11863,
											"end": 11894,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11943,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 12118,
											"end": 12125,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 12048,
											"end": 12126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11834,
											"end": 12136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12203,
											"end": 12205,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12175,
											"end": 12207,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12223,
											"end": 12253,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 12256,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 12431,
											"end": 12438,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12411,
											"end": 12420,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 12361,
											"end": 12439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12146,
											"end": 12449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 12456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12557,
											"end": 12569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12681,
											"end": 12692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12721,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12892,
											"end": 12896,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 12987,
											"end": 13011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 13018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 13114,
											"end": 13160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13024,
											"end": 13203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 13316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13209,
											"end": 13322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 13506,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13650,
											"end": 13653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 13576,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 13686,
											"end": 13742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 13909,
											"end": 13972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 13995,
											"end": 14055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13841,
											"end": 14065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13785,
											"end": 13799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13358,
											"end": 14090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14239,
											"end": 14243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14326,
											"end": 14335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14336,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14297,
											"end": 14314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14290,
											"end": 14337,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14354,
											"end": 14462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14096,
											"end": 14469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 14545,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14567,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14475,
											"end": 14591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14665,
											"end": 14685,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 14694,
											"end": 14724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14837,
											"end": 14844,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14833,
											"end": 14856,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 14864,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 15009,
											"end": 15062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14955,
											"end": 15072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 15137,
											"end": 15187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15082,
											"end": 15197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14736,
											"end": 15204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15310,
											"end": 15333,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15306,
											"end": 15338,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 15341,
											"end": 15420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15531,
											"end": 15538,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15507,
											"end": 15529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 15486,
											"end": 15539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15432,
											"end": 15549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 15659,
											"end": 15666,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15635,
											"end": 15657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 15614,
											"end": 15667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15210,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15826,
											"end": 15832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15854,
											"end": 15861,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15846,
											"end": 15879,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 15882,
											"end": 15961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 16027,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15973,
											"end": 16090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 16155,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16257,
											"end": 16259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16328,
											"end": 16335,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16317,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16304,
											"end": 16326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 16283,
											"end": 16336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16228,
											"end": 16346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16432,
											"end": 16454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 16411,
											"end": 16464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16356,
											"end": 16474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16526,
											"end": 16545,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16513,
											"end": 16546,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16592,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 16595,
											"end": 16674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 16700,
											"end": 16762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 16779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16925,
											"end": 16959,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16909,
											"end": 16923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16902,
											"end": 16960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16994,
											"end": 17007,
											"name": "PUSH",
											"source": 11,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16785,
											"end": 17015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17163,
											"end": 17166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 17248,
											"end": 17250,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 17243,
											"end": 17246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 17184,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 17260,
											"end": 17353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17378,
											"end": 17380,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17373,
											"end": 17376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17369,
											"end": 17381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17021,
											"end": 17387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17586,
											"end": 17595,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17636,
											"end": 17656,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17630,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17617,
											"end": 17634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17610,
											"end": 17657,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 17800,
											"end": 17804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 17674,
											"end": 17805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17393,
											"end": 17812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17866,
											"end": 17943,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17863,
											"end": 17864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17944,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 17960,
											"end": 17961,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17984,
											"end": 17985,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17992,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18048,
											"end": 18054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18086,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 18079,
											"end": 18083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18075,
											"end": 18087,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18132,
											"end": 18133,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 18126,
											"end": 18130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18122,
											"end": 18134,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18153,
											"end": 18171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 18201,
											"end": 18207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18197,
											"end": 18214,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18271,
											"end": 18273,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18260,
											"end": 18274,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 18240,
											"end": 18258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 18290,
											"end": 18308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18055,
											"end": 18324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18004,
											"end": 18324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18470,
											"end": 18504,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 18466,
											"end": 18467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18464,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18454,
											"end": 18468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18447,
											"end": 18505,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18539,
											"end": 18559,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 18534,
											"end": 18536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18526,
											"end": 18532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18522,
											"end": 18537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18515,
											"end": 18560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18330,
											"end": 18567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18715,
											"end": 18718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 18800,
											"end": 18802,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 18795,
											"end": 18798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 18736,
											"end": 18803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 18812,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18930,
											"end": 18932,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18925,
											"end": 18928,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18921,
											"end": 18933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19151,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19138,
											"end": 19147,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19198,
											"end": 19207,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19196,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19188,
											"end": 19208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19184,
											"end": 19185,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19182,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19169,
											"end": 19186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19162,
											"end": 19209,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 19352,
											"end": 19356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 19226,
											"end": 19357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 19364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19510,
											"end": 19544,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19506,
											"end": 19507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19498,
											"end": 19504,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19494,
											"end": 19508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19487,
											"end": 19545,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19579,
											"end": 19590,
											"name": "PUSH",
											"source": 11,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19574,
											"end": 19576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19572,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19562,
											"end": 19577,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19555,
											"end": 19591,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19370,
											"end": 19598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19746,
											"end": 19749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 19831,
											"end": 19833,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 19767,
											"end": 19834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 19932,
											"end": 19935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 19843,
											"end": 19936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19961,
											"end": 19963,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19956,
											"end": 19959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19952,
											"end": 19964,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19604,
											"end": 19970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20142,
											"end": 20146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20180,
											"end": 20182,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20178,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20165,
											"end": 20183,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20229,
											"end": 20238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20223,
											"end": 20227,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20219,
											"end": 20239,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20215,
											"end": 20216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20204,
											"end": 20213,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20200,
											"end": 20217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20193,
											"end": 20240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 20383,
											"end": 20387,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 20257,
											"end": 20388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19976,
											"end": 20395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20449,
											"end": 20526,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20446,
											"end": 20447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20439,
											"end": 20527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20550,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 20543,
											"end": 20544,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 20536,
											"end": 20551,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20570,
											"end": 20574,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 20567,
											"end": 20568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20560,
											"end": 20575,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20712,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20632,
											"end": 20633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20713,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 20729,
											"end": 20730,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 20722,
											"end": 20737,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20756,
											"end": 20760,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 20753,
											"end": 20754,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20761,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 20853,
											"end": 20858,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 20835,
											"end": 20859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20881,
											"end": 20947,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20874,
											"end": 20879,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20871,
											"end": 20948,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20951,
											"end": 20969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20987,
											"end": 21000,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 21006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21152,
											"end": 21186,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 21148,
											"end": 21149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21136,
											"end": 21150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21129,
											"end": 21187,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21221,
											"end": 21232,
											"name": "PUSH",
											"source": 11,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21216,
											"end": 21218,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21208,
											"end": 21214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21204,
											"end": 21219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21197,
											"end": 21233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21012,
											"end": 21240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21388,
											"end": 21391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 21473,
											"end": 21475,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 21468,
											"end": 21471,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 21409,
											"end": 21476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 21574,
											"end": 21577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 21485,
											"end": 21578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21603,
											"end": 21605,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21598,
											"end": 21601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21246,
											"end": 21612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21784,
											"end": 21788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21822,
											"end": 21824,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21811,
											"end": 21820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21807,
											"end": 21825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21871,
											"end": 21880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21865,
											"end": 21869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21861,
											"end": 21881,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21857,
											"end": 21858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21846,
											"end": 21855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21842,
											"end": 21859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21835,
											"end": 21882,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 22025,
											"end": 22029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 21899,
											"end": 22030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21618,
											"end": 22037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22183,
											"end": 22217,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 22179,
											"end": 22180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22171,
											"end": 22177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22167,
											"end": 22181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22160,
											"end": 22218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22252,
											"end": 22262,
											"name": "PUSH",
											"source": 11,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22247,
											"end": 22249,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22239,
											"end": 22245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22235,
											"end": 22250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22043,
											"end": 22270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22418,
											"end": 22421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 22503,
											"end": 22505,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 22498,
											"end": 22501,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 22439,
											"end": 22506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 22604,
											"end": 22607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 22515,
											"end": 22608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22633,
											"end": 22635,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22628,
											"end": 22631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22624,
											"end": 22636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22276,
											"end": 22642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22814,
											"end": 22818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22850,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22837,
											"end": 22855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22901,
											"end": 22910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22895,
											"end": 22899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22891,
											"end": 22911,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22887,
											"end": 22888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22876,
											"end": 22885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22872,
											"end": 22889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22865,
											"end": 22912,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 23055,
											"end": 23059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 22929,
											"end": 23060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 23067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23213,
											"end": 23247,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 23209,
											"end": 23210,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23201,
											"end": 23207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23197,
											"end": 23211,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23190,
											"end": 23248,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23282,
											"end": 23289,
											"name": "PUSH",
											"source": 11,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23277,
											"end": 23279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23269,
											"end": 23275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23265,
											"end": 23280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23258,
											"end": 23290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23073,
											"end": 23297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23445,
											"end": 23448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 23530,
											"end": 23532,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 23525,
											"end": 23528,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 23466,
											"end": 23533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 23631,
											"end": 23634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 23542,
											"end": 23635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23660,
											"end": 23662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23655,
											"end": 23658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23651,
											"end": 23663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23303,
											"end": 23669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23841,
											"end": 23845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23881,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23868,
											"end": 23877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23864,
											"end": 23882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23928,
											"end": 23937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23922,
											"end": 23926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23918,
											"end": 23938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23914,
											"end": 23915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23912,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23899,
											"end": 23916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23892,
											"end": 23939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 24082,
											"end": 24086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 23956,
											"end": 24087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 24094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24240,
											"end": 24274,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24236,
											"end": 24237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24228,
											"end": 24234,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24224,
											"end": 24238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24217,
											"end": 24275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24309,
											"end": 24321,
											"name": "PUSH",
											"source": 11,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 24304,
											"end": 24306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24296,
											"end": 24302,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24292,
											"end": 24307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24285,
											"end": 24322,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24100,
											"end": 24329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24477,
											"end": 24480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 24562,
											"end": 24564,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 24557,
											"end": 24560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 24498,
											"end": 24565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 24663,
											"end": 24666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 24574,
											"end": 24667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24692,
											"end": 24694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 24687,
											"end": 24690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24683,
											"end": 24695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24335,
											"end": 24701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24873,
											"end": 24877,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24911,
											"end": 24913,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24900,
											"end": 24909,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24896,
											"end": 24914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24960,
											"end": 24969,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 24958,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24950,
											"end": 24970,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 24946,
											"end": 24947,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24935,
											"end": 24944,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24931,
											"end": 24948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24924,
											"end": 24971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 25114,
											"end": 25118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 24988,
											"end": 25119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24707,
											"end": 25126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25172,
											"end": 25175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 25209,
											"end": 25210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 25191,
											"end": 25211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 25243,
											"end": 25244,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 25225,
											"end": 25245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25379,
											"end": 25380,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25311,
											"end": 25377,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25307,
											"end": 25381,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25304,
											"end": 25305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25301,
											"end": 25382,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 25385,
											"end": 25403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25429,
											"end": 25430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25426,
											"end": 25427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25422,
											"end": 25431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25132,
											"end": 25437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25664,
											"end": 25668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25702,
											"end": 25704,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 25691,
											"end": 25700,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25687,
											"end": 25705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25751,
											"end": 25760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25745,
											"end": 25749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25741,
											"end": 25761,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25737,
											"end": 25738,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25726,
											"end": 25735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25722,
											"end": 25739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25715,
											"end": 25762,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 25882,
											"end": 25886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25873,
											"end": 25879,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 25779,
											"end": 25887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25934,
											"end": 25943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25928,
											"end": 25932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25924,
											"end": 25944,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25919,
											"end": 25921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25908,
											"end": 25917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25904,
											"end": 25922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25897,
											"end": 25945,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 26065,
											"end": 26069,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26056,
											"end": 26062,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 25962,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25443,
											"end": 26077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26223,
											"end": 26257,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 26219,
											"end": 26220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26211,
											"end": 26217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26207,
											"end": 26221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26200,
											"end": 26258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26292,
											"end": 26303,
											"name": "PUSH",
											"source": 11,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26287,
											"end": 26289,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26279,
											"end": 26285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26275,
											"end": 26290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26268,
											"end": 26304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26083,
											"end": 26311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26459,
											"end": 26462,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 26544,
											"end": 26546,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 26539,
											"end": 26542,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 26480,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 26645,
											"end": 26648,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 26556,
											"end": 26649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26674,
											"end": 26676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 26669,
											"end": 26672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26665,
											"end": 26677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26855,
											"end": 26859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26893,
											"end": 26895,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26882,
											"end": 26891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26878,
											"end": 26896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26942,
											"end": 26951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26936,
											"end": 26940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26932,
											"end": 26952,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 26928,
											"end": 26929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26917,
											"end": 26926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26913,
											"end": 26930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26906,
											"end": 26953,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 27096,
											"end": 27100,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 26970,
											"end": 27101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26689,
											"end": 27108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27235,
											"end": 27239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27273,
											"end": 27275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 27262,
											"end": 27271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27258,
											"end": 27276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 27354,
											"end": 27355,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27343,
											"end": 27352,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27339,
											"end": 27356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27330,
											"end": 27336,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 27286,
											"end": 27357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 27435,
											"end": 27437,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27424,
											"end": 27433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27420,
											"end": 27438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27411,
											"end": 27417,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 27367,
											"end": 27439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27114,
											"end": 27446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 27557,
											"end": 27562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 27539,
											"end": 27563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27534,
											"end": 27537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27527,
											"end": 27564,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27452,
											"end": 27570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27627,
											"end": 27633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27661,
											"end": 27666,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27655,
											"end": 27667,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27763,
											"end": 27774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27797,
											"end": 27803,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27792,
											"end": 27795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27785,
											"end": 27804,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27837,
											"end": 27841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27832,
											"end": 27835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27828,
											"end": 27842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27680,
											"end": 27848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27940,
											"end": 27943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 28000,
											"end": 28005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 27968,
											"end": 28006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 28085,
											"end": 28091,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28080,
											"end": 28083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 28022,
											"end": 28092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 28146,
											"end": 28152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28141,
											"end": 28144,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28134,
											"end": 28138,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 28127,
											"end": 28132,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 28123,
											"end": 28139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 28101,
											"end": 28153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 28200,
											"end": 28206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 28178,
											"end": 28207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28173,
											"end": 28176,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 28169,
											"end": 28208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27944,
											"end": 28214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 28214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28543,
											"end": 28547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28581,
											"end": 28584,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 28570,
											"end": 28579,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28566,
											"end": 28585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28652,
											"end": 28661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28648,
											"end": 28665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28639,
											"end": 28645,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 28595,
											"end": 28666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 28744,
											"end": 28746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 28733,
											"end": 28742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28729,
											"end": 28747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28720,
											"end": 28726,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 28676,
											"end": 28748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28789,
											"end": 28793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28785,
											"end": 28805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 28780,
											"end": 28782,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 28769,
											"end": 28778,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28765,
											"end": 28783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28758,
											"end": 28806,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 28926,
											"end": 28930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28917,
											"end": 28923,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 28823,
											"end": 28931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28978,
											"end": 28987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28972,
											"end": 28976,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28968,
											"end": 28988,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 28963,
											"end": 28965,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 28952,
											"end": 28961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28941,
											"end": 28989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 29109,
											"end": 29113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29100,
											"end": 29106,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 29006,
											"end": 29114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29162,
											"end": 29171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29156,
											"end": 29160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29152,
											"end": 29172,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 29146,
											"end": 29149,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 29135,
											"end": 29144,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 29131,
											"end": 29150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29124,
											"end": 29173,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 29261,
											"end": 29265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29252,
											"end": 29258,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 29190,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28220,
											"end": 29273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29335,
											"end": 29340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29366,
											"end": 29372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29360,
											"end": 29373,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 29408,
											"end": 29413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 29382,
											"end": 29414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29279,
											"end": 29420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29495,
											"end": 29501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29544,
											"end": 29546,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 29532,
											"end": 29541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29523,
											"end": 29530,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 29519,
											"end": 29542,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 29515,
											"end": 29547,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 29550,
											"end": 29629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29670,
											"end": 29671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 29750,
											"end": 29757,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 29741,
											"end": 29747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29730,
											"end": 29739,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 29726,
											"end": 29748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 29695,
											"end": 29758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29641,
											"end": 29768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29426,
											"end": 29775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29825,
											"end": 29833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29874,
											"end": 29879,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29869,
											"end": 29872,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 29865,
											"end": 29880,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29781,
											"end": 29887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29928,
											"end": 29931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29966,
											"end": 29967,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 29948,
											"end": 29964,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 29945,
											"end": 29968,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30004,
											"end": 30005,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30001,
											"end": 30002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 29999,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 29983,
											"end": 30006,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30051,
											"end": 30059,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 30026,
											"end": 30060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29893,
											"end": 30076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30121,
											"end": 30124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30159,
											"end": 30163,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 30141,
											"end": 30157,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 30138,
											"end": 30164,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 30167,
											"end": 30172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 30196,
											"end": 30216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30271,
											"end": 30272,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30253,
											"end": 30269,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 30249,
											"end": 30273,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 30246,
											"end": 30247,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30240,
											"end": 30244,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30225,
											"end": 30274,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 30304,
											"end": 30308,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30298,
											"end": 30309,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 30403,
											"end": 30419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 30396,
											"end": 30400,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 30388,
											"end": 30394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30384,
											"end": 30401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30381,
											"end": 30420,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30348,
											"end": 30366,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30340,
											"end": 30346,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30337,
											"end": 30367,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30321,
											"end": 30434,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30495,
											"end": 30501,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30489,
											"end": 30493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30485,
											"end": 30502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30531,
											"end": 30534,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30525,
											"end": 30535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 30558,
											"end": 30576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30550,
											"end": 30556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30547,
											"end": 30577,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30628,
											"end": 30634,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30621,
											"end": 30625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 30616,
											"end": 30619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30612,
											"end": 30626,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30608,
											"end": 30635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30687,
											"end": 30688,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30669,
											"end": 30685,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 30665,
											"end": 30689,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 30659,
											"end": 30663,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 30655,
											"end": 30690,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30650,
											"end": 30653,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30647,
											"end": 30691,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 30759,
											"end": 30765,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30753,
											"end": 30757,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 30749,
											"end": 30766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30741,
											"end": 30747,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 30737,
											"end": 30767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30731,
											"end": 30735,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 30711,
											"end": 30768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30784,
											"end": 30787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30082,
											"end": 30793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30939,
											"end": 30973,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 30935,
											"end": 30936,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30927,
											"end": 30933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30923,
											"end": 30937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30916,
											"end": 30974,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31008,
											"end": 31030,
											"name": "PUSH",
											"source": 11,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31003,
											"end": 31005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 30995,
											"end": 31001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30991,
											"end": 31006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30984,
											"end": 31031,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30799,
											"end": 31038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31186,
											"end": 31189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 31271,
											"end": 31273,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 31266,
											"end": 31269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 31207,
											"end": 31274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 31372,
											"end": 31375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 31283,
											"end": 31376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31401,
											"end": 31403,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 31396,
											"end": 31399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31392,
											"end": 31404,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31044,
											"end": 31410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31582,
											"end": 31586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31620,
											"end": 31622,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31609,
											"end": 31618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31605,
											"end": 31623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31669,
											"end": 31678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31663,
											"end": 31667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31659,
											"end": 31679,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 31655,
											"end": 31656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31644,
											"end": 31653,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 31640,
											"end": 31657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31633,
											"end": 31680,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 31823,
											"end": 31827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 31697,
											"end": 31828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31416,
											"end": 31835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31981,
											"end": 32015,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 31977,
											"end": 31978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31969,
											"end": 31975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31965,
											"end": 31979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31958,
											"end": 32016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32050,
											"end": 32060,
											"name": "PUSH",
											"source": 11,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32045,
											"end": 32047,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32037,
											"end": 32043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32033,
											"end": 32048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32026,
											"end": 32061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31841,
											"end": 32068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32216,
											"end": 32219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 32301,
											"end": 32303,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 32296,
											"end": 32299,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 32237,
											"end": 32304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 32402,
											"end": 32405,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 32313,
											"end": 32406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "tag",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32431,
											"end": 32433,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 32426,
											"end": 32429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32422,
											"end": 32434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32074,
											"end": 32440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32612,
											"end": 32616,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32650,
											"end": 32652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32639,
											"end": 32648,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32635,
											"end": 32653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32699,
											"end": 32708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32693,
											"end": 32697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32689,
											"end": 32709,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 32685,
											"end": 32686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32674,
											"end": 32683,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 32670,
											"end": 32687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32663,
											"end": 32710,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 32853,
											"end": 32857,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 32727,
											"end": 32858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "tag",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32446,
											"end": 32865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33094,
											"end": 33098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33132,
											"end": 33135,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 33121,
											"end": 33130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33117,
											"end": 33136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 33214,
											"end": 33215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33203,
											"end": 33212,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33199,
											"end": 33216,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33190,
											"end": 33196,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 33146,
											"end": 33217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 33295,
											"end": 33297,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33284,
											"end": 33293,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33280,
											"end": 33298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33271,
											"end": 33277,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 33227,
											"end": 33299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 33377,
											"end": 33379,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 33366,
											"end": 33375,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33362,
											"end": 33380,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33353,
											"end": 33359,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 33309,
											"end": 33381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 33459,
											"end": 33461,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 33448,
											"end": 33457,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33444,
											"end": 33462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33435,
											"end": 33441,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 33391,
											"end": 33463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33511,
											"end": 33520,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33501,
											"end": 33521,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33495,
											"end": 33498,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 33484,
											"end": 33493,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33480,
											"end": 33499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33473,
											"end": 33522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 33610,
											"end": 33614,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33601,
											"end": 33607,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 33539,
											"end": 33615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32871,
											"end": 33622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/tut.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094b739245a758852975edd9a87ab778b8225ebf08c5dc50f5cfe2ef1313cfa4964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b739245a758852975edd9a87ab778b8225ebf08c5dc50f5cfe2ef1313cfa4964736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB7 CODECOPY 0x24 GAS PUSH22 0x8852975EDD9A87AB778B8225EBF08C5DC50F5CFE2EF1 BALANCE EXTCODECOPY STATICCALL 0x49 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b739245a758852975edd9a87ab778b8225ebf08c5dc50f5cfe2ef1313cfa4964736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB7 CODECOPY 0x24 GAS PUSH22 0x8852975EDD9A87AB778B8225EBF08C5DC50F5CFE2EF1 BALANCE EXTCODECOPY STATICCALL 0x49 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094b739245a758852975edd9a87ab778b8225ebf08c5dc50f5cfe2ef1313cfa4964736f6c634300080f0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/tut.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SDIV LOG4 0xD7 0xDE SELFBALANCE NUMBER SAR DUP14 CREATE PUSH3 0x8F6915 0x1F SGT SWAP9 PUSH14 0xBB81712B4B5E4D1927BA3448FB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SDIV LOG4 0xD7 0xDE SELFBALANCE NUMBER SAR DUP14 CREATE PUSH3 0x8F6915 0x1F SGT SWAP9 PUSH14 0xBB81712B4B5E4D1927BA3448FB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/tut.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1822
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 1823,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1822,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								1822
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1800
						],
						"Context": [
							1822
						],
						"ERC1155": [
							1327
						],
						"ERC165": [
							2049
						],
						"IERC1155": [
							1449
						],
						"IERC1155MetadataURI": [
							1505
						],
						"IERC1155Receiver": [
							1490
						],
						"IERC165": [
							2061
						]
					},
					"id": 1328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1450,
							"src": "134:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1491,
							"src": "159:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1506,
							"src": "192:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1801,
							"src": "239:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1823,
							"src": "273:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 2050,
							"src": "307:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 114,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1822,
										"src": "590:7:1"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:1"
								},
								{
									"baseName": {
										"id": 116,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2049,
										"src": "599:6:1"
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:1"
								},
								{
									"baseName": {
										"id": 118,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1449,
										"src": "607:8:1"
									},
									"id": 119,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:1"
								},
								{
									"baseName": {
										"id": 120,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1505,
										"src": "617:19:1"
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1327,
							"linearizedBaseContracts": [
								1327,
								1505,
								1449,
								2049,
								2061,
								1822
							],
							"name": "ERC1155",
							"nameLocation": "579:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 124,
									"libraryName": {
										"id": 122,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1800,
										"src": "649:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:1",
									"typeName": {
										"id": 123,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1327,
									"src": "724:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 129,
										"keyType": {
											"id": 125,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 128,
											"keyType": {
												"id": 126,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 127,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1327,
									"src": "846:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 134,
											"keyType": {
												"id": 132,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 133,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1327,
									"src": "1038:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1139:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1157:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 144,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "1149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1119:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:1"
									},
									"scope": 1327,
									"src": "1107:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2048,
										2060
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1344:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 160,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1373:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 162,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "1393:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1449_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1449_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 161,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1449",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1430:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 168,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "1450:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1505_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1505_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 167,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1505",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 175,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1522:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 173,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1327_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "1498:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 159,
												"id": 178,
												"nodeType": "Return",
												"src": "1354:180:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 156,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 154,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2049,
												"src": "1312:6:1"
											},
											{
												"id": 155,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2061,
												"src": "1320:7:1"
											}
										],
										"src": "1303:25:1"
									},
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 151,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1338:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:1"
									},
									"scope": 1327,
									"src": "1236:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1504
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2015:28:1",
										"statements": [
											{
												"expression": {
													"id": 189,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2032:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "2025:11:1"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:1"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1953:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2000:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:1"
									},
									"scope": 1327,
									"src": "1940:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2280:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 204,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2298:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2290:77:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 213,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2384:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 215,
														"indexExpression": {
															"id": 214,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2394:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 217,
													"indexExpression": {
														"id": 216,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2384:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 218,
												"nodeType": "Return",
												"src": "2377:29:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:1",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 199,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:1"
									},
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2271:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:1"
									},
									"scope": 1327,
									"src": "2185:228:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1400
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2743:335:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 235,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "2761:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2761:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 237,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2780:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2780:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2761:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2753:83:1"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2864:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "2847:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 245,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2847:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 246,
															"nodeType": "ArrayTypeName",
															"src": "2847:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 251,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2894:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2894:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2880:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 248,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2884:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 249,
															"nodeType": "ArrayTypeName",
															"src": "2884:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:63:1"
											},
											{
												"body": {
													"id": 279,
													"nodeType": "Block",
													"src": "2967:74:1",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 266,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "2981:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"id": 267,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2995:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2981:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 270,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3010:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "3019:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3010:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 273,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "3023:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 275,
																			"indexExpression": {
																				"id": 274,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "3027:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3023:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 269,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "3000:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3000:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2981:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "2981:49:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 259,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2941:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 260,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2945:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2945:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"initializationExpression": {
													"assignments": [
														256
													],
													"declarations": [
														{
															"constant": false,
															"id": 256,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2934:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 280,
															"src": "2926:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 255,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2926:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 258,
													"initialValue": {
														"hexValue": "30",
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2926:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2962:3:1",
														"subExpression": {
															"id": 263,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "2964:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 265,
													"nodeType": "ExpressionStatement",
													"src": "2962:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2921:120:1"
											},
											{
												"expression": {
													"id": 281,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "3058:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 233,
												"id": 282,
												"nodeType": "Return",
												"src": "3051:20:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2419:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2579:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2695:8:1"
									},
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2611:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2594:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 222,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 223,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2638:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2621:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 225,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 226,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:49:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2721:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 230,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2721:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 231,
													"nodeType": "ArrayTypeName",
													"src": "2721:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:18:1"
									},
									"scope": 1327,
									"src": "2570:508:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1408
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3230:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 294,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "3259:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3273:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3283:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 293,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3240:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "3084:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3155:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:1"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3173:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3196:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3191:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3172:33:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:1"
									},
									"scope": 1327,
									"src": "3146:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1418
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3471:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 312,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3488:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 313,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3507:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3488:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "3516:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3488:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "3481:44:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:1"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3392:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3409:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3465:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:1"
									},
									"scope": 1327,
									"src": "3366:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3768:220:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 335,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "3799:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 336,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "3807:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3807:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3799:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "3840:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 341,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "3846:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3846:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 339,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "3823:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3823:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3799:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3778:148:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3954:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3960:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3964:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 352,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3968:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 348,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3936:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3936:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3936:45:1"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "3538:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3608:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 332,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3759:8:1"
									},
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3664:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3656:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3684:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3676:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3704:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3696:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3720:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:119:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:1"
									},
									"scope": 1327,
									"src": "3599:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1448
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "4254:236:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 375,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "4285:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 376,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "4293:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4293:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4285:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 380,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "4326:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 381,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "4332:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4332:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 379,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4309:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4285:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4359:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4264:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4264:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4264:157:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4454:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4460:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4464:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 392,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 393,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4478:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 388,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "4431:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3994:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4069:21:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4245:8:1"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4108:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4100:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4130:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4122:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4142:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"nodeType": "ArrayTypeName",
													"src": "4142:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4189:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4172:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4172:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 367,
													"nodeType": "ArrayTypeName",
													"src": "4172:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4206:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:139:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:1"
									},
									"scope": 1327,
									"src": "4060:430:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "5103:784:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "5121:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:1"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "5190:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "5209:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:1"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "5231:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 428,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 429,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5272:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5254:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:1"
											},
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "5285:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 437,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5312:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5369:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5385:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5389:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 449,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "5403:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 444,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "5348:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:1"
											},
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "5419:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 455,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "5441:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 457,
														"indexExpression": {
															"id": 456,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5451:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 459,
													"indexExpression": {
														"id": 458,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "5455:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "5478:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 463,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "5493:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:1"
											},
											{
												"id": 478,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:1",
												"statements": [
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 468,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "5580:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 471,
																	"indexExpression": {
																		"id": 469,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "5590:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 472,
																"indexExpression": {
																	"id": 470,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5594:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "5602:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 474,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5616:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 479,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "5642:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 482,
															"indexExpression": {
																"id": 480,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "5652:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5656:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 484,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5663:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 488,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5700:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5710:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5716:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5720:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 492,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5724:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "5685:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "EmitStatement",
												"src": "5680:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5762:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5772:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5778:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5782:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 500,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5787:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "5796:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 495,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "5742:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5843:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5853:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5859:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5863:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5867:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "5875:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 504,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "5812:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:1"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "4976:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "4998:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5018:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5038:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5062:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:1"
									},
									"scope": 1327,
									"src": "4940:947:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "6421:927:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 531,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "6439:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 533,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "6453:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 540,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6530:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:1"
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "6599:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 549,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 551,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "6618:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "6662:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6672:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "6678:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6682:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 559,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6687:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6696:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 554,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "6641:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:1"
											},
											{
												"body": {
													"id": 620,
													"nodeType": "Block",
													"src": "6753:370:1",
													"statements": [
														{
															"assignments": [
																575
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 575,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 620,
																	"src": "6767:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 574,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 579,
															"initialValue": {
																"baseExpression": {
																	"id": 576,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "6780:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 578,
																"indexExpression": {
																	"id": 577,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "6784:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:1"
														},
														{
															"assignments": [
																581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 581,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 620,
																	"src": "6800:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 585,
															"initialValue": {
																"baseExpression": {
																	"id": 582,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "6817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 584,
																"indexExpression": {
																	"id": 583,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "6825:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:1"
														},
														{
															"assignments": [
																587
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 587,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 620,
																	"src": "6842:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 593,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 588,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "6864:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 590,
																	"indexExpression": {
																		"id": 589,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "6874:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 592,
																"indexExpression": {
																	"id": 591,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "6878:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 595,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6905:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 596,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "6920:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 594,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:1"
														},
														{
															"id": 611,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 601,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 130,
																					"src": "7015:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 604,
																				"indexExpression": {
																					"id": 602,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "7025:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 605,
																			"indexExpression": {
																				"id": 603,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 517,
																				"src": "7029:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 606,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "7037:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 607,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 581,
																				"src": "7051:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 610,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:1"
																}
															]
														},
														{
															"expression": {
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 612,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "7085:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 615,
																		"indexExpression": {
																			"id": 613,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "7095:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 616,
																	"indexExpression": {
																		"id": 614,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7099:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 617,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "7106:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "6732:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 568,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6736:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"initializationExpression": {
													"assignments": [
														564
													],
													"declarations": [
														{
															"constant": false,
															"id": 564,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 621,
															"src": "6717:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 563,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 566,
													"initialValue": {
														"hexValue": "30",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:1",
														"subExpression": {
															"id": 571,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "6750:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 573,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 623,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "7152:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7172:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 627,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7177:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 622,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "7138:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "7133:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "7216:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7226:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7232:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7236:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 635,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7241:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 636,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7250:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 630,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "7196:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "7302:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7312:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7318:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7322:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 644,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7336:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 639,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "7266:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "6274:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "6296:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "6316:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "6346:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 523,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 524,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "6380:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:1"
									},
									"scope": 1327,
									"src": "6233:1115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "8227:30:1",
										"statements": [
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 655,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "8237:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "8244:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:1"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "8188:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:1"
									},
									"scope": 1327,
									"src": "8171:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "8759:580:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "8777:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:1"
											},
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "8842:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 682,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 684,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "8861:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:1"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "8883:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 689,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 690,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "8924:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "8906:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:1"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "8937:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 698,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 699,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"arguments": [
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "8964:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9021:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "9043:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9047:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 713,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "9052:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 714,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9061:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 705,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "9000:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:1"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 717,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "9077:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 720,
															"indexExpression": {
																"id": 718,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "9087:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 719,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "9091:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 722,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9098:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9134:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "9156:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "9160:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 733,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9164:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "9119:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "EmitStatement",
												"src": "9114:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9202:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "9224:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9228:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 744,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "9233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 745,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9242:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 736,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9182:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9289:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "9311:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "9315:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9319:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 757,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9327:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 748,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "9258:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:1"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:1",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8654:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8674:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8718:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:1"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:1"
									},
									"scope": 1327,
									"src": "8630:709:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "9838:637:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "9856:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9862:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 777,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9862:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9862:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9856:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9874:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9848:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "9848:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 786,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "9928:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9928:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 788,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "9942:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9942:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9928:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:1"
											},
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10020:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10012:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 794,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 796,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "10031:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10075:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10093:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 801,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "10097:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10101:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 807,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10106:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 808,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10115:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 799,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "10054:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "10054:66:1"
											},
											{
												"body": {
													"id": 834,
													"nodeType": "Block",
													"src": "10172:60:1",
													"statements": [
														{
															"expression": {
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 822,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "10186:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 827,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 823,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "10196:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 825,
																			"indexExpression": {
																				"id": 824,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "10200:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10196:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10186:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"id": 826,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "10204:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10186:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 829,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "10211:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 831,
																	"indexExpression": {
																		"id": 830,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "10219:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10211:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "10186:35:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "10151:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 816,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10155:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10155:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"initializationExpression": {
													"assignments": [
														812
													],
													"declarations": [
														{
															"constant": false,
															"id": 812,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10144:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 835,
															"src": "10136:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 814,
													"initialValue": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10136:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10167:3:1",
														"subExpression": {
															"id": 819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "10167:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 821,
													"nodeType": "ExpressionStatement",
													"src": "10167:3:1"
												},
												"nodeType": "ForStatement",
												"src": "10131:101:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 837,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10261:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "10283:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10287:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 844,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10292:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 836,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "10247:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "10242:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10331:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10341:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "10353:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10357:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 855,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10371:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 847,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "10311:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "10311:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10423:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "10445:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10449:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10463:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 859,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "10387:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "10387:81:1"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "9345:334:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9693:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9721:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "9713:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9750:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "9733:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 765,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9733:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 766,
													"nodeType": "ArrayTypeName",
													"src": "9733:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9780:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "9763:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 768,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 769,
													"nodeType": "ArrayTypeName",
													"src": "9763:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9810:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "9797:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9797:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9703:117:1"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9838:0:1"
									},
									"scope": 1327,
									"src": "9684:791:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "10819:682:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "10837:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10837:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10857:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10829:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "10829:66:1"
											},
											{
												"assignments": [
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10914:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "10906:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 892,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10906:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 894,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "10925:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10925:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10906:31:1"
											},
											{
												"assignments": [
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10964:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "10947:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 899,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10947:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 900,
															"nodeType": "ArrayTypeName",
															"src": "10947:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "10988:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "10970:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:44:1"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11018:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "11001:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 908,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11001:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 909,
															"nodeType": "ArrayTypeName",
															"src": "11001:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [
														{
															"id": 912,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "11046:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "11028:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11001:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "11085:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "11095:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "11113:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 923,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "11118:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 915,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "11064:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11064:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "11064:66:1"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11149:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "11141:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 929,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "11163:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 931,
														"indexExpression": {
															"id": 930,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "11173:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11163:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 933,
													"indexExpression": {
														"id": 932,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "11177:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11163:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "11200:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 937,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "11215:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11200:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11223:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11192:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "11192:70:1"
											},
											{
												"id": 952,
												"nodeType": "UncheckedBlock",
												"src": "11272:77:1",
												"statements": [
													{
														"expression": {
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 942,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "11296:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 945,
																	"indexExpression": {
																		"id": 943,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "11306:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11296:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 946,
																"indexExpression": {
																	"id": 944,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "11310:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11296:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "11318:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 948,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "11332:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11318:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11296:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 951,
														"nodeType": "ExpressionStatement",
														"src": "11296:42:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 954,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "11379:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "11389:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11403:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11395:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11395:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11395:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "11407:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 961,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "11411:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "11364:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11364:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "EmitStatement",
												"src": "11359:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "11449:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "11459:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 967,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11465:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "11477:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 972,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "11482:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11491:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 964,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "11429:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "11429:65:1"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "10481:229:1",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10724:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10747:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10739:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10789:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10729:72:1"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:0:1"
									},
									"scope": 1327,
									"src": "10715:786:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "11824:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "11842:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11858:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11850:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11850:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11850:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11842:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11862:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11834:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "11834:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1000,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "11918:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11918:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1002,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "11932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11932:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11910:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "11910:81:1"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12010:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "12002:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1008,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1010,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "12021:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12065:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "12075:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12089:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12081:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12081:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12081:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "12093:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1021,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "12098:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12107:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1013,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "12044:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12044:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "12044:66:1"
											},
											{
												"body": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12162:323:1",
													"statements": [
														{
															"assignments": [
																1037
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1037,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12184:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1074,
																	"src": "12176:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1036,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12176:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1041,
															"initialValue": {
																"baseExpression": {
																	"id": 1038,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "12189:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1040,
																"indexExpression": {
																	"id": 1039,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "12193:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12189:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12176:19:1"
														},
														{
															"assignments": [
																1043
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1043,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12217:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1074,
																	"src": "12209:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12209:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1047,
															"initialValue": {
																"baseExpression": {
																	"id": 1044,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "12226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1046,
																"indexExpression": {
																	"id": 1045,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "12234:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12226:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12209:27:1"
														},
														{
															"assignments": [
																1049
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1049,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12259:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1074,
																	"src": "12251:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1048,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12251:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1055,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1050,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "12273:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1052,
																	"indexExpression": {
																		"id": 1051,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "12283:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12273:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1054,
																"indexExpression": {
																	"id": 1053,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "12287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12273:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12251:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1057,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1049,
																			"src": "12314:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1058,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "12329:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12314:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12337:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1056,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12306:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12306:70:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1062,
															"nodeType": "ExpressionStatement",
															"src": "12306:70:1"
														},
														{
															"id": 1073,
															"nodeType": "UncheckedBlock",
															"src": "12390:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1063,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 130,
																					"src": "12418:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1066,
																				"indexExpression": {
																					"id": 1064,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12428:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12418:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1067,
																			"indexExpression": {
																				"id": 1065,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 980,
																				"src": "12432:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12418:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1068,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "12440:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1069,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1043,
																				"src": "12454:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12440:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12418:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1072,
																	"nodeType": "ExpressionStatement",
																	"src": "12418:42:1"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1029,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "12141:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1030,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "12145:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12145:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12141:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"initializationExpression": {
													"assignments": [
														1026
													],
													"declarations": [
														{
															"constant": false,
															"id": 1026,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12134:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1075,
															"src": "12126:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1025,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12126:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1028,
													"initialValue": {
														"hexValue": "30",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12138:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12126:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12157:3:1",
														"subExpression": {
															"id": 1033,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12157:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1035,
													"nodeType": "ExpressionStatement",
													"src": "12157:3:1"
												},
												"nodeType": "ForStatement",
												"src": "12121:364:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "12524:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12538:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12530:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1079,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12530:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12530:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "12542:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1084,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "12547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1076,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "12500:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "EmitStatement",
												"src": "12495:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12586:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "12596:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12610:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1090,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "12614:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1095,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "12619:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12628:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1087,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "12566:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12566:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "12566:65:1"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "11507:183:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11704:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11732:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "11724:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11763:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "11746:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 981,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 982,
													"nodeType": "ArrayTypeName",
													"src": "11746:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11793:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "11776:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 984,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11776:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 985,
													"nodeType": "ArrayTypeName",
													"src": "11776:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11714:92:1"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11824:0:1"
									},
									"scope": 1327,
									"src": "11695:943:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "12896:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "12914:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1112,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "12923:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12933:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "12906:71:1"
											},
											{
												"expression": {
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1117,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "12987:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1120,
															"indexExpression": {
																"id": 1118,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "13006:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12987:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1121,
														"indexExpression": {
															"id": 1119,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "13013:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12987:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1122,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "13025:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12987:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "12987:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1126,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "13063:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "13070:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13080:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1125,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "13048:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "EmitStatement",
												"src": "13043:46:1"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "12644:124:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12782:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12818:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "12810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12841:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "12833:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12833:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12864:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "12859:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12859:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:78:1"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:1"
									},
									"scope": 1327,
									"src": "12773:323:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "14242:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "13102:923:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14039:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14077:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14069:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14103:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14095:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14095:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14154:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14137:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1140,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1141,
													"nodeType": "ArrayTypeName",
													"src": "14137:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14184:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14167:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1143,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1144,
													"nodeType": "ArrayTypeName",
													"src": "14167:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14214:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14201:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14201:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14059:165:1"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:1"
									},
									"scope": 1327,
									"src": "14030:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15388:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "14250:922:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15186:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15223:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15215:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15241:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15271:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15263:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15300:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15283:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1159,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15283:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1160,
													"nodeType": "ArrayTypeName",
													"src": "15283:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15330:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15313:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1162,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15313:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1163,
													"nodeType": "ArrayTypeName",
													"src": "15313:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15347:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15347:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15205:165:1"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15388:0:1"
									},
									"scope": 1327,
									"src": "15177:213:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "15589:532:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1185,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "15603:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1523,
														"src": "15603:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15603:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"nodeType": "IfStatement",
												"src": "15599:516:1",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "15620:495:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1212,
																		"nodeType": "Block",
																		"src": "15737:184:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1201,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "15759:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1202,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1490,
																								"src": "15771:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1490_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1203,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1471,
																							"src": "15771:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1204,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15771:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15759:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1211,
																				"nodeType": "IfStatement",
																				"src": "15755:152:1",
																				"trueBody": {
																					"id": 1210,
																					"nodeType": "Block",
																					"src": "15816:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1207,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15845:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1206,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15838:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1208,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15838:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1209,
																							"nodeType": "ExpressionStatement",
																							"src": "15838:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1213,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1200,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1199,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15727:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1213,
																				"src": "15720:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1198,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:17:1"
																	},
																	"src": "15711:210:1"
																},
																{
																	"block": {
																		"id": 1221,
																		"nodeType": "Block",
																		"src": "15956:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1218,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1215,
																							"src": "15981:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1217,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15974:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15974:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1220,
																				"nodeType": "ExpressionStatement",
																				"src": "15974:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1222,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1216,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1215,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15948:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1222,
																				"src": "15934:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1214,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15934:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15933:22:1"
																	},
																	"src": "15922:81:1"
																},
																{
																	"block": {
																		"id": 1227,
																		"nodeType": "Block",
																		"src": "16010:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1224,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16035:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1223,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16028:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16028:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1226,
																				"nodeType": "ExpressionStatement",
																				"src": "16028:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1228,
																	"nodeType": "TryCatchClause",
																	"src": "16004:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1192,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "15677:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1193,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "15687:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1194,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "15693:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1195,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "15697:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1196,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "15705:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1189,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "15655:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1188,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "15638:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1490_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15638:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1490",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1471,
																	"src": "15638:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15638:72:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1229,
															"nodeType": "TryStatement",
															"src": "15634:471:1"
														}
													]
												}
											}
										]
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15405:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15453:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15445:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15479:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15471:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15501:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15493:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15521:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15513:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15541:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15533:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15570:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "15557:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:145:1"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15589:0:1"
									},
									"scope": 1327,
									"src": "15396:725:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "16345:574:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1250,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "16359:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1523,
														"src": "16359:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16359:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "16355:558:1",
												"trueBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "16376:537:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1277,
																		"nodeType": "Block",
																		"src": "16530:189:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1266,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1264,
																						"src": "16552:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1267,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1490,
																								"src": "16564:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1490_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1268,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1489,
																							"src": "16564:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16564:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16552:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1276,
																				"nodeType": "IfStatement",
																				"src": "16548:157:1",
																				"trueBody": {
																					"id": 1275,
																					"nodeType": "Block",
																					"src": "16614:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1272,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16643:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1271,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16636:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1273,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16636:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1274,
																							"nodeType": "ExpressionStatement",
																							"src": "16636:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1278,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1265,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1264,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16507:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1278,
																				"src": "16500:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1263,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16500:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16482:47:1"
																	},
																	"src": "16474:245:1"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "16754:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1283,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1280,
																							"src": "16779:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1282,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16772:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16772:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1285,
																				"nodeType": "ExpressionStatement",
																				"src": "16772:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1281,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1280,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16746:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "16732:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1279,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16732:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16731:22:1"
																	},
																	"src": "16720:81:1"
																},
																{
																	"block": {
																		"id": 1292,
																		"nodeType": "Block",
																		"src": "16808:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1289,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16833:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1288,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16826:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16826:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1291,
																				"nodeType": "ExpressionStatement",
																				"src": "16826:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1293,
																	"nodeType": "TryCatchClause",
																	"src": "16802:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1257,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "16438:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1258,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "16448:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "16454:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1260,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "16459:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1261,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "16468:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1254,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "16411:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1253,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "16394:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1490_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16394:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1490",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1489,
																	"src": "16394:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16394:79:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1294,
															"nodeType": "TryStatement",
															"src": "16390:513:1"
														}
													]
												}
											}
										]
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16136:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16189:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16181:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16215:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16207:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16237:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16229:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16266:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16249:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1240,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16249:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1241,
													"nodeType": "ArrayTypeName",
													"src": "16249:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16296:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16279:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1243,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1244,
													"nodeType": "ArrayTypeName",
													"src": "16279:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16326:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "16313:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:165:1"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:1"
									},
									"scope": 1327,
									"src": "16127:792:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "17009:109:1",
										"statements": [
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17036:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "17019:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1308,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17019:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1309,
															"nodeType": "ArrayTypeName",
															"src": "17019:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17058:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17044:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1311,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17048:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1312,
															"nodeType": "ArrayTypeName",
															"src": "17048:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17019:41:1"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1317,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "17070:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1319,
														"indexExpression": {
															"hexValue": "30",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17076:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17070:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1320,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "17081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "17070:18:1"
											},
											{
												"expression": {
													"id": 1323,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1310,
													"src": "17106:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1324,
												"nodeType": "Return",
												"src": "17099:12:1"
											}
										]
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "16934:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "16960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "16952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:17:1"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "16991:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16991:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "16991:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16990:18:1"
									},
									"scope": 1327,
									"src": "16925:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1328,
							"src": "570:16550:1",
							"usedErrors": []
						}
					],
					"src": "109:17012:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1449
						],
						"IERC165": [
							2061
						]
					},
					"id": 1450,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1450,
							"sourceUnit": 2062,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1332,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2061,
										"src": "357:7:2"
									},
									"id": 1333,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1449,
							"linearizedBaseContracts": [
								1449,
								2061
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1346,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1361,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1354,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1355,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1357,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1358,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1370,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1377,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 1449,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1389,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1390,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1393,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1396,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1397,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 1449,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 1449,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 1449,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 1449,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 1449,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1450,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1490
						],
						"IERC165": [
							2061
						]
					},
					"id": 1491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1451,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1491,
							"sourceUnit": 2062,
							"src": "143:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1454,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2061,
										"src": "262:7:3"
									},
									"id": 1455,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1453,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1490,
							"linearizedBaseContracts": [
								1490,
								2061
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1143:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1169:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1191:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1211:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1234:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:3"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1278:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:3"
									},
									"scope": 1490,
									"src": "1107:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2332:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2358:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2380:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1477,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1478,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2412:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1481,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2447:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:3"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2491:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1486,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:3"
									},
									"scope": 1490,
									"src": "2291:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1491,
							"src": "232:2269:3",
							"usedErrors": []
						}
					],
					"src": "118:2384:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1449
						],
						"IERC1155MetadataURI": [
							1505
						],
						"IERC165": [
							2061
						]
					},
					"id": 1506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 1450,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1495,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1449,
										"src": "397:8:4"
									},
									"id": 1496,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1494,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1505,
							"linearizedBaseContracts": [
								1505,
								1449,
								2061
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1505,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1506,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1800
						]
					},
					"id": 1801,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1507,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1508,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1800,
							"linearizedBaseContracts": [
								1800
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1516,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1515,
												"id": 1521,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1800,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1534,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1800",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1800",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1532,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1537,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1543,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1542,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1550,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1544,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1546,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1800,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1567,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1574,
															1594
														],
														"referencedDeclaration": 1594,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1572,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1800,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1588,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1590,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1586,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1614,
															1664
														],
														"referencedDeclaration": 1664,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1592,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 1800,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1607,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1609,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1606,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1614,
															1664
														],
														"referencedDeclaration": 1664,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1605,
												"id": 1612,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 1800,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1631,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1800",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1800",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1634,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1641,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1640,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													1647,
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1663,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1646,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1663,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1648,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"arguments": [
														{
															"id": 1654,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1650,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1659,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1660,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1657,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1662,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 1800,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1674,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1681,
															1716
														],
														"referencedDeclaration": 1716,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1679,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 1800,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1695,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1694,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													1701,
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1700,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"id": 1706,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1704,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1711,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1712,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1714,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 1800,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1726,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1733,
															1768
														],
														"referencedDeclaration": 1768,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1731,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 1800,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1747,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1746,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													1753,
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1752,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1754,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"id": 1758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1762,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1763,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1764,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1761,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1766,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 1800,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 1780,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1771,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1784,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1794,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1791,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1790,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1793,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 1795,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 1789,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1773,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1773,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1788,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1797,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 1783,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 1781,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1779,
															"id": 1782,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 1800,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1801,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1822
						]
					},
					"id": 1823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1802,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1803,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1808,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1810,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1822,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1817,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1819,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1822,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2025
						]
					},
					"id": 2026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1825,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2025,
							"linearizedBaseContracts": [
								2025
							],
							"name": "Strings",
							"nameLocation": "154:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1828,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2025,
									"src": "168:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1826,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "399:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1836,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "597:51:7",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "613:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1835,
															"id": 1840,
															"nodeType": "Return",
															"src": "627:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "657:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"id": 1845,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1831,
													"src": "672:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:7"
											},
											{
												"assignments": [
													1848
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "687:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:7"
											},
											{
												"body": {
													"id": 1860,
													"nodeType": "Block",
													"src": "729:57:7",
													"statements": [
														{
															"expression": {
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:7",
																"subExpression": {
																	"id": 1853,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "743:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1855,
															"nodeType": "ExpressionStatement",
															"src": "743:8:7"
														},
														{
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1856,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "765:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "765:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1850,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "718:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "WhileStatement",
												"src": "711:75:7"
											},
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "795:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"id": 1866,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "827:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1864,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:7"
											},
											{
												"body": {
													"id": 1899,
													"nodeType": "Block",
													"src": "863:131:7",
													"statements": [
														{
															"expression": {
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1872,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "877:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1875,
															"nodeType": "ExpressionStatement",
															"src": "877:11:7"
														},
														{
															"expression": {
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1876,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "902:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1878,
																	"indexExpression": {
																		"id": 1877,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "909:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1890,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1883,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1888,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1886,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1831,
																									"src": "945:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1887,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1885,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1884,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1889,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1881,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1879,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "902:56:7"
														},
														{
															"expression": {
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1898,
															"nodeType": "ExpressionStatement",
															"src": "972:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "851:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1900,
												"nodeType": "WhileStatement",
												"src": "844:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1901,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1905,
												"nodeType": "Return",
												"src": "1003:21:7"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:7"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "384:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:7"
									},
									"scope": 2025,
									"src": "328:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "1210:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1915,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "1224:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1921,
												"nodeType": "IfStatement",
												"src": "1220:54:7",
												"trueBody": {
													"id": 1920,
													"nodeType": "Block",
													"src": "1236:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1914,
															"id": 1919,
															"nodeType": "Return",
															"src": "1250:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													1923
												],
												"declarations": [
													{
														"constant": false,
														"id": 1923,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "1283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1925,
												"initialValue": {
													"id": 1924,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1910,
													"src": "1298:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:7"
											},
											{
												"assignments": [
													1927
												],
												"declarations": [
													{
														"constant": false,
														"id": 1927,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "1313:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1929,
												"initialValue": {
													"hexValue": "30",
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:7"
											},
											{
												"body": {
													"id": 1940,
													"nodeType": "Block",
													"src": "1359:57:7",
													"statements": [
														{
															"expression": {
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:7",
																"subExpression": {
																	"id": 1933,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "1373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:7"
														},
														{
															"expression": {
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1936,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1939,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "1348:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "WhileStatement",
												"src": "1341:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "1444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1944,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "1451:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1942,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1948,
															2024
														],
														"referencedDeclaration": 2024,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1914,
												"id": 1946,
												"nodeType": "Return",
												"src": "1425:33:7"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:7"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1195:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:7"
									},
									"scope": 2025,
									"src": "1136:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "1678:351:7",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2023,
														"src": "1688:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1958,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1968,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1963,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "1724:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1960,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:7"
											},
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1969,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1745:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1971,
														"indexExpression": {
															"hexValue": "30",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:7"
											},
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1770:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1977,
														"indexExpression": {
															"hexValue": "31",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:7"
											},
											{
												"body": {
													"id": 2009,
													"nodeType": "Block",
													"src": "1840:87:7",
													"statements": [
														{
															"expression": {
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1995,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "1854:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1997,
																	"indexExpression": {
																		"id": 1996,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "1861:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1998,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "1866:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2002,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1999,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "1879:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2004,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:7"
														},
														{
															"expression": {
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "1905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1989,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "1828:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2010,
												"initializationExpression": {
													"assignments": [
														1982
													],
													"declarations": [
														{
															"constant": false,
															"id": 1982,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2010,
															"src": "1800:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1981,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1988,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1984,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "1816:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:7",
														"subExpression": {
															"id": 1992,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "1837:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1994,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2020,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "2015:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2018,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1957,
												"id": 2022,
												"nodeType": "Return",
												"src": "2001:21:7"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1624:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:7"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"scope": 2025,
									"src": "1588:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2026,
							"src": "146:1885:7",
							"usedErrors": []
						}
					],
					"src": "86:1946:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2049
						],
						"IERC165": [
							2061
						]
					},
					"id": 2050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2028,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2050,
							"sourceUnit": 2062,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2030,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2061,
										"src": "754:7:8"
									},
									"id": 2031,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2029,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2049,
							"linearizedBaseContracts": [
								2049,
								2061
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2060
									],
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2040,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2042,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2061_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2061_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2041,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2061",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2039,
												"id": 2046,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2036,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 2049,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2050,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						]
					},
					"id": 2062,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2052,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2061,
							"linearizedBaseContracts": [
								2061
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2054,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 2061,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2062,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/tut.sol": {
				"ast": {
					"absolutePath": "contracts/tut.sol",
					"exportedSymbols": {
						"Address": [
							1800
						],
						"Context": [
							1822
						],
						"ERC1155": [
							1327
						],
						"ERC165": [
							2049
						],
						"IERC1155": [
							1449
						],
						"IERC1155MetadataURI": [
							1505
						],
						"IERC1155Receiver": [
							1490
						],
						"IERC165": [
							2061
						],
						"Ownable": [
							104
						],
						"Strings": [
							2025
						]
					},
					"id": 2067,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 1328,
							"src": "61:59:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2065,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 105,
							"src": "121:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 2026,
							"src": "174:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "36:189:10"
				},
				"id": 10
			}
		}
	}
}